{"version":3,"sources":["webpack://jon-trombone/webpack/universalModuleDefinition","webpack://jon-trombone/webpack/bootstrap","webpack://jon-trombone/./node_modules/babel-runtime/helpers/classCallCheck.js","webpack://jon-trombone/./node_modules/babel-runtime/helpers/createClass.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_wks.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_core.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_global.js","webpack://jon-trombone/./node_modules/jsmidgen/lib/jsmidgen.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_has.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_descriptors.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_is-object.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_object-dp.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_hide.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_iterators.js","webpack://jon-trombone/./node_modules/babel-runtime/core-js/get-iterator.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_fails.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_an-object.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_uid.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_shared-key.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_to-integer.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_defined.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_to-iobject.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_export.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_shared.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_iter-define.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_cof.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_property-desc.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_dom-create.js","webpack://jon-trombone/./node_modules/midi-file-parser/index.js","webpack://jon-trombone/./node_modules/midiconvert/src/Util.js","webpack://jon-trombone/./node_modules/midiconvert/src/BinaryInsert.js","webpack://jon-trombone/./node_modules/midiconvert/src/Control.js","webpack://jon-trombone/./node_modules/midiconvert/src/Merge.js","webpack://jon-trombone/./node_modules/midiconvert/src/Note.js","webpack://jon-trombone/./node_modules/midiconvert/src/instrumentMaps.js","webpack://jon-trombone/./node_modules/midiconvert/src/Track.js","webpack://jon-trombone/./node_modules/midiconvert/src/Midi.js","webpack://jon-trombone/./node_modules/midiconvert/src/Header.js","webpack://jon-trombone/./node_modules/midiconvert/src/MidiConvert.js","webpack://jon-trombone/./src/gui.js","webpack://jon-trombone/./src/tts/tts-controller.js","webpack://jon-trombone/(webpack)/buildin/module.js","webpack://jon-trombone/./src/midi/midi-controller.js","webpack://jon-trombone/./src/pink-trombone/components/tract-ui.js","webpack://jon-trombone/./src/pink-trombone/components/tract.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_object-sap.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_meta.js","webpack://jon-trombone/./node_modules/core-js/library/modules/es6.object.freeze.js","webpack://jon-trombone/./node_modules/core-js/library/fn/object/freeze.js","webpack://jon-trombone/./node_modules/babel-runtime/core-js/object/freeze.js","webpack://jon-trombone/./src/pink-trombone/noise.js","webpack://jon-trombone/./src/pink-trombone/components/glottis.js","webpack://jon-trombone/./src/pink-trombone/components/audio-system.js","webpack://jon-trombone/./src/pink-trombone/math-extensions.js","webpack://jon-trombone/./src/pink-trombone/pink-trombone.js","webpack://jon-trombone/./node_modules/startaudiocontext/StartAudioContext.js","webpack://jon-trombone/./src/utils/start-overlay.js","webpack://jon-trombone/./src/utils/model-loader.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_classof.js","webpack://jon-trombone/./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack://jon-trombone/./node_modules/core-js/library/modules/core.get-iterator.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_string-at.js","webpack://jon-trombone/./node_modules/core-js/library/modules/es6.string.iterator.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_to-object.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_object-gpo.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_html.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_to-absolute-index.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_to-length.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_array-includes.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_object-keys-internal.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_object-keys.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_object-dps.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_object-create.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_iter-create.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_redefine.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_library.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_iobject.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_iter-step.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack://jon-trombone/./node_modules/core-js/library/modules/es6.array.iterator.js","webpack://jon-trombone/./node_modules/core-js/library/modules/web.dom.iterable.js","webpack://jon-trombone/./node_modules/core-js/library/fn/get-iterator.js","webpack://jon-trombone/./src/jon-trombone.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_to-primitive.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_a-function.js","webpack://jon-trombone/./node_modules/core-js/library/modules/_ctx.js","webpack://jon-trombone/./node_modules/core-js/library/modules/es6.object.define-property.js","webpack://jon-trombone/./node_modules/core-js/library/fn/object/define-property.js","webpack://jon-trombone/./node_modules/babel-runtime/core-js/object/define-property.js","webpack://jon-trombone/./src/utils/webgl-detect.js","webpack://jon-trombone/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","instance","Constructor","TypeError","obj","_defineProperty","_defineProperty2","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","store","uid","Symbol","USE_SYMBOL","core","version","__e","global","Math","self","Function","__g","Midi","exported","DEFAULT_VOLUME","Util","DEFAULT_DURATION","DEFAULT_CHANNEL","midi_letter_pitches","a","b","e","f","g","midiPitchFromNote","matches","exec","note","toLowerCase","accidental","parseInt","substr","ensureMidiPitch","test","midi_pitches_letter","12","13","14","15","16","17","18","19","20","21","22","23","midi_flattened_notes","a#","c#","d#","f#","g#","noteFromMidiPitch","returnFlattened","noteName","octave","noteNum","floor","indexOf","mpqnFromBpm","bpm","mpqn","ret","unshift","push","bpmFromMpqn","codes2Str","byteArray","String","fromCharCode","apply","str2Bytes","str","finalBytes","bytes","chars","translateTickTime","ticks","buffer","bList","MidiEvent","params","this","type","undefined","channel","param1","setTime","time","setType","setChannel","setParam1","setParam2","param2","NOTE_OFF","NOTE_ON","AFTER_TOUCH","CONTROLLER","PROGRAM_CHANGE","CHANNEL_AFTERTOUCH","PITCH_BEND","Error","toBytes","typeChannelByte","MetaEvent","setData","data","SEQUENCE","TEXT","COPYRIGHT","TRACK_NAME","INSTRUMENT","LYRIC","MARKER","CUE_POINT","CHANNEL_PREFIX","END_OF_TRACK","TEMPO","SMPTE","TIME_SIG","KEY_SIG","SEQ_EVENT","t","Array","isArray","dataBytes","split","map","x","charCodeAt","Track","config","events","START_BYTES","END_BYTES","addEvent","event","addNoteOn","noteOn","pitch","velocity","addNoteOff","noteOff","addNote","dur","addChord","chord","forEach","index","setInstrument","instrument","setTempo","tempo","trackLength","eventBytes","startBytes","endBytes","lengthBytes","toString","concat","File","tracks","HDR_CHUNKID","HDR_CHUNK_SIZE","HDR_TYPE0","HDR_TYPE1","addTrack","track","trackCount","Event","it","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","P","Attributes","createDesc","isObject","id","px","random","shared","ceil","isNaN","IObject","defined","ctx","hide","$export","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","arguments","virtual","R","U","def","has","TAG","tag","stat","LIBRARY","redefine","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","returnThis","Base","NAME","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","slice","bitmap","document","is","createElement","Stream","position","readInt8","signed","result","eof","read","readInt32","readInt16","readVarInt","file","readChunk","stream","lastEventTypeByte","readEvent","deltaTime","eventTypeByte","subtypeByte","subtype","number","text","microsecondsPerBeat","hourByte","frameRate","0","32","64","96","hour","min","sec","frame","subframe","numerator","denominator","pow","metronome","thirtyseconds","scale","eventType","noteNumber","amount","controllerType","programNumber","headerChunk","headerStream","formatType","timeDivision","ticksPerBeat","header","trackChunk","trackStream","MidiFile","isNumber","val","isPitch","regexp","pitchToMidi","noteToScaleIndex","cbb","cb","cx","dbb","db","dx","ebb","eb","e#","ex","fbb","fb","fx","gbb","gb","gx","abb","ab","ax","bbb","bb","b#","bx","BinaryInsert","array","beginning","len","end","midPoint","nextEvent","findElement","splice","channelNames","1","2","4","5","7","8","10","65","66","67","68","84","Control","[object Object]","hasMoreValues","arrays","positions","arr","pos","getLowestAtPosition","encoders","lowestIndex","lowestValue","Infinity","Note_Note","json","midi","duration","midiToPitch","instrumentByPatchID","instrumentFamilyByID","drumKitByPatchID","24","25","40","48","56","Track_Track","instrumentNumber","channelNumber","notes","newNote","fromJSON","controlChanges","match","num","cc","noteOns","noteOffs","startTime","isPercussion","inst","includes","instrumentFamily","endTime","noteStartIndex","max","findIndex","noteEndIndex","trackEncoder","ticksPerSecond","PPQ","lastEventTime","getDeltaTime","delta","args","filter","v","Uint32Array","Merge","toJSON","Midi_Midi","newTrack","timeSignature","url","method","Promise","success","fail","request","XMLHttpRequest","open","responseType","addEventListener","readyState","status","decode","response","send","catch","error","console","log","ArrayBuffer","Uint8Array","midiData","midi_file_parser","midiJson","j","datum","parseHeader","trackData","absoluteTime","replace","patch","output","jsmidgen","firstEmptyTrack","encode","encodedStr","trackName","find","startTimes","prevTempo","ratio","timeSig","durations","parse","fileBlob","load","callback","promise","then","create","GUI","jon","container","guify","panel","title","theme","width","barMode","align","opacity","Register","label","trombone","onChange","SetMute","folder","voices","glottis","step","tract","tractUI","fileReadFunc","midiController","LoadSongDirect","action","PlaySong","Stop","Restart","gui","TTSController","_classCallCheck3","webpackPolyfill","deprecate","paths","children","MidiConvert","MidiController","controller","playing","currentTrack","baseFreq","clock","THREE","Clock","path","_this","trackIndex","GetSongProgress","item","_this2","LoadSong","EnterSingMode","start","getElapsedTime","midiCode","stop","ExitSingMode","backup_settings","autoWobble","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_getIterator3","done","voice","voiceBackup","addPitchVariance","addTensenessVariance","vibratoFrequency","UIFrequency","loudness","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","backup","TractUI","originX","originY","radius","tongueIndex","tongueDiameter","innerTongueControlRadius","outerTongueControlRadius","tongueTouch","angleScale","angleOffset","noseOffset","gridOffset","Tract","setRestDiameter","diameter","targetDiameter","restDiameter","tongueLowerIndexBound","bladeStart","tongueUpperIndexBound","tipStart","tongueIndexCentre","y","xx","yy","angle","atan2","PI","lipStart","sqrt","curve","cos","progress","interp","lerp","L","reflection","junctionOutputR","junctionOutputL","maxAmplitude","newDiameter","A","glottalReflection","lipReflection","lastObstruction","fade","movementSpeed","transients","lipOutput","noseOutput","velumTarget","Float64Array","newReflection","noseLength","noseStart","noseR","noseL","noseJunctionOutputR","noseJunctionOutputL","noseReflection","noseDiameter","noseA","noseMaxAmplitude","newReflectionLeft","newReflectionRight","newReflectionNose","calculateReflections","calculateNoseReflections","newLastObstruction","slowReturn","moveTowards","addTransient","reflectionLeft","reflectionRight","reflectionNose","sum","glottalOutput","turbulenceNoise","lambda","updateAmplitudes","processTransients","addTurbulenceNoise","w","amplitude","abs","reshapeTract","audioSystem","blockTime","trans","timeAlive","lifeTime","strength","exponent","sampleRate","getNoiseModulator","thinness0","clamp","openness","noise0","noise1","fails","KEY","fn","exp","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","meta","NEED","fastKey","getWeak","onFreeze","$freeze","freeze","Grad","z","singleton","Noise","grad3","perm","gradP","seed","Date","now","xin","yin","i1","j1","F2","G2","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","dot2","simplex2","_freeze2","Glottis","timeInWaveform","oldFrequency","newFrequency","smoothFrequency","oldTenseness","newTenseness","UITenseness","totalTime","vibratoAmount","intensity","isTouched","touch","keyboardTop","keyboardLeft","keyboardWidth","keyboardHeight","semitones","marks","baseNote","setupWaveform","alive","UI","touchesWithMouse","local_y","local_x","semitone","noiseSource","timeStep","waveformLength","normalizedLFWaveform","aspiration","_noise2","simplex1","voiced","sin","vibrato","alwaysVoice","frequency","tenseness","Rd","Ra","Rk","Tp","Te","epsilon","shift","Delta","RHSIntegral","totalUpperIntegral","omega","alpha","E0","AudioSystem","blockLength","soundOn","AudioContext","webkitAudioContext","audioContext","processors","_loop","scriptProcessor","createScriptProcessor","connect","destination","onaudioprocess","doScriptProcessor","whiteNoise","createWhiteNoiseNode","aspirateFilter","createBiquadFilter","Q","fricativeFilter","frameCount","myArrayBuffer","createBuffer","nowBuffering","getChannelData","createBufferSource","loop","inputArray1","inputBuffer","inputArray2","outArray","outputBuffer","N","lambda1","lambda2","runStep","vocalOutput","finishBlock","disconnect","current","amountUp","amountDown","gaussian","_audioSystem","_glottis","_tract","_tractUi","Voice","init","PinkTrombone","noiseFreq","noiseQ","muted","startSound","doMute","mute","unmute","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","TapListener","element","context","_dragged","_element","_bindedMove","_moved","bind","_bindedEnd","_ended","isStarted","state","resume","startContext","dispose","removeEventListener","elements","checkLoop","requestAnimationFrame","onStarted","tapListeners","body","bindTapListener","NodeList","querySelectorAll","jquery","toArray","Element","tap","StartOverlay","overlay","appendChild","style","cssText","innerHTML","_startaudiocontext2","remove","ModelLoader","modelInfo","loadedCallback","onProgress","xhr","lengthComputable","percentComplete","loaded","total","round","onError","mtlLoader","MTLLoader","setPath","mtlFile","materials","preload","objLoader","OBJLoader","setMaterials","objFile","JSONLoader","geometry","skinning","mesh","SkinnedMesh","MultiMaterial","manager","LoadingManager","FBXLoader","cof","ARG","T","tryGet","callee","classof","getIteratorMethod","getIterator","iterFn","toInteger","TO_STRING","that","charAt","$at","iterated","_t","_i","point","toObject","IE_PROTO","ObjectProto","constructor","documentElement","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","arrayIndexOf","names","$keys","enumBugKeys","getKeys","Properties","dPs","Empty","createDict","iframeDocument","iframe","display","src","contentWindow","write","lt","close","propertyIsEnumerable","addToUnscopables","_k","Arguments","TO_STRING_TAG","DOMIterables","Collection","_modelLoader","_startOverlay","_pinkTrombone","_midiController","_gui","JonTrombone","finishedCallback","cursor","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","offsetWidth","offsetHeight","setClearColor","domElement","aspect","camera","PerspectiveCamera","scene","Scene","setTimeout","StartAudio","moveJaw","jawFlapSpeed","jawOpenOffset","legato","flapWhileSinging","SetUpThree","SetUpScene","OnUpdate","Init","OrbitControls","controls","set","update","warn","light1","HemisphereLight","add","light2","DirectionalLight","LoadJSON","rotation","degToRad","jaw","skeleton","bones","jawShutZ","getDelta","GetPitches","lastNotes","SetLipsClosed","MIDIToFrequency","percent","render","valueOf","aFunction","$Object","desc","Detector","WebGLRenderingContext","canvas","getContext","getParameter","message","_webglDetect","_jonTrombone","getElementById","HasWebGL","GetErrorHTML","classList","onload"],"mappings":"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","file":"jon-trombone.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"jon-trombone\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jon-trombone\"] = factory();\n\telse\n\t\troot[\"jon-trombone\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 82);\n","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var Midi = {};\n\n(function(exported) {\n\n\tvar DEFAULT_VOLUME   = exported.DEFAULT_VOLUME   = 90;\n\tvar DEFAULT_DURATION = exported.DEFAULT_DURATION = 128;\n\tvar DEFAULT_CHANNEL  = exported.DEFAULT_CHANNEL  = 0;\n\n\t/* ******************************************************************\n\t * Utility functions\n\t ****************************************************************** */\n\n\tvar Util = {\n\n\t\tmidi_letter_pitches: { a:21, b:23, c:12, d:14, e:16, f:17, g:19 },\n\n\t\t/**\n\t\t * Convert a symbolic note name (e.g. \"c4\") to a numeric MIDI pitch (e.g.\n\t\t * 60, middle C).\n\t\t *\n\t\t * @param {string} n - The symbolic note name to parse.\n\t\t * @returns {number} The MIDI pitch that corresponds to the symbolic note\n\t\t * name.\n\t\t */\n\t\tmidiPitchFromNote: function(n) {\n\t\t\tvar matches = /([a-g])(#+|b+)?([0-9]+)$/i.exec(n);\n\t\t\tvar note = matches[1].toLowerCase(), accidental = matches[2] || '', octave = parseInt(matches[3], 10);\n\t\t\treturn (12 * octave) + Util.midi_letter_pitches[note] + (accidental.substr(0,1)=='#'?1:-1) * accidental.length;\n\t\t},\n\n\t\t/**\n\t\t * Ensure that the given argument is converted to a MIDI pitch. Note that\n\t\t * it may already be one (including a purely numeric string).\n\t\t *\n\t\t * @param {string|number} p - The pitch to convert.\n\t\t * @returns {number} The resulting numeric MIDI pitch.\n\t\t */\n\t\tensureMidiPitch: function(p) {\n\t\t\tif (typeof p == 'number' || !/[^0-9]/.test(p)) {\n\t\t\t\t// numeric pitch\n\t\t\t\treturn parseInt(p, 10);\n\t\t\t} else {\n\t\t\t\t// assume it's a note name\n\t\t\t\treturn Util.midiPitchFromNote(p);\n\t\t\t}\n\t\t},\n\n\t\tmidi_pitches_letter: { '12':'c', '13':'c#', '14':'d', '15':'d#', '16':'e', '17':'f', '18':'f#', '19':'g', '20':'g#', '21':'a', '22':'a#', '23':'b' },\n\t\tmidi_flattened_notes: { 'a#':'bb', 'c#':'db', 'd#':'eb', 'f#':'gb', 'g#':'ab' },\n\n\t\t/**\n\t\t * Convert a numeric MIDI pitch value (e.g. 60) to a symbolic note name\n\t\t * (e.g. \"c4\").\n\t\t *\n\t\t * @param {number} n - The numeric MIDI pitch value to convert.\n\t\t * @param {boolean} [returnFlattened=false] - Whether to prefer flattened\n\t\t * notes to sharpened ones. Optional, default false.\n\t\t * @returns {string} The resulting symbolic note name.\n\t\t */\n\t\tnoteFromMidiPitch: function(n, returnFlattened) {\n\t\t\tvar octave = 0, noteNum = n, noteName, returnFlattened = returnFlattened || false;\n\t\t\tif (n > 23) {\n\t\t\t\t// noteNum is on octave 1 or more\n\t\t\t\toctave = Math.floor(n/12) - 1;\n\t\t\t\t// subtract number of octaves from noteNum\n\t\t\t\tnoteNum = n - octave * 12;\n\t\t\t}\n\n\t\t\t// get note name (c#, d, f# etc)\n\t\t\tnoteName = Util.midi_pitches_letter[noteNum];\n\t\t\t// Use flattened notes if requested (e.g. f# should be output as gb)\n\t\t\tif (returnFlattened && noteName.indexOf('#') > 0) {\n\t\t\t\tnoteName = Util.midi_flattened_notes[noteName];\n\t\t\t}\n\t\t\treturn noteName + octave;\n\t\t},\n\n\t\t/**\n\t\t * Convert beats per minute (BPM) to microseconds per quarter note (MPQN).\n\t\t *\n\t\t * @param {number} bpm - A number in beats per minute.\n\t\t * @returns {number} The number of microseconds per quarter note.\n\t\t */\n\t\tmpqnFromBpm: function(bpm) {\n\t\t\tvar mpqn = Math.floor(60000000 / bpm);\n\t\t\tvar ret=[];\n\t\t\tdo {\n\t\t\t\tret.unshift(mpqn & 0xFF);\n\t\t\t\tmpqn >>= 8;\n\t\t\t} while (mpqn);\n\t\t\twhile (ret.length < 3) {\n\t\t\t\tret.push(0);\n\t\t\t}\n\t\t\treturn ret;\n\t\t},\n\n\t\t/**\n\t\t * Convert microseconds per quarter note (MPQN) to beats per minute (BPM).\n\t\t *\n\t\t * @param {number} mpqn - The number of microseconds per quarter note.\n\t\t * @returns {number} A number in beats per minute.\n\t\t */\n\t\tbpmFromMpqn: function(mpqn) {\n\t\t\tvar m = mpqn;\n\t\t\tif (typeof mpqn[0] != 'undefined') {\n\t\t\t\tm = 0;\n\t\t\t\tfor (var i=0, l=mpqn.length-1; l >= 0; ++i, --l) {\n\t\t\t\t\tm |= mpqn[i] << l;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Math.floor(60000000 / mpqn);\n\t\t},\n\n\t\t/**\n\t\t * Converts an array of bytes to a string of hexadecimal characters. Prepares\n\t\t * it to be converted into a base64 string.\n\t\t *\n\t\t * @param {Array} byteArray - Array of bytes to be converted.\n\t\t * @returns {string} Hexadecimal string, e.g. \"097B8A\".\n\t\t */\n\t\tcodes2Str: function(byteArray) {\n\t\t\treturn String.fromCharCode.apply(null, byteArray);\n\t\t},\n\n\t\t/**\n\t\t * Converts a string of hexadecimal values to an array of bytes. It can also\n\t\t * add remaining \"0\" nibbles in order to have enough bytes in the array as the\n\t\t * `finalBytes` parameter.\n\t\t *\n\t\t * @param {string} str - string of hexadecimal values e.g. \"097B8A\"\n\t\t * @param {number} [finalBytes] - Optional. The desired number of bytes\n\t\t * (not nibbles) that the returned array should contain.\n\t\t * @returns {Array} An array of nibbles.\n\t\t */\n\t\tstr2Bytes: function (str, finalBytes) {\n\t\t\tif (finalBytes) {\n\t\t\t\twhile ((str.length / 2) < finalBytes) { str = \"0\" + str; }\n\t\t\t}\n\n\t\t\tvar bytes = [];\n\t\t\tfor (var i=str.length-1; i>=0; i = i-2) {\n\t\t\t\tvar chars = i === 0 ? str[i] : str[i-1] + str[i];\n\t\t\t\tbytes.unshift(parseInt(chars, 16));\n\t\t\t}\n\n\t\t\treturn bytes;\n\t\t},\n\n\t\t/**\n\t\t * Translates number of ticks to MIDI timestamp format, returning an array\n\t\t * of bytes with the time values. MIDI has a very particular way to express\n\t\t * time; take a good look at the spec before ever touching this function.\n\t\t *\n\t\t * @param {number} ticks - Number of ticks to be translated.\n\t\t * @returns {number} Array of bytes that form the MIDI time value.\n\t\t */\n\t\ttranslateTickTime: function(ticks) {\n\t\t\tvar buffer = ticks & 0x7F;\n\n\t\t\twhile (ticks = ticks >> 7) {\n\t\t\t\tbuffer <<= 8;\n\t\t\t\tbuffer |= ((ticks & 0x7F) | 0x80);\n\t\t\t}\n\n\t\t\tvar bList = [];\n\t\t\twhile (true) {\n\t\t\t\tbList.push(buffer & 0xff);\n\n\t\t\t\tif (buffer & 0x80) { buffer >>= 8; }\n\t\t\t\telse { break; }\n\t\t\t}\n\t\t\treturn bList;\n\t\t},\n\n\t};\n\n\t/* ******************************************************************\n\t * Event class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - channel [required number] - Channel for the event.\n\t *  - param1 [required number] - First event parameter.\n\t *  - param2 [optional number] - Second event parameter.\n\t */\n\tvar MidiEvent = function(params) {\n\t\tif (!this) return new MidiEvent(params);\n\t\tif (params &&\n\t\t\t\t(params.type    !== null || params.type    !== undefined) &&\n\t\t\t\t(params.channel !== null || params.channel !== undefined) &&\n\t\t\t\t(params.param1  !== null || params.param1  !== undefined)) {\n\t\t\tthis.setTime(params.time);\n\t\t\tthis.setType(params.type);\n\t\t\tthis.setChannel(params.channel);\n\t\t\tthis.setParam1(params.param1);\n\t\t\tthis.setParam2(params.param2);\n\t\t}\n\t};\n\n\t// event codes\n\tMidiEvent.NOTE_OFF           = 0x80;\n\tMidiEvent.NOTE_ON            = 0x90;\n\tMidiEvent.AFTER_TOUCH        = 0xA0;\n\tMidiEvent.CONTROLLER         = 0xB0;\n\tMidiEvent.PROGRAM_CHANGE     = 0xC0;\n\tMidiEvent.CHANNEL_AFTERTOUCH = 0xD0;\n\tMidiEvent.PITCH_BEND         = 0xE0;\n\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMidiEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MidiEvent.\n\t *\n\t * @param {number} type - Event type.\n\t */\n\tMidiEvent.prototype.setType = function(type) {\n\t\tif (type < MidiEvent.NOTE_OFF || type > MidiEvent.PITCH_BEND) {\n\t\t\tthrow new Error(\"Trying to set an unknown event: \" + type);\n\t\t}\n\n\t\tthis.type = type;\n\t};\n\n\t/**\n\t * Set the channel for the event. Must be between 0 and 15, inclusive.\n\t *\n\t * @param {number} channel - The event channel.\n\t */\n\tMidiEvent.prototype.setChannel = function(channel) {\n\t\tif (channel < 0 || channel > 15) {\n\t\t\tthrow new Error(\"Channel is out of bounds.\");\n\t\t}\n\n\t\tthis.channel = channel;\n\t};\n\n\t/**\n\t * Set the first parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The first event parameter value.\n\t */\n\tMidiEvent.prototype.setParam1 = function(p) {\n\t\tthis.param1 = p;\n\t};\n\n\t/**\n\t * Set the second parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The second event parameter value.\n\t */\n\tMidiEvent.prototype.setParam2 = function(p) {\n\t\tthis.param2 = p;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMidiEvent.prototype.toBytes = function() {\n\t\tvar byteArray = [];\n\n\t\tvar typeChannelByte = this.type | (this.channel & 0xF);\n\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(typeChannelByte);\n\t\tbyteArray.push(this.param1);\n\n\t\t// Some events don't have a second parameter\n\t\tif (this.param2 !== undefined && this.param2 !== null) {\n\t\t\tbyteArray.push(this.param2);\n\t\t}\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * MetaEvent class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a meta event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - data [optional array|string] - Event data.\n\t */\n\tvar MetaEvent = function(params) {\n\t\tif (!this) return new MetaEvent(params);\n\t\tvar p = params || {};\n\t\tthis.setTime(params.time);\n\t\tthis.setType(params.type);\n\t\tthis.setData(params.data);\n\t};\n\n\tMetaEvent.SEQUENCE   = 0x00;\n\tMetaEvent.TEXT       = 0x01;\n\tMetaEvent.COPYRIGHT  = 0x02;\n\tMetaEvent.TRACK_NAME = 0x03;\n\tMetaEvent.INSTRUMENT = 0x04;\n\tMetaEvent.LYRIC      = 0x05;\n\tMetaEvent.MARKER     = 0x06;\n\tMetaEvent.CUE_POINT  = 0x07;\n\tMetaEvent.CHANNEL_PREFIX = 0x20;\n\tMetaEvent.END_OF_TRACK   = 0x2f;\n\tMetaEvent.TEMPO      = 0x51;\n\tMetaEvent.SMPTE      = 0x54;\n\tMetaEvent.TIME_SIG   = 0x58;\n\tMetaEvent.KEY_SIG    = 0x59;\n\tMetaEvent.SEQ_EVENT  = 0x7f;\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMetaEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MetaEvent.\n\t *\n\t * @param {number} t - Event type.\n\t */\n\tMetaEvent.prototype.setType = function(t) {\n\t\tthis.type = t;\n\t};\n\n\t/**\n\t * Set the data associated with the event. May be a string or array of byte\n\t * values.\n\t *\n\t * @param {string|Array} d - Event data.\n\t */\n\tMetaEvent.prototype.setData = function(d) {\n\t\tthis.data = d;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMetaEvent.prototype.toBytes = function() {\n\t\tif (!this.type) {\n\t\t\tthrow new Error(\"Type for meta-event not specified.\");\n\t\t}\n\n\t\tvar byteArray = [];\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(0xFF, this.type);\n\n\t\t// If data is an array, we assume that it contains several bytes. We\n\t\t// apend them to byteArray.\n\t\tif (Array.isArray(this.data)) {\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tbyteArray.push.apply(byteArray, this.data);\n\t\t} else if (typeof this.data == 'number') {\n\t\t\tbyteArray.push(1, this.data);\n\t\t} else if (this.data !== null && this.data !== undefined) {\n\t\t\t// assume string; may be a bad assumption\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tvar dataBytes = this.data.split('').map(function(x){ return x.charCodeAt(0) });\n\t\t\tbyteArray.push.apply(byteArray, dataBytes);\n\t\t} else {\n\t\t\tbyteArray.push(0);\n\t\t}\n\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * Track class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI track.\n\t *\n\t * Parameters include:\n\t *  - events [optional array] - Array of events for the track.\n\t */\n\tvar Track = function(config) {\n\t\tif (!this) return new Track(config);\n\t\tvar c = config || {};\n\t\tthis.events = c.events || [];\n\t};\n\n\tTrack.START_BYTES = [0x4d, 0x54, 0x72, 0x6b];\n\tTrack.END_BYTES   = [0x00, 0xFF, 0x2F, 0x00];\n\n\t/**\n\t * Add an event to the track.\n\t *\n\t * @param {MidiEvent|MetaEvent} event - The event to add.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addEvent = function(event) {\n\t\tthis.events.push(event);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The volume for the note, defaults to\n\t * DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOn = Track.prototype.noteOn = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_ON,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOff = Track.prototype.noteOff = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_OFF,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the note, in ticks.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNote = Track.prototype.note = function(channel, pitch, dur, time, velocity) {\n\t\tthis.noteOn(channel, pitch, time, velocity);\n\t\tif (dur) {\n\t\t\tthis.noteOff(channel, pitch, dur, velocity);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track for each pitch in an array of pitches.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {array} chord - An array of pitches, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the chord, in ticks.\n\t * @param {number} [velocity=90] - The velocity of the chord,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addChord = Track.prototype.chord = function(channel, chord, dur, velocity) {\n\t\tif (!Array.isArray(chord) && !chord.length) {\n\t\t\tthrow new Error('Chord must be an array of pitches');\n\t\t}\n\t\tchord.forEach(function(note) {\n\t\t\tthis.noteOn(channel, note, 0, velocity);\n\t\t}, this);\n\t\tchord.forEach(function(note, index) {\n\t\t\tif (index === 0) {\n\t\t\t\tthis.noteOff(channel, note, dur);\n\t\t\t} else {\n\t\t\t\tthis.noteOff(channel, note);\n\t\t\t}\n\t\t}, this);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set instrument for the track.\n\t *\n\t * @param {number} channel - The channel to set the instrument on.\n\t * @param {number} instrument - The instrument to set it to.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setInstrument = Track.prototype.instrument = function(channel, instrument, time) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.PROGRAM_CHANGE,\n\t\t\tchannel: channel,\n\t\t\tparam1: instrument,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set the tempo for the track.\n\t *\n\t * @param {number} bpm - The new number of beats per minute.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setTempo = Track.prototype.tempo = function(bpm, time) {\n\t\tthis.events.push(new MetaEvent({\n\t\t\ttype: MetaEvent.TEMPO,\n\t\t\tdata: Util.mpqnFromBpm(bpm),\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Serialize the track to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tTrack.prototype.toBytes = function() {\n\t\tvar trackLength = 0;\n\t\tvar eventBytes = [];\n\t\tvar startBytes = Track.START_BYTES;\n\t\tvar endBytes   = Track.END_BYTES;\n\n\t\tvar addEventBytes = function(event) {\n\t\t\tvar bytes = event.toBytes();\n\t\t\ttrackLength += bytes.length;\n\t\t\teventBytes.push.apply(eventBytes, bytes);\n\t\t};\n\n\t\tthis.events.forEach(addEventBytes);\n\n\t\t// Add the end-of-track bytes to the sum of bytes for the track, since\n\t\t// they are counted (unlike the start-of-track ones).\n\t\ttrackLength += endBytes.length;\n\n\t\t// Makes sure that track length will fill up 4 bytes with 0s in case\n\t\t// the length is less than that (the usual case).\n\t\tvar lengthBytes = Util.str2Bytes(trackLength.toString(16), 4);\n\n\t\treturn startBytes.concat(lengthBytes, eventBytes, endBytes);\n\t};\n\n\t/* ******************************************************************\n\t * File class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a file object.\n\t *\n\t * Parameters include:\n\t *  - ticks [optional number] - Number of ticks per beat, defaults to 128.\n\t *    Must be 1-32767.\n\t *  - tracks [optional array] - Track data.\n\t */\n\tvar File = function(config){\n\t\tif (!this) return new File(config);\n\n\t\tvar c = config || {};\n\t\tif (c.ticks) {\n\t\t\tif (typeof c.ticks !== 'number') {\n\t\t\t\tthrow new Error('Ticks per beat must be a number!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (c.ticks <= 0 || c.ticks >= (1 << 15) || c.ticks % 1 !== 0) {\n\t\t\t\tthrow new Error('Ticks per beat must be an integer between 1 and 32767!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.ticks = c.ticks || 128;\n\t\tthis.tracks = c.tracks || [];\n\t};\n\n\tFile.HDR_CHUNKID     = \"MThd\";             // File magic cookie\n\tFile.HDR_CHUNK_SIZE  = \"\\x00\\x00\\x00\\x06\"; // Header length for SMF\n\tFile.HDR_TYPE0       = \"\\x00\\x00\";         // Midi Type 0 id\n\tFile.HDR_TYPE1       = \"\\x00\\x01\";         // Midi Type 1 id\n\n\t/**\n\t * Add a track to the file.\n\t *\n\t * @param {Track} track - The track to add.\n\t */\n\tFile.prototype.addTrack = function(track) {\n\t\tif (track) {\n\t\t\tthis.tracks.push(track);\n\t\t\treturn this;\n\t\t} else {\n\t\t\ttrack = new Track();\n\t\t\tthis.tracks.push(track);\n\t\t\treturn track;\n\t\t}\n\t};\n\n\t/**\n\t * Serialize the MIDI file to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tFile.prototype.toBytes = function() {\n\t\tvar trackCount = this.tracks.length.toString(16);\n\n\t\t// prepare the file header\n\t\tvar bytes = File.HDR_CHUNKID + File.HDR_CHUNK_SIZE;\n\n\t\t// set Midi type based on number of tracks\n\t\tif (parseInt(trackCount, 16) > 1) {\n\t\t\tbytes += File.HDR_TYPE1;\n\t\t} else {\n\t\t\tbytes += File.HDR_TYPE0;\n\t\t}\n\n\t\t// add the number of tracks (2 bytes)\n\t\tbytes += Util.codes2Str(Util.str2Bytes(trackCount, 2));\n\t\t// add the number of ticks per beat (currently hardcoded)\n\t\tbytes += String.fromCharCode((this.ticks/256),  this.ticks%256);;\n\n\t\t// iterate over the tracks, converting to bytes too\n\t\tthis.tracks.forEach(function(track) {\n\t\t\tbytes += Util.codes2Str(track.toBytes());\n\t\t});\n\n\t\treturn bytes;\n\t};\n\n\t/* ******************************************************************\n\t * Exports\n\t ****************************************************************** */\n\n\texported.Util = Util;\n\texported.File = File;\n\texported.Track = Track;\n\texported.Event = MidiEvent;\n\texported.MetaEvent = MetaEvent;\n\n})( Midi );\n\nif (typeof module != 'undefined' && module !== null) {\n\tmodule.exports = Midi;\n} else if (typeof exports != 'undefined' && exports !== null) {\n\texports = Midi;\n} else {\n\tthis.Midi = Midi;\n}\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = {};\n","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = (!BUGGY && $native) || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// https://github.com/gasman/jasmid\n//\n//\n\nmodule.exports = function(file){\n\treturn MidiFile(file)\n};\n\nfunction MidiFile(data) {\n\tfunction readChunk(stream) {\n\t\tvar id = stream.read(4);\n\t\tvar length = stream.readInt32();\n\t\treturn {\n\t\t\t'id': id,\n\t\t\t'length': length,\n\t\t\t'data': stream.read(length)\n\t\t};\n\t}\n\t\n\tvar lastEventTypeByte;\n\t\n\tfunction readEvent(stream) {\n\t\tvar event = {};\n\t\tevent.deltaTime = stream.readVarInt();\n\t\tvar eventTypeByte = stream.readInt8();\n\t\tif ((eventTypeByte & 0xf0) == 0xf0) {\n\t\t\t/* system / meta event */\n\t\t\tif (eventTypeByte == 0xff) {\n\t\t\t\t/* meta event */\n\t\t\t\tevent.type = 'meta';\n\t\t\t\tvar subtypeByte = stream.readInt8();\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tswitch(subtypeByte) {\n\t\t\t\t\tcase 0x00:\n\t\t\t\t\t\tevent.subtype = 'sequenceNumber';\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for sequenceNumber event is 2, got \" + length;\n\t\t\t\t\t\tevent.number = stream.readInt16();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x01:\n\t\t\t\t\t\tevent.subtype = 'text';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x02:\n\t\t\t\t\t\tevent.subtype = 'copyrightNotice';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x03:\n\t\t\t\t\t\tevent.subtype = 'trackName';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x04:\n\t\t\t\t\t\tevent.subtype = 'instrumentName';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x05:\n\t\t\t\t\t\tevent.subtype = 'lyrics';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x06:\n\t\t\t\t\t\tevent.subtype = 'marker';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x07:\n\t\t\t\t\t\tevent.subtype = 'cuePoint';\n\t\t\t\t\t\tevent.text = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x20:\n\t\t\t\t\t\tevent.subtype = 'midiChannelPrefix';\n\t\t\t\t\t\tif (length != 1) throw \"Expected length for midiChannelPrefix event is 1, got \" + length;\n\t\t\t\t\t\tevent.channel = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x2f:\n\t\t\t\t\t\tevent.subtype = 'endOfTrack';\n\t\t\t\t\t\tif (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length;\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x51:\n\t\t\t\t\t\tevent.subtype = 'setTempo';\n\t\t\t\t\t\tif (length != 3) throw \"Expected length for setTempo event is 3, got \" + length;\n\t\t\t\t\t\tevent.microsecondsPerBeat = (\n\t\t\t\t\t\t\t(stream.readInt8() << 16)\n\t\t\t\t\t\t\t+ (stream.readInt8() << 8)\n\t\t\t\t\t\t\t+ stream.readInt8()\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x54:\n\t\t\t\t\t\tevent.subtype = 'smpteOffset';\n\t\t\t\t\t\tif (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length;\n\t\t\t\t\t\tvar hourByte = stream.readInt8();\n\t\t\t\t\t\tevent.frameRate = {\n\t\t\t\t\t\t\t0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n\t\t\t\t\t\t}[hourByte & 0x60];\n\t\t\t\t\t\tevent.hour = hourByte & 0x1f;\n\t\t\t\t\t\tevent.min = stream.readInt8();\n\t\t\t\t\t\tevent.sec = stream.readInt8();\n\t\t\t\t\t\tevent.frame = stream.readInt8();\n\t\t\t\t\t\tevent.subframe = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x58:\n\t\t\t\t\t\tevent.subtype = 'timeSignature';\n\t\t\t\t\t\tif (length != 4) throw \"Expected length for timeSignature event is 4, got \" + length;\n\t\t\t\t\t\tevent.numerator = stream.readInt8();\n\t\t\t\t\t\tevent.denominator = Math.pow(2, stream.readInt8());\n\t\t\t\t\t\tevent.metronome = stream.readInt8();\n\t\t\t\t\t\tevent.thirtyseconds = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x59:\n\t\t\t\t\t\tevent.subtype = 'keySignature';\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for keySignature event is 2, got \" + length;\n\t\t\t\t\t\tevent.key = stream.readInt8(true);\n\t\t\t\t\t\tevent.scale = stream.readInt8();\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tcase 0x7f:\n\t\t\t\t\t\tevent.subtype = 'sequencerSpecific';\n\t\t\t\t\t\tevent.data = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// console.log(\"Unrecognised meta event subtype: \" + subtypeByte);\n\t\t\t\t\t\tevent.subtype = 'unknown'\n\t\t\t\t\t\tevent.data = stream.read(length);\n\t\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else if (eventTypeByte == 0xf0) {\n\t\t\t\tevent.type = 'sysEx';\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else if (eventTypeByte == 0xf7) {\n\t\t\t\tevent.type = 'dividedSysEx';\n\t\t\t\tvar length = stream.readVarInt();\n\t\t\t\tevent.data = stream.read(length);\n\t\t\t\treturn event;\n\t\t\t} else {\n\t\t\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte;\n\t\t\t}\n\t\t} else {\n\t\t\t/* channel event */\n\t\t\tvar param1;\n\t\t\tif ((eventTypeByte & 0x80) == 0) {\n\t\t\t\t/* running status - reuse lastEventTypeByte as the event type.\n\t\t\t\t\teventTypeByte is actually the first parameter\n\t\t\t\t*/\n\t\t\t\tparam1 = eventTypeByte;\n\t\t\t\teventTypeByte = lastEventTypeByte;\n\t\t\t} else {\n\t\t\t\tparam1 = stream.readInt8();\n\t\t\t\tlastEventTypeByte = eventTypeByte;\n\t\t\t}\n\t\t\tvar eventType = eventTypeByte >> 4;\n\t\t\tevent.channel = eventTypeByte & 0x0f;\n\t\t\tevent.type = 'channel';\n\t\t\tswitch (eventType) {\n\t\t\t\tcase 0x08:\n\t\t\t\t\tevent.subtype = 'noteOff';\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.velocity = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x09:\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.velocity = stream.readInt8();\n\t\t\t\t\tif (event.velocity == 0) {\n\t\t\t\t\t\tevent.subtype = 'noteOff';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevent.subtype = 'noteOn';\n\t\t\t\t\t}\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0a:\n\t\t\t\t\tevent.subtype = 'noteAftertouch';\n\t\t\t\t\tevent.noteNumber = param1;\n\t\t\t\t\tevent.amount = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0b:\n\t\t\t\t\tevent.subtype = 'controller';\n\t\t\t\t\tevent.controllerType = param1;\n\t\t\t\t\tevent.value = stream.readInt8();\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0c:\n\t\t\t\t\tevent.subtype = 'programChange';\n\t\t\t\t\tevent.programNumber = param1;\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0d:\n\t\t\t\t\tevent.subtype = 'channelAftertouch';\n\t\t\t\t\tevent.amount = param1;\n\t\t\t\t\treturn event;\n\t\t\t\tcase 0x0e:\n\t\t\t\t\tevent.subtype = 'pitchBend';\n\t\t\t\t\tevent.value = param1 + (stream.readInt8() << 7);\n\t\t\t\t\treturn event;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType\n\t\t\t\t\t/* \n\t\t\t\t\tconsole.log(\"Unrecognised MIDI event type: \" + eventType);\n\t\t\t\t\tstream.readInt8();\n\t\t\t\t\tevent.subtype = 'unknown';\n\t\t\t\t\treturn event;\n\t\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t}\n\t\n\tstream = Stream(data);\n\tvar headerChunk = readChunk(stream);\n\tif (headerChunk.id != 'MThd' || headerChunk.length != 6) {\n\t\tthrow \"Bad .mid file - header not found\";\n\t}\n\tvar headerStream = Stream(headerChunk.data);\n\tvar formatType = headerStream.readInt16();\n\tvar trackCount = headerStream.readInt16();\n\tvar timeDivision = headerStream.readInt16();\n\t\n\tif (timeDivision & 0x8000) {\n\t\tthrow \"Expressing time division in SMTPE frames is not supported yet\"\n\t} else {\n\t\tticksPerBeat = timeDivision;\n\t}\n\t\n\tvar header = {\n\t\t'formatType': formatType,\n\t\t'trackCount': trackCount,\n\t\t'ticksPerBeat': ticksPerBeat\n\t}\n\tvar tracks = [];\n\tfor (var i = 0; i < header.trackCount; i++) {\n\t\ttracks[i] = [];\n\t\tvar trackChunk = readChunk(stream);\n\t\tif (trackChunk.id != 'MTrk') {\n\t\t\tthrow \"Unexpected chunk - expected MTrk, got \"+ trackChunk.id;\n\t\t}\n\t\tvar trackStream = Stream(trackChunk.data);\n\t\twhile (!trackStream.eof()) {\n\t\t\tvar event = readEvent(trackStream);\n\t\t\ttracks[i].push(event);\n\t\t\t//console.log(event);\n\t\t}\n\t}\n\t\n\treturn {\n\t\t'header': header,\n\t\t'tracks': tracks\n\t}\n};\n\n/* Wrapper for accessing strings through sequential reads */\nfunction Stream(str) {\n\tvar position = 0;\n\t\n\tfunction read(length) {\n\t\tvar result = str.substr(position, length);\n\t\tposition += length;\n\t\treturn result;\n\t}\n\t\n\t/* read a big-endian 32-bit integer */\n\tfunction readInt32() {\n\t\tvar result = (\n\t\t\t(str.charCodeAt(position) << 24)\n\t\t\t+ (str.charCodeAt(position + 1) << 16)\n\t\t\t+ (str.charCodeAt(position + 2) << 8)\n\t\t\t+ str.charCodeAt(position + 3));\n\t\tposition += 4;\n\t\treturn result;\n\t}\n\n\t/* read a big-endian 16-bit integer */\n\tfunction readInt16() {\n\t\tvar result = (\n\t\t\t(str.charCodeAt(position) << 8)\n\t\t\t+ str.charCodeAt(position + 1));\n\t\tposition += 2;\n\t\treturn result;\n\t}\n\t\n\t/* read an 8-bit integer */\n\tfunction readInt8(signed) {\n\t\tvar result = str.charCodeAt(position);\n\t\tif (signed && result > 127) result -= 256;\n\t\tposition += 1;\n\t\treturn result;\n\t}\n\t\n\tfunction eof() {\n\t\treturn position >= str.length;\n\t}\n\t\n\t/* read a MIDI-style variable-length integer\n\t\t(big-endian value in groups of 7 bits,\n\t\twith top bit set to signify that another byte follows)\n\t*/\n\tfunction readVarInt() {\n\t\tvar result = 0;\n\t\twhile (true) {\n\t\t\tvar b = readInt8();\n\t\t\tif (b & 0x80) {\n\t\t\t\tresult += (b & 0x7f);\n\t\t\t\tresult <<= 7;\n\t\t\t} else {\n\t\t\t\t/* b is the last byte */\n\t\t\t\treturn result + b;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn {\n\t\t'eof': eof,\n\t\t'read': read,\n\t\t'readInt32': readInt32,\n\t\t'readInt16': readInt16,\n\t\t'readInt8': readInt8,\n\t\t'readVarInt': readVarInt\n\t}\n}","export function cleanName(str){\n\t//ableton adds some weird stuff to the track\n\treturn str.replace(/\\u0000/g, '')\n}\n\nexport function ticksToSeconds(ticks, header){\n\treturn (60 / header.bpm) * (ticks / header.PPQ);\n}\n\nexport function isNumber(val){\n\treturn typeof val === 'number'\n}\n\nexport function isString(val){\n\treturn typeof val === 'string'\n}\n\nexport const isPitch = (function(){\n\tconst regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i\n\treturn (val) => {\n\t\treturn isString(val) && regexp.test(val)\n\t}\n}())\n\n\nexport function midiToPitch(midi){\n\tconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\tconst octave = Math.floor(midi / 12) - 1;\n\tconst note = midi % 12;\n\treturn scaleIndexToNote[note] + octave;\n}\n\nexport const pitchToMidi = (function(){\n\tconst regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i\n\tconst noteToScaleIndex = {\n\t\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0,  \"c#\" : 1,  \"cx\" : 2,\n\t\t\"dbb\" : 0,  \"db\" : 1,  \"d\" : 2,  \"d#\" : 3,  \"dx\" : 4,\n\t\t\"ebb\" : 2,  \"eb\" : 3,  \"e\" : 4,  \"e#\" : 5,  \"ex\" : 6,\n\t\t\"fbb\" : 3,  \"fb\" : 4,  \"f\" : 5,  \"f#\" : 6,  \"fx\" : 7,\n\t\t\"gbb\" : 5,  \"gb\" : 6,  \"g\" : 7,  \"g#\" : 8,  \"gx\" : 9,\n\t\t\"abb\" : 7,  \"ab\" : 8,  \"a\" : 9,  \"a#\" : 10, \"ax\" : 11,\n\t\t\"bbb\" : 9,  \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n\t}\n\treturn (note) => {\n\t\tconst split = regexp.exec(note)\n\t\tconst pitch = split[1]\n\t\tconst octave = split[2]\n\t\tconst index = noteToScaleIndex[pitch.toLowerCase()]\n\t\treturn index + (parseInt(octave) + 1) * 12\n\t}\n}())\n","/**\n * Return the index of the element at or before the given time\n */\nfunction findElement(array, time) {\n\tlet beginning = 0\n\tconst len = array.length\n\tlet end = len\n\tif (len > 0 && array[len - 1].time <= time){\n\t\treturn len - 1\n\t}\n\twhile (beginning < end){\n\t\t// calculate the midpoint for roughly equal partition\n\t\tlet midPoint = Math.floor(beginning + (end - beginning) / 2)\n\t\tconst event = array[midPoint]\n\t\tconst nextEvent = array[midPoint + 1]\n\t\tif (event.time === time){\n\t\t\t//choose the last one that has the same time\n\t\t\tfor (let i = midPoint; i < array.length; i++){\n\t\t\t\tlet testEvent = array[i]\n\t\t\t\tif (testEvent.time === time){\n\t\t\t\t\tmidPoint = i\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midPoint\n\t\t} else if (event.time < time && nextEvent.time > time){\n\t\t\treturn midPoint\n\t\t} else if (event.time > time){\n\t\t\t//search lower\n\t\t\tend = midPoint\n\t\t} else if (event.time < time){\n\t\t\t//search upper\n\t\t\tbeginning = midPoint + 1\n\t\t}\n\t}\n\treturn -1\n}\n\n/**\n * Does a binary search to insert the note\n * in the correct spot in the array\n * @param  {Array} array\n * @param  {Object} event\n * @param  {Number=} offset\n */\nfunction BinaryInsert(array, event){\n\tif (array.length){\n\t\tconst index = findElement(array, event.time)\n\t\tarray.splice(index + 1, 0, event)\n\t} else {\n\t\tarray.push(event)\n\t}\n}\n\nexport {BinaryInsert}\n","const channelNames = {\n\t\"1\"  : \"modulationWheel\",\n\t\"2\"  : \"breath\",\n\t\"4\"  : \"footController\",\n\t\"5\"  : \"portamentoTime\",\n\t\"7\"  : \"volume\",\n\t\"8\"  : \"balance\",\n\t\"10\" : \"pan\",\n\t\"64\" : \"sustain\",\n\t\"65\" : \"portamentoTime\",\n\t\"66\" : \"sostenuto\",\n\t\"67\" : \"softPedal\",\n\t\"68\" : \"legatoFootswitch\",\n\t\"84\" : \"portamentoContro\"\n}\n\nclass Control{\n\tconstructor(number, time, value){\n\n\t\tthis.number = number\n\n\t\tthis.time = time\n\n\t\tthis.value = value\n\t}\n\n\t/**\n\t * The common name of the control change event\n\t * @type {String}\n\t * @readOnly\n\t */\n\tget name(){\n\t\tif (channelNames.hasOwnProperty(this.number)){\n\t\t\treturn channelNames[this.number]\n\t\t}\n\t}\n}\n\nexport {Control}\n","\nfunction hasMoreValues(arrays, positions){\n\tfor (let i = 0; i < arrays.length; i++){\n\t\tlet arr = arrays[i]\n\t\tlet pos = positions[i]\n\t\tif (arr.length > pos){\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nfunction getLowestAtPosition(arrays, positions, encoders){\n\tlet lowestIndex = 0\n\tlet lowestValue = Infinity\n\tfor (let i = 0; i < arrays.length; i++){\n\t\tlet arr = arrays[i]\n\t\tlet pos = positions[i]\n\t\tif (arr[pos] && (arr[pos].time < lowestValue)){\n\t\t\tlowestIndex = i\n\t\t\tlowestValue = arr[pos].time\n\t\t}\n\t}\n\tencoders[lowestIndex](arrays[lowestIndex][positions[lowestIndex]])\n\t// increment array\n\tpositions[lowestIndex] += 1\n}\n\n/**\n * Combine multiple arrays keeping the timing in order\n * The arguments should alternate between the array and the encoder callback\n * @param {...Array|Function} args\n */\nfunction Merge(...args){\n\tconst arrays = args.filter((v, i) => (i % 2) === 0)\n\tconst positions = new Uint32Array(arrays.length)\n\tconst encoders = args.filter((v, i) => (i % 2) === 1)\n\tconst output = []\n\twhile(hasMoreValues(arrays, positions)){\n\t\tgetLowestAtPosition(arrays, positions, encoders)\n\t}\n}\n\nexport {Merge}","import * as Util from './Util'\n\nclass Note{\n\t/**\n\t * Convert JSON to Note object\n\t * @param {object} json\n\t * @static\n\t * @returns {Note}\n\t */\n\tstatic fromJSON(json) {\n\t\tvar note = new Note(json.midi, json.time, json.duration, json.velocity)\n\t\treturn note\n\t}\n\t\n\tconstructor(midi, time, duration=0, velocity=1){\n\n\t\t/**\n\t\t * The MIDI note number\n\t\t * @type {Number}\n\t\t */\n\t\tif (Util.isNumber(midi)){\n\t\t\tthis.midi = midi\n\t\t} else if (Util.isPitch(midi)){\n\t\t\tthis.name = midi\n\t\t} else {\n\t\t\tthrow new Error('the midi value must either be in Pitch Notation (e.g. C#4) or a midi value')\n\t\t}\n\n\t\t/**\n\t\t * The note on time in seconds\n\t\t * @type {Number}\n\t\t */\n\t\tthis.time = time\n\n\t\t/**\n\t\t * The duration in seconds\n\t\t * @type {Number}\n\t\t */\n\t\tthis.duration = duration\n\n\t\t/**\n\t\t * The velocity 0-1\n\t\t * @type {Number}\n\t\t */\n\t\tthis.velocity = velocity\n\t}\n\n\t/**\n\t * If the note is the same as the given note\n\t * @param {String|Number} note\n\t * @return {Boolean}\n\t */\n\tmatch(note){\n\t\tif (Util.isNumber(note)){\n\t\t\treturn this.midi === note\n\t\t} else if (Util.isPitch(note)){\n\t\t\treturn this.name.toLowerCase() === note.toLowerCase()\n\t\t}\n\t}\n\n\t/**\n\t * The note in Scientific Pitch Notation\n\t * @type {String}\n\t */\n\tget name(){\n\t\treturn Util.midiToPitch(this.midi)\n\t}\n\tset name(name){\n\t\tthis.midi = Util.pitchToMidi(name)\n\t}\n\n\t/**\n\t * Alias for time\n\t * @type {Number}\n\t */\n\tget noteOn(){\n\t\treturn this.time\n\t}\n\tset noteOn(t){\n\t\tthis.time = t\n\t}\n\n\t/**\n\t * The note off time\n\t * @type {Number}\n\t */\n\tget noteOff(){\n\t\treturn this.time + this.duration\n\t}\n\tset noteOff(time){\n\t\tthis.duration = time - this.time\n\t}\n\n\t/**\n\t * Convert the note to JSON\n\t * @returns {Object}\n\t */\n\ttoJSON(){\n\t\treturn {\n\t\t\tname : this.name,\n\t\t\tmidi : this.midi,\n\t\t\ttime : this.time,\n\t\t\tvelocity : this.velocity,\n\t\t\tduration : this.duration\n\t\t}\n\t}\n}\n\nexport {Note}\n","export const instrumentByPatchID = [\n\t\"acoustic grand piano\",\n\t\"bright acoustic piano\",\n\t\"electric grand piano\",\n\t\"honky-tonk piano\",\n\t\"electric piano 1\",\n\t\"electric piano 2\",\n\t\"harpsichord\",\n\t\"clavi\",\n\t\"celesta\",\n\t\"glockenspiel\",\n\t\"music box\",\n\t\"vibraphone\",\n\t\"marimba\",\n\t\"xylophone\",\n\t\"tubular bells\",\n\t\"dulcimer\",\n\t\"drawbar organ\",\n\t\"percussive organ\",\n\t\"rock organ\",\n\t\"church organ\",\n\t\"reed organ\",\n\t\"accordion\",\n\t\"harmonica\",\n\t\"tango accordion\",\n\t\"acoustic guitar (nylon)\",\n\t\"acoustic guitar (steel)\",\n\t\"electric guitar (jazz)\",\n\t\"electric guitar (clean)\",\n\t\"electric guitar (muted)\",\n\t\"overdriven guitar\",\n\t\"distortion guitar\",\n\t\"guitar harmonics\",\n\t\"acoustic bass\",\n\t\"electric bass (finger)\",\n\t\"electric bass (pick)\",\n\t\"fretless bass\",\n\t\"slap bass 1\",\n\t\"slap bass 2\",\n\t\"synth bass 1\",\n\t\"synth bass 2\",\n\t\"violin\",\n\t\"viola\",\n\t\"cello\",\n\t\"contrabass\",\n\t\"tremolo strings\",\n\t\"pizzicato strings\",\n\t\"orchestral harp\",\n\t\"timpani\",\n\t\"string ensemble 1\",\n\t\"string ensemble 2\",\n\t\"synthstrings 1\",\n\t\"synthstrings 2\",\n\t\"choir aahs\",\n\t\"voice oohs\",\n\t\"synth voice\",\n\t\"orchestra hit\",\n\t\"trumpet\",\n\t\"trombone\",\n\t\"tuba\",\n\t\"muted trumpet\",\n\t\"french horn\",\n\t\"brass section\",\n\t\"synthbrass 1\",\n\t\"synthbrass 2\",\n\t\"soprano sax\",\n\t\"alto sax\",\n\t\"tenor sax\",\n\t\"baritone sax\",\n\t\"oboe\",\n\t\"english horn\",\n\t\"bassoon\",\n\t\"clarinet\",\n\t\"piccolo\",\n\t\"flute\",\n\t\"recorder\",\n\t\"pan flute\",\n\t\"blown bottle\",\n\t\"shakuhachi\",\n\t\"whistle\",\n\t\"ocarina\",\n\t\"lead 1 (square)\",\n\t\"lead 2 (sawtooth)\",\n\t\"lead 3 (calliope)\",\n\t\"lead 4 (chiff)\",\n\t\"lead 5 (charang)\",\n\t\"lead 6 (voice)\",\n\t\"lead 7 (fifths)\",\n\t\"lead 8 (bass + lead)\",\n\t\"pad 1 (new age)\",\n\t\"pad 2 (warm)\",\n\t\"pad 3 (polysynth)\",\n\t\"pad 4 (choir)\",\n\t\"pad 5 (bowed)\",\n\t\"pad 6 (metallic)\",\n\t\"pad 7 (halo)\",\n\t\"pad 8 (sweep)\",\n\t\"fx 1 (rain)\",\n\t\"fx 2 (soundtrack)\",\n\t\"fx 3 (crystal)\",\n\t\"fx 4 (atmosphere)\",\n\t\"fx 5 (brightness)\",\n\t\"fx 6 (goblins)\",\n\t\"fx 7 (echoes)\",\n\t\"fx 8 (sci-fi)\",\n\t\"sitar\",\n\t\"banjo\",\n\t\"shamisen\",\n\t\"koto\",\n\t\"kalimba\",\n\t\"bag pipe\",\n\t\"fiddle\",\n\t\"shanai\",\n\t\"tinkle bell\",\n\t\"agogo\",\n\t\"steel drums\",\n\t\"woodblock\",\n\t\"taiko drum\",\n\t\"melodic tom\",\n\t\"synth drum\",\n\t\"reverse cymbal\",\n\t\"guitar fret noise\",\n\t\"breath noise\",\n\t\"seashore\",\n\t\"bird tweet\",\n\t\"telephone ring\",\n\t\"helicopter\",\n\t\"applause\",\n\t\"gunshot\",\n]\n\nexport const instrumentFamilyByID = [\n\t\"piano\",\n\t\"chromatic percussion\",\n\t\"organ\",\n\t\"guitar\",\n\t\"bass\",\n\t\"strings\",\n\t\"ensemble\",\n\t\"brass\",\n\t\"reed\",\n\t\"pipe\",\n\t\"synth lead\",\n\t\"synth pad\",\n\t\"synth effects\",\n\t\"ethnic\",\n\t\"percussive\",\n\t\"sound effects\",\n]\n\nexport const drumKitByPatchID = {\n\t 0: \"standard kit\",\n\t 8: \"room kit\",\n\t16: \"power kit\",\n\t24: \"electronic kit\",\n\t25: \"tr-808 kit\",\n\t32: \"jazz kit\",\n\t40: \"brush kit\",\n\t48: \"orchestra kit\",\n\t56: \"sound fx kit\",\n}\n","import {BinaryInsert} from './BinaryInsert'\nimport {Control} from './Control'\nimport {Merge} from './Merge'\nimport {Note} from './Note'\nimport {instrumentByPatchID, instrumentFamilyByID, drumKitByPatchID} from './instrumentMaps'\n\nclass Track {\n/**\n\t * Convert JSON to Track object\n\t * @param {object} json\n\t * @static\n\t * @returns {Track}\n\t */\n\tstatic fromJSON(json){\n\t\tvar track = new Track(json.name, json.instrumentNumber, json.channelNumber )\n\n\t\ttrack.id = json.id\n\t\t\n\t\tif (json.notes) {\n\t\t\tjson.notes.forEach((note) => {\n\t\t\t\tvar newNote = Note.fromJSON(note)\n\t\t\t\ttrack.notes.push(newNote)\n\t\t\t})\n\t\t}\n\n\t\tif (json.controlChanges) {\n\t\t\ttrack.controlChanges = json.controlChanges\n\t\t}\n\n\t\treturn track\n\t}\n\t\n\tconstructor(name, instrumentNumber=-1, channel=-1){\n\n\t\t/**\n\t\t * The name of the track\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = name\n\n\t\t/**\n\t\t * The MIDI channel of the track\n\t\t * @type {number}\n\t\t */\n\t\tthis.channelNumber = channel\n\n\t\t/**\n\t\t * The note events\n\t\t * @type {Array}\n\t\t */\n\t\tthis.notes = []\n\n\t\t/**\n\t\t * The control changes\n\t\t * @type {Object}\n\t\t */\n\t\tthis.controlChanges = {}\n\n\t\t/**\n\t\t * The MIDI patch ID of the instrument. -1 if none is set.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.instrumentNumber = instrumentNumber\n\t}\n\n\tnote(midi, time, duration=0, velocity=1){\n\t\tconst note = new Note(midi, time, duration, velocity)\n\t\tBinaryInsert(this.notes, note)\n\t\treturn this\n\t}\n\n\t/**\n\t * Add a note on event\n\t * @param  {Number|String} midi     The midi note as either a midi number or\n\t *                                  Pitch Notation like ('C#4')\n\t * @param  {Number} time     The time in seconds\n\t * @param  {Number} velocity The velocity value 0-1\n\t * @return {Track} this\n\t */\n\tnoteOn(midi, time, velocity=1){\n\t\tconst note = new Note(midi, time, 0, velocity)\n\t\tBinaryInsert(this.notes, note)\n\t\treturn this\n\t}\n\n\t/**\n\t * Add a note off event. Go through and find an unresolved\n\t * noteOn event with the same pitch.\n\t * @param  {String|Number} midi The midi number or note name.\n\t * @param  {Number} time The time of the event in seconds\n\t * @return {Track} this\n\t */\n\tnoteOff(midi, time){\n\t\tfor (let i = 0; i < this.notes.length; i++){\n\t\t\tlet note = this.notes[i]\n\t\t\tif (note.match(midi) && note.duration === 0){\n\t\t\t\tnote.noteOff = time\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Add a CC event\n\t * @param  {Number} num The CC number\n\t * @param  {Number} time The time of the event in seconds\n\t * @param  {Number} value The value of the CC\n\t * @return {Track} this\n\t */\n\tcc(num, time, value){\n\t\tif (!this.controlChanges.hasOwnProperty(num)){\n\t\t\tthis.controlChanges[num] = []\n\t\t}\n\t\tconst cc = new Control(num, time, value)\n\t\tBinaryInsert(this.controlChanges[num], cc)\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets instrumentNumber.\n\t * For a list of possible values, see the [General MIDI Instrument Patch Map](https://www.midi.org/specifications/item/gm-level-1-sound-set)\n\t * @param  {Number} id The Patch ID for this instrument, as specified in the General MIDI Instrument Patch Map\n\t */\n\tpatch(id){\n\t\tthis.instrumentNumber = id\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets channelNumber.\n\t * @param  {Number} id The MIDI channel number, between 0 and 0xF.  0x9 and 0xA are percussion\n\t */\n\tchannel(id){\n\t\tthis.channelNumber = id\n\t\treturn this\n\t}\n\n\t/**\n\t * An array of all the note on events\n\t * @type {Array<Object>}\n\t * @readOnly\n\t */\n\tget noteOns(){\n\t\tconst noteOns = []\n\t\tthis.notes.forEach((note) => {\n\t\t\tnoteOns.push({\n\t\t\t\ttime : note.noteOn,\n\t\t\t\tmidi : note.midi,\n\t\t\t\tname : note.name,\n\t\t\t\tvelocity : note.velocity\n\t\t\t})\n\t\t})\n\t\treturn noteOns\n\t}\n\n\t/**\n\t * An array of all the noteOff events\n\t * @type {Array<Object>}\n\t * @readOnly\n\t */\n\tget noteOffs(){\n\t\tconst noteOffs = []\n\t\tthis.notes.forEach((note) => {\n\t\t\tnoteOffs.push({\n\t\t\t\ttime : note.noteOff,\n\t\t\t\tmidi : note.midi,\n\t\t\t\tname : note.name\n\t\t\t})\n\t\t})\n\t\treturn noteOffs\n\t}\n\n\t/**\n\t * The length in seconds of the track\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this.notes.length\n\t}\n\n\t/**\n\t * The time of the first event in seconds\n\t * @type {Number}\n\t */\n\tget startTime() {\n\t\tif (this.notes.length){\n\t\t\tlet firstNote = this.notes[0]\n\t\t\treturn firstNote.noteOn\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\t/**\n\t * The time of the last event in seconds\n\t * @type {Number}\n\t */\n\tget duration() {\n\t\tif (this.notes.length){\n\t\t\tlet lastNote = this.notes[this.notes.length - 1]\n\t\t\treturn lastNote.noteOff\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\t/**\n\t * The name of the midi instrument\n\t * @type {String}\n\t */\n\tget instrument() {\n\t\tif (this.isPercussion){\n\t\t\treturn drumKitByPatchID[this.instrumentNumber]\n\t\t} else {\n\t\t\treturn instrumentByPatchID[this.instrumentNumber]\n\t\t}\n\t}\n\tset instrument(inst) {\n\t\tconst index = instrumentByPatchID.indexOf(inst)\n\t\tif (index !== -1){\n\t\t\tthis.instrumentNumber = index\n\t\t}\n\t}\n\n\n\t/**\n\t * Whether or not this is a percussion track\n\t * @type {Boolean}\n\t */\n\tget isPercussion() {\n\t\treturn [0x9, 0xA].includes(this.channelNumber)\n\t}\n\n\t/**\n\t * The family that the instrument belongs to\n\t * @type {String}\n\t * @readOnly\n\t */\n\tget instrumentFamily() {\n\t\tif (this.isPercussion){\n\t\t\treturn 'drums'\n\t\t} else {\n\t\t\treturn instrumentFamilyByID[Math.floor(this.instrumentNumber / 8)]\n\t\t}\n\t}\n\n\t/**\n\t * Scale the timing of all the events in the track\n\t * @param {Number} amount The amount to scale all the values\n\t */\n\tscale(amount){\n\t\tthis.notes.forEach((note) => {\n\t\t\tnote.time *= amount\n\t\t\tnote.duration *= amount\n\t\t})\n\t\treturn this\n\t}\n\n\t/**\n\t * Slice returns a new track with only events that occured between startTime and endTime.\n\t * Modifies this track.\n\t * @param {Number} startTime\n\t * @param {Number} endTime\n\t * @returns {Track}\n\t */\n\tslice(startTime=0, endTime=this.duration){\n\t\t// get the index before the startTime\n\t\tconst noteStartIndex = Math.max(this.notes.findIndex((note) => note.time >= startTime), 0)\n\t\tconst noteEndIndex = this.notes.findIndex((note) => note.noteOff >= endTime) + 1\n\t\tconst track = new Track(this.name)\n\t\ttrack.notes = this.notes.slice(noteStartIndex, noteEndIndex)\n\t\t//shift the start time\n\t\ttrack.notes.forEach((note) => note.time = note.time - startTime)\n\t\treturn track\n\t}\n\n\t/**\n\t * Write the output to the stream\n\t */\n\tencode(trackEncoder, header){\n\n\t\tconst ticksPerSecond = header.PPQ / (60 / header.bpm)\n\t\tlet lastEventTime = 0\n\n\t\t// unset, `channelNumber` defaults to -1, but that's not a valid MIDI channel\n\t\tconst channelNumber = Math.max(0, this.channelNumber)\n\n\t\tfunction getDeltaTime(time){\n\t\t\tconst ticks = Math.floor(ticksPerSecond * time)\n\t\t\tconst delta = Math.max(ticks - lastEventTime, 0)\n\t\t\tlastEventTime = ticks\n\t\t\treturn delta\n\t\t}\n\n\t\tif (this.instrumentNumber !== -1) {\n\t\t\ttrackEncoder.instrument(channelNumber, this.instrumentNumber)\n\t\t}\n\n\t\tMerge(this.noteOns, (noteOn) => {\n\t\t\ttrackEncoder.addNoteOn(channelNumber, noteOn.name, getDeltaTime(noteOn.time), Math.floor(noteOn.velocity * 127))\n\t\t}, this.noteOffs, (noteOff) => {\n\t\t\ttrackEncoder.addNoteOff(channelNumber, noteOff.name, getDeltaTime(noteOff.time))\n\t\t})\n\t}\n\n\t/**\n\t *  Convert all of the fields to JSON\n\t *  @return  {Object}\n\t */\n\ttoJSON(){\n\n\t\tconst ret = {\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tlength: this.length,\n\t\t\tnotes: [],\n\t\t\tcontrolChanges: {},\n\t\t}\n\n\t\tif (typeof this.id !== 'undefined')\n\t\t\tret.id = this.id\n\n\t\tret.name = this.name\n\n\t\tif (this.instrumentNumber !== -1){\n\t\t\tret.instrumentNumber = this.instrumentNumber\n\t\t\tret.instrument = this.instrument\n\t\t\tret.instrumentFamily = this.instrumentFamily\n\t\t}\n\n\t\tif (this.channelNumber !== -1){\n\t\t\tret.channelNumber = this.channelNumber\n\t\t\tret.isPercussion = this.isPercussion\n\t\t}\n\n\t\tif (this.notes.length)\n\t\t\tret.notes = this.notes.map((n) => n.toJSON())\n\n\t\tif (Object.keys(this.controlChanges).length)\n\t\t\tret.controlChanges = this.controlChanges\n\n\t\treturn ret\n\t}\n}\n\nexport {Track}\n","import * as Decoder from 'midi-file-parser'\nimport * as Encoder from 'jsmidgen'\nimport * as Util from './Util'\nimport {Track} from './Track'\nimport {parseHeader} from './Header'\n\n/**\n * @class The Midi object. Contains tracks and the header info.\n */\nclass Midi {\n\t/**\n\t * Convert JSON to Midi object\n\t * @param {object} json\n\t * @static\n\t * @returns {Midi}\n\t */\n\tstatic fromJSON(json){\n\t\tvar midi = new Midi()\n\n\t\tmidi.header = json.header\n\t\tjson.tracks.forEach((track) => {\n\t\t\tvar newTrack = Track.fromJSON(track)\n\t\t\tmidi.tracks.push(newTrack)\n\t\t})\n\n\t\treturn midi\n\t}\n\t\n\tconstructor(){\n\n\t\tthis.header = {\n\t\t\t//defaults\n\t\t\tbpm : 120,\n\t\t\ttimeSignature : [4, 4],\n\t\t\tPPQ : 480\n\t\t}\n\n\t\tthis.tracks = []\n\t}\n\n\t/**\n\t * Load the given url and parse the midi at that url\n\t * @param  {String}   url\n\t * @param {*} data Anything that should be sent in the XHR\n\t * @param {String} method Either GET or POST\n\t * @return {Promise}\n\t */\n\tload(url, data=null, method='GET'){\n\t\treturn new Promise((success, fail) => {\n\t\t\tvar request = new XMLHttpRequest()\n\t\t\trequest.open(method, url)\n\t\t\trequest.responseType = 'arraybuffer'\n\t\t\t// decode asynchronously\n\t\t\trequest.addEventListener('load', () => {\n\t\t\t\tif (request.readyState === 4 && request.status === 200){\n\t\t\t\t\tsuccess(this.decode(request.response))\n\t\t\t\t} else {\n\t\t\t\t\tfail(request.status)\n\t\t\t\t}\n\t\t\t})\n\t\t\trequest.addEventListener('error', fail)\n\t\t\trequest.send(data)\n\t\t}).catch(function(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\t/**\n\t * Decode the bytes\n\t * @param  {String|ArrayBuffer} bytes The midi file encoded as a string or ArrayBuffer\n\t * @return {Midi}       this\n\t */\n\tdecode(bytes){\n\n\t\tif (bytes instanceof ArrayBuffer){\n\t\t\tvar byteArray = new Uint8Array(bytes)\n\t\t\tbytes = String.fromCharCode.apply(null, byteArray)\n\t\t}\n\n\t\tconst midiData = Decoder(bytes)\n\n\t\tthis.header = parseHeader(midiData)\n\n\t\t//replace the previous tracks\n\t\tthis.tracks = []\n\n\t\tmidiData.tracks.forEach((trackData, i) => {\n\n\t\t\tconst track = new Track()\n\t\t\ttrack.id = i\n\t\t\tthis.tracks.push(track)\n\n\t\t\tlet absoluteTime = 0\n\t\t\ttrackData.forEach((event) => {\n\t\t\t\tabsoluteTime += Util.ticksToSeconds(event.deltaTime, this.header)\n\t\t\t\tif (event.type === 'meta' && event.subtype === 'trackName'){\n\t\t\t\t\ttrack.name = Util.cleanName(event.text)\n\t\t\t\t} else if (event.subtype === 'noteOn'){\n\t\t\t\t\ttrack.noteOn(event.noteNumber, absoluteTime, event.velocity / 127)\n\n\t\t\t\t\tif (track.channelNumber === -1) {\n\t\t\t\t\t\ttrack.channelNumber = event.channel\n\t\t\t\t\t}\n\t\t\t\t} else if (event.subtype === 'noteOff'){\n\t\t\t\t\ttrack.noteOff(event.noteNumber, absoluteTime)\n\t\t\t\t} else if (event.subtype === 'controller' && event.controllerType){\n\t\t\t\t\ttrack.cc(event.controllerType, absoluteTime, event.value / 127)\n\t\t\t\t} else if (event.type === 'meta' && event.subtype === 'instrumentName'){\n\t\t\t\t\ttrack.instrument = event.text\n\t\t\t\t} else if (event.type === 'channel' && event.subtype === 'programChange'){\n\t\t\t\t\ttrack.patch(event.programNumber)\n\t\t\t\t\ttrack.channelNumber = event.channel\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t//if the track is empty, then it is the file name\n\t\t\tif (!this.header.name && !track.length && track.name) {\n\t\t\t\tthis.header.name = track.name;\n\t\t\t}\n\t\t})\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Encode the Midi object as a Buffer String\n\t * @returns {String}\n\t */\n\tencode(){\n\t\tconst output = new Encoder.File({\n\t\t\tticks : this.header.PPQ\n\t\t})\n\n\t\tconst firstEmptyTrack = this.tracks.filter(track => !track.length)[0];\n\n\t\tif (this.header.name && !(firstEmptyTrack && firstEmptyTrack.name === this.header.name)) {\n\t\t\tconst track = output.addTrack()\n\t\t\ttrack.addEvent(\n\t\t\t\tnew Encoder.MetaEvent({\n\t\t\t\t\ttime: 0,\n\t\t\t\t\ttype: Encoder.MetaEvent.TRACK_NAME,\n\t\t\t\t\tdata: this.header.name\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\n\t\tthis.tracks.forEach((track) => {\n\t\t\tconst trackEncoder = output.addTrack()\n\t\t\ttrackEncoder.setTempo(this.bpm)\n\n\t\t\tif (track.name) {\n\t\t\t\ttrackEncoder.addEvent(\n\t\t\t\t\tnew Encoder.MetaEvent({\n\t\t\t\t\t\ttime: 0,\n\t\t\t\t\t\ttype: Encoder.MetaEvent.TRACK_NAME,\n\t\t\t\t\t\tdata: track.name\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\n\t\t\ttrack.encode(trackEncoder, this.header)\n\t\t})\n\t\treturn output.toBytes()\n\t}\n\n\t/**\n\t * Convert the output encoding into an Array\n\t * @return {Array}\n\t */\n\ttoArray(){\n\t\tconst encodedStr = this.encode()\n\t\tconst buffer = new Array(encodedStr.length)\n\t\tfor (let i = 0; i < encodedStr.length; i++){\n\t\t\tbuffer[i] = encodedStr.charCodeAt(i)\n\t\t}\n\t\treturn buffer\n\t}\n\n\t/**\n\t *  Convert all of the fields to JSON\n\t *  @return  {Object}\n\t */\n\ttoJSON(){\n\t\tconst ret = {\n\t\t\theader: this.header,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\ttracks: (this.tracks || []).map(\n\t\t\t\ttrack => track.toJSON()\n\t\t\t)\n\t\t}\n\n\t\tif (!ret.header.name)\n\t\t\tret.header.name = ''\n\n\t\treturn ret\n\t}\n\n\t/**\n\t * Add a new track.\n\t * @param {String=} name Optionally include the name of the track\n\t * @returns {Track}\n\t */\n\ttrack(name){\n\t\tconst track = new Track(name)\n\t\tthis.tracks.push(track)\n\t\treturn track\n\t}\n\n\t/**\n\t * Get a track either by it's name or track index\n\t * @param  {Number|String} trackName\n\t * @return {Track}\n\t */\n\tget(trackName){\n\t\tif (Util.isNumber(trackName)){\n\t\t\treturn this.tracks[trackName]\n\t\t} else {\n\t\t\treturn this.tracks.find((t) => t.name === trackName)\n\t\t}\n\t}\n\n\t/**\n\t * Slice the midi file between the startTime and endTime. Returns a copy of the\n\t * midi\n\t * @param {Number} startTime\n\t * @param {Number} endTime\n\t * @returns {Midi} this\n\t */\n\tslice(startTime=0, endTime=this.duration){\n\t\tconst midi = new Midi()\n\t\tmidi.header = this.header\n\t\tmidi.tracks = this.tracks.map((t) => t.slice(startTime, endTime))\n\t\treturn midi\n\t}\n\n\t/**\n\t * the time of the first event\n\t * @type {Number}\n\t */\n\tget startTime(){\n\t\tconst startTimes = this.tracks.map((t) => t.startTime)\n\n\t\tif (!startTimes.length)\n\t\t\treturn 0\n\n\t\treturn Math.min.apply(Math, startTimes) || 0\n\t}\n\n\t/**\n\t * The bpm of the midi file in beats per minute\n\t * @type {Number}\n\t */\n\tget bpm(){\n\t\treturn this.header.bpm\n\t}\n\tset bpm(bpm){\n\t\tconst prevTempo = this.header.bpm\n\t\tthis.header.bpm = bpm\n\t\t//adjust the timing of all the notes\n\t\tconst ratio = prevTempo / bpm\n\t\tthis.tracks.forEach((track) => track.scale(ratio))\n\n\t}\n\n\t/**\n\t * The timeSignature of the midi file\n\t * @type {Array}\n\t */\n\tget timeSignature(){\n\t\treturn this.header.timeSignature\n\t}\n\tset timeSignature(timeSig){\n\t\tthis.header.timeSignature = timeSig\n\t}\n\n\t/**\n\t * The duration is the end time of the longest track\n\t * @type {Number}\n\t */\n\tget duration(){\n\t\tconst durations = this.tracks.map((t) => t.duration)\n\n\t\tif (!durations.length)\n\t\t\treturn 0\n\n\t\treturn Math.max.apply(Math, durations) || 0\n\t}\n}\n\nexport {Midi}\n","/**\n *  Parse tempo and time signature from the midiJson\n *  @param  {Object}  midiJson\n *  @return  {Object}\n */\nfunction parseHeader(midiJson){\n\tvar ret = {\n\t\tPPQ : midiJson.header.ticksPerBeat\n\t}\n\tfor (var i = 0; i < midiJson.tracks.length; i++){\n\t\tvar track = midiJson.tracks[i]\n\t\tfor (var j = 0; j < track.length; j++){\n\t\t\tvar datum = track[j]\n\t\t\tif (datum.type === \"meta\"){\n\t\t\t\tif (datum.subtype === \"timeSignature\"){\n\t\t\t\t\tret.timeSignature = [datum.numerator, datum.denominator]\n\t\t\t\t} else if (datum.subtype === \"setTempo\"){\n\t\t\t\t\tif (!ret.bpm){\n\t\t\t\t\t\tret.bpm = 60000000 / datum.microsecondsPerBeat\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tret.bpm = ret.bpm || 120\n\treturn ret\n}\n\nexport {parseHeader}\n","import {Midi} from './Midi'\nexport {instrumentByPatchID, instrumentFamilyByID, drumKitByPatchID} from './instrumentMaps'\n\n/**\n *  Parse all the data from the Midi file into this format:\n *  {\n *  \t// the transport and timing data\n *  \theader : {\n *  \t\tbpm : Number,                     // tempo, e.g. 120\n *  \t\ttimeSignature : [Number, Number], // time signature, e.g. [4, 4],\n *  \t\tPPQ : Number                  // PPQ of the midi file\n *  \t}\n *  \t// an array for each of the midi tracks\n *  \ttracks : [\n *  \t\t{\n *  \t\t\tname : String, // the track name if one was given\n *  \t\t\tnotes : [\n *  \t\t\t\t{\n *  \t\t\t\t\ttime : Number, // time in seconds\n *  \t\t\t\t\tname : String, // note name, e.g. 'C4'\n *  \t\t\t\t\tmidi : Number, // midi number, e.g. 60\n *  \t\t\t\t\tvelocity : Number,  // normalized velocity\n *  \t\t\t\t\tduration : Number   // duration between noteOn and noteOff\n *  \t\t\t\t}\n *  \t\t\t],\n *  \t\t\tcontrolChanges : { //all of the control changes\n *  \t\t\t\t64 : [ //array for each cc value\n *  \t\t\t\t\t{\n *  \t\t\t\t\t\tnumber : Number, //the cc number\n *  \t\t\t\t\t\ttime : Number, //the time of the event in seconds\n *  \t\t\t\t\t\tname : String, // if the cc value has a common name (e.g. 'sustain')\n *  \t\t\t\t\t\tvalue : Number, //the normalized value\n *  \t\t\t\t\t}\n *  \t\t\t\t]\n *  \t\t\t}\n *  \t\t}\n *  \t]\n *  }\n *  @param  {Binary String}  fileBlob  The output from fs.readFile or FileReader\n *  @returns {Object} All of the options parsed from the midi file.\n */\nexport function parse(fileBlob){\n\treturn new Midi().decode(fileBlob)\n}\n\n/**\n *  Load and parse a midi file. See `parse` for what the results look like.\n *  @param  {String}    url\n *  @param {Function=} callback\n *  @returns {Promise} A promise which is invoked with the returned Midi object\n */\nexport function load(url, callback){\n\tconst promise = new Midi().load(url)\n\tif (callback){\n\t\tpromise.then(callback)\n\t}\n\treturn promise\n}\n\n/**\n * Create an empty midi file\n * @return {Midi}\n */\nexport function create(){\n\treturn new Midi()\n}\n\n/**\n * Create midi object from json\n * @param {object} json\n * @returns {Midi} Deserialized midi object\n */\nexport function fromJSON(json){\n\treturn Midi.fromJSON(json)\n}\n","class GUI {\n\n    Init(jon, container){\n\n        if(!guify) {\n            console.log(\"Guify was not found! Add it to your page to enable a GUI for this program.\");\n            return;\n        }\n\n        this.panel = new guify({\n            title: \"Jon-Trombone\", \n            theme: \"dark\", \n            root: container,\n            width: 350,\n            barMode: \"above\",\n            align: \"right\",\n            opacity: \"0.95\"\n        });\n\n        this.panel.Register({ \n            type: \"checkbox\", label: \"Mute\", \n            object: jon.trombone, property: \"muted\", \n            onChange: (data) => {\n                jon.trombone.SetMute(data);\n            } \n        });\n\n        // Jon folder\n        this.panel.Register({ type: \"folder\", label: \"Jon\" });\n        this.panel.Register([\n            { type: \"checkbox\", label: \"Move Jaw\", object: jon, property: \"moveJaw\" },\n            { type: \"range\", label: \"Jaw Speed\", object: jon, property: \"jawFlapSpeed\", min: 0, max: 100 },\n            { type: \"range\", label: \"Jaw Range\", object: jon, property: \"jawOpenOffset\", min: 0, max: 1 },\n        ], { folder: \"Jon\" });\n\n        // Voice folder\n        this.panel.Register({ type: \"folder\", label: \"Voice\" });\n        this.panel.Register([\n            { type: \"checkbox\", label: \"Wobble\", object: jon.trombone, property: \"autoWobble\" },\n            { type: \"checkbox\", label: \"Pitch Variance\", object: jon.trombone.voices[0].glottis, property: \"addPitchVariance\" },\n            { type: \"checkbox\", label: \"Tenseness Variance\", object: jon.trombone.voices[0].glottis, property: \"addTensenessVariance\" },\n            { type: \"range\", label: \"Tenseness\", object: jon.trombone.voices[0].glottis, property: \"UITenseness\", min: 0, max: 1 },\n            { type: \"range\", label: \"Vibrato\", object: jon.trombone.voices[0].glottis, property: \"vibratoAmount\", min: 0, max: 0.5 },\n            { type: \"range\", label: \"Frequency\", object: jon.trombone.voices[0].glottis, property: \"UIFrequency\", min: 1, max: 1000, step: 1 },\n            { type: \"range\", label: \"Loudness\", object: jon.trombone.voices[0].glottis, property: \"loudness\", min: 0, max: 1 },\n        ], { folder: \"Voice\" });\n\n        // Tract folder\n        this.panel.Register({ type: \"folder\", label: \"Tract\" });\n        this.panel.Register([\n            { type: \"range\", label: \"Move Speed\", object: jon.trombone.voices[0].tract, property: \"movementSpeed\", min: 1, max: 30, step: 1 },\n            { type: \"range\", label: \"Velum Target\", object: jon.trombone.voices[0].tract, property: \"velumTarget\", min: 0.001, max: 2 },\n            { type: \"range\", label: \"Target\", object: jon.trombone.voices[0].tractUI, property: \"target\", min: 0.001, max: 1 },\n            { type: \"range\", label: \"Index\", object: jon.trombone.voices[0].tractUI, property: \"index\", min: 0, max: 43, step: 1 },\n            { type: \"range\", label: \"Radius\", object: jon.trombone.voices[0].tractUI, property: \"radius\", min: 0, max: 5, step: 1 },\n        ], { folder: \"Tract\" });\n\n        // MIDI folder\n        this.panel.Register({ type: \"folder\", label: \"MIDI\" });\n        this.panel.Register([\n            { type: \"file\", label: \"MIDI File\", fileReadFunc: \"readAsBinaryString\",\n                onChange: (data) => {\n                    jon.midiController.LoadSongDirect(data);\n                }\n            },\n            { type: \"title\", label: \"Controls\" },\n            { type: \"button\", label: \"Play\", action: () => jon.midiController.PlaySong() },\n            { type: \"button\", label: \"Stop\", action: () => jon.midiController.Stop() },\n            { type: \"button\", label: \"Restart\", action: () => jon.midiController.Restart() },\n            { type: \"title\", label: \"Options\" },\n            { type: \"range\", label: \"Track\", object: jon.midiController, property: \"currentTrack\", min: 1, max: 20, step: 1 },\n            { type: \"range\", label: \"Base Frequency\", object: jon.midiController, property: \"baseFreq\", min: 1, max: 2000, step: 1 },\n            { type: \"checkbox\", label: \"Extreme Vibrato\", object: jon, property: \"flapWhileSinging\" },\n            { type: \"checkbox\", label: \"Legato\", object: jon, property: \"legato\" },\n        ], { folder: \"MIDI\" });\n\n    }\n\n}\n\nexport let gui = new GUI();","// const words = require('cmu-pronouncing-dictionary');\n\nexport class TTSController {\n    constructor(){\n        \n    }\n\n    // GetGraphemes(str){\n    //     let zeroPunctuation = str.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\n    //     let wordBank = []\n    //     for(let word of zeroPunctuation.split(' ')){\n    //         wordBank.push(this.GetPronunciationForWord(word));\n    //     }\n    //     return wordBank;\n    // }\n\n    // GetPronunciationForWord(rawWord){\n    //     let word = rawWord.toLowerCase();\n    //     if (words[word]){\n    //         return words[word];\n    //     } else {\n    //         // If the word isn't in the dict, ignore it for now\n    //         return \"None\";\n    //     }\n    // }\n\n\n\n}","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","let MidiConvert = require('midiconvert');\n\n/**\n * Simple class for MIDI playback.\n * The paradigm here's a bit weird; it's up to an external\n * source to actually produce audio. This class just manages\n * a timer, which GetPitch() reads to produce the \"current\"\n * note information. \n * \n * As an example of usage, jon-trombone calls PlaySong() to\n * begin, and then every frame uses GetPitch() to figure out\n * what the current frequency to produce is.\n */\nclass MidiController {\n\n    constructor(controller) {\n        this.controller = controller;\n\n        this.midi = null;\n\n        this.playing = false;\n        this.currentTrack = 5;\n\n        this.baseFreq = 440; //110 is A4\n\n        this.clock = new THREE.Clock(false);\n    }\n\n    /**\n     * Loads and parses a MIDI file.\n     */\n    LoadSong(path, callback){\n        this.Stop();\n        this.midi = null;\n        MidiConvert.load(path, (midi) => {\n            console.log(\"MIDI loaded.\");\n            this.midi = midi;\n            console.log(this.midi);\n            if(callback) callback(midi);\n        });\n    }\n\n    LoadSongDirect(file){\n        this.Stop();\n        this.midi = MidiConvert.parse(file);\n        console.log(\"MIDI loaded.\");\n        console.log(this.midi);\n    }\n\n    /**\n     * Gets the pitch for the specified track at the current time in the song.\n     */\n    GetPitch(trackIndex = this.currentTrack){\n        let time = this.GetSongProgress();\n\n        // Constrain track specified to valid range\n        trackIndex = Math.min(trackIndex, this.midi.tracks.length - 1);\n        trackIndex = Math.max(trackIndex, 0);\n\n        return this.midi.tracks[trackIndex].notes.find((item) => {\n            return item.noteOn <= time && time <= item.noteOff;\n        });\n    }\n\n    GetPitches(trackIndex = this.currentTrack){\n        let time = this.GetSongProgress();\n\n        // Constrain track specified to valid range\n        trackIndex = Math.min(trackIndex, this.midi.tracks.length - 1);\n        trackIndex = Math.max(trackIndex, 0);\n\n        return this.midi.tracks[trackIndex].notes.filter(item => \n            item.noteOn <= time && time <= item.noteOff);\n    }\n\n    PlaySong(track = 5){\n        if(this.playing){\n            return;\n        }\n\n        // If no song is specified, load a song\n        if(!this.midi){\n            console.log(\"No MIDI is loaded. Loading an example...\");\n            this.LoadSong('../resources/midi/un-owen-was-her.mid', () => {\n                this.PlaySong();\n            });\n            return;\n        }\n\n        // Turn off some stuff so the singing kind of sounds okay\n        this.EnterSingMode();\n\n        this.currentTrack = track;\n        this.clock.start();\n        this.playing = true;\n\n        console.log(\"Playback started.\");\n\n    }\n\n    GetSongProgress(){\n        return this.clock.getElapsedTime();\n    }\n\n    /**\n     * Converts from a MIDI note code to its corresponding frequency.\n     * @param {*} midiCode \n     */\n    MIDIToFrequency(midiCode){\n        return this.baseFreq * Math.pow(2, (midiCode - 69) / 12);\n    }\n\n    /**\n     * Restarts the playback.\n     */\n    Restart(){\n        console.log(\"Playback moved to beginning.\");\n        this.clock = new THREE.Clock();\n    }\n\n    /**\n     * Stops playback.\n     */\n    Stop() {\n        if(!this.playing){\n            return;\n        }\n        console.log(\"Playback stopped.\");\n        this.clock.stop();\n        this.playing = false;\n        this.ExitSingMode();\n    }\n\n    /**\n     * Sets up the trombone for singing.\n     */\n    EnterSingMode(){\n        if(this.backup_settings){\n            return;\n        }\n\n        this.backup_settings = {};\n\n        this.backup_settings[\"autoWobble\"] = this.controller.trombone.autoWobble;\n        this.controller.trombone.autoWobble = false;\n\n        for(let voice of this.controller.trombone.voices) {\n            let voiceBackup = {}\n\n            voiceBackup[\"addPitchVariance\"] = voice.glottis.addPitchVariance;\n            voice.glottis.addPitchVariance = false;\n\n            voiceBackup[\"addTensenessVariance\"] = voice.glottis.addTensenessVariance;\n            voice.glottis.addTensenessVariance = false;\n\n            voiceBackup[\"vibratoFrequency\"] = voice.glottis.vibratoFrequency;\n            voice.glottis.vibratoFrequency = 0;\n\n            voiceBackup[\"frequency\"] = voice.glottis.UIFrequency;\n\n            voiceBackup[\"loudness\"] = voice.glottis.loudness;\n            voice.glottis.loudness = 0;\n\n            this.backup_settings[`${voice.id}`] = voiceBackup\n        }\n    }\n\n    /**\n     * Restores the trombone to the state it was in before singing.\n     */\n    ExitSingMode(){\n        if(!this.backup_settings) {\n            return;\n        }\n\n        this.controller.trombone.autoWobble = this.backup_settings[\"autoWobble\"];\n\n        for(let voice of this.controller.trombone.voices) {\n            let backup = this.backup_settings[`${voice.id}`]\n            voice.glottis.addPitchVariance = backup[\"addPitchVariance\"];\n            voice.glottis.addTensenessVariance = backup[\"addTensenessVariance\"];\n            voice.glottis.vibratoFrequency = backup[\"vibratoFrequency\"];\n            voice.glottis.UIFrequency = backup[\"frequency\"];\n            voice.glottis.loudness = backup[\"loudness\"];\n        }\n\n        this.backup_settings = null;\n    }\n\n}\n\nexport { MidiController };","class TractUI\n{\n\n    constructor(trombone, tract) {\n        this.trombone = trombone;\n        this.tract = tract;\n        \n        this.originX = 340; \n        this.originY = 449; \n        this.radius = 298; \n        this.scale = 60;\n        this.tongueIndex = 12.9;\n        this.tongueDiameter = 2.43;\n        this.innerTongueControlRadius = 2.05;\n        this.outerTongueControlRadius = 3.5;\n        this.tongueTouch = 0;\n        this.angleScale = 0.64;\n        this.angleOffset = -0.24;\n        this.noseOffset = 0.8;\n        this.gridOffset = 1.7;\n\n        /// Final openness of the mouth (closer to 0 is more closed)\n        this.target = 0.1;\n        /// Index in the throat array to move to target\n        this.index = 42;\n        /// Number of throat segments to close around the index\n        this.radius = 0;\n    }\n    \n    init() {\n        let Tract = this.tract;\n\n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) \n        {\n            Tract.diameter[i] = Tract.targetDiameter[i] = Tract.restDiameter[i];\n        }\n\n        this.tongueLowerIndexBound = Tract.bladeStart+2;\n        this.tongueUpperIndexBound = Tract.tipStart-3;\n        this.tongueIndexCentre = 0.5*(this.tongueLowerIndexBound+this.tongueUpperIndexBound);\n    }\n        \n    getIndex(x,y) {\n        let Tract = this.tract;\n\n        var xx = x-this.originX; var yy = y-this.originY;\n        var angle = Math.atan2(yy, xx);\n        while (angle> 0) angle -= 2*Math.PI;\n        return (Math.PI + angle - this.angleOffset)*(Tract.lipStart-1) / (this.angleScale*Math.PI);\n    }\n\n    getDiameter(x,y) {\n        var xx = x-this.originX; var yy = y-this.originY;\n        return (this.radius-Math.sqrt(xx*xx + yy*yy))/this.scale;\n    }\n    \n    setRestDiameter() {\n        let Tract = this.tract;\n\n        for (var i=Tract.bladeStart; i<Tract.lipStart; i++)\n        {\n            var t = 1.1 * Math.PI*(this.tongueIndex - i)/(Tract.tipStart - Tract.bladeStart);\n            var fixedTongueDiameter = 2+(this.tongueDiameter-2)/1.5;\n            var curve = (1.5-fixedTongueDiameter+this.gridOffset)*Math.cos(t);\n            if (i == Tract.bladeStart-2 || i == Tract.lipStart-1) curve *= 0.8;\n            if (i == Tract.bladeStart || i == Tract.lipStart-2) curve *= 0.94;               \n            Tract.restDiameter[i] = 1.5 - curve;\n        }\n    }\n\n    /**\n     * Sets the lips of the modeled tract to be closed by the specified amount.\n     * @param {number} progress Percentage closed (number between 0 and 1)\n     */\n    SetLipsClosed(progress) {\n\n        let Tract = this.tract;\n        \n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) Tract.targetDiameter[i] = Tract.restDiameter[i];    \n\n        // Disable this behavior if the mouth is closed a certain amount\n        //if (progress > 0.8 || progress < 0.1) return;\n        \n        for(let i= this.index - this.radius; i <= this.index + this.radius; i++){\n            if (i > Tract.targetDiameter.length || i < 0) continue;\n            let interp = Math.lerp(Tract.restDiameter[i], this.target, progress);\n            Tract.targetDiameter[i] = interp;\n        }\n    }\n\n\n}\n\nexport { TractUI };","class Tract {\n\n    constructor(trombone, glottis) {\n        this.trombone = trombone;\n        this.glottis = glottis;\n        \n        this.n = 44;\n        this.bladeStart = 10;\n        this.tipStart = 32;\n        this.lipStart = 39;\n        this.R = []; //component going right\n        this.L = []; //component going left\n        this.reflection = [];\n        this.junctionOutputR = [];\n        this.junctionOutputL = [];\n        this.maxAmplitude = [];\n        this.diameter = [];\n        this.restDiameter = [];\n        this.targetDiameter = [];\n        this.newDiameter = [];\n        this.A = [];\n        this.glottalReflection = 0.75;\n        this.lipReflection = -0.85;\n        this.lastObstruction = -1;\n        this.fade = 1.0; //0.9999,\n        this.movementSpeed = 15; //cm per second\n        this.transients = [];\n        this.lipOutput = 0;\n        this.noseOutput = 0;\n        this.velumTarget = 0.01;\n    }\n\n    init() {\n        this.bladeStart = Math.floor(this.bladeStart*this.n/44);\n        this.tipStart = Math.floor(this.tipStart*this.n/44);\n        this.lipStart = Math.floor(this.lipStart*this.n/44);        \n        this.diameter = new Float64Array(this.n);\n        this.restDiameter = new Float64Array(this.n);\n        this.targetDiameter = new Float64Array(this.n);\n        this.newDiameter = new Float64Array(this.n);\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = 0;\n            if (i<7*this.n/44-0.5) diameter = 0.6;\n            else if (i<12*this.n/44) diameter = 1.1;\n            else diameter = 1.5;\n            this.diameter[i] = this.restDiameter[i] = this.targetDiameter[i] = this.newDiameter[i] = diameter;\n        }\n        this.R = new Float64Array(this.n);\n        this.L = new Float64Array(this.n);\n        this.reflection = new Float64Array(this.n+1);\n        this.newReflection = new Float64Array(this.n+1);\n        this.junctionOutputR = new Float64Array(this.n+1);\n        this.junctionOutputL = new Float64Array(this.n+1);\n        this.A =new Float64Array(this.n);\n        this.maxAmplitude = new Float64Array(this.n);\n        \n        this.noseLength = Math.floor(28*this.n/44)\n        this.noseStart = this.n-this.noseLength + 1;\n        this.noseR = new Float64Array(this.noseLength);\n        this.noseL = new Float64Array(this.noseLength);\n        this.noseJunctionOutputR = new Float64Array(this.noseLength+1);\n        this.noseJunctionOutputL = new Float64Array(this.noseLength+1);        \n        this.noseReflection = new Float64Array(this.noseLength+1);\n        this.noseDiameter = new Float64Array(this.noseLength);\n        this.noseA = new Float64Array(this.noseLength);\n        this.noseMaxAmplitude = new Float64Array(this.noseLength);\n        for (var i=0; i<this.noseLength; i++)\n        {\n            var diameter;\n            var d = 2*(i/this.noseLength);\n            if (d<1) diameter = 0.4+1.6*d;\n            else diameter = 0.5+1.5*(2-d);\n            diameter = Math.min(diameter, 1.9);\n            this.noseDiameter[i] = diameter;\n        }       \n        this.newReflectionLeft = this.newReflectionRight = this.newReflectionNose = 0;\n        this.calculateReflections();        \n        this.calculateNoseReflections();\n        this.noseDiameter[0] = this.velumTarget;\n    }\n    \n    reshapeTract(deltaTime) {\n        var amount = deltaTime * this.movementSpeed; ;    \n        var newLastObstruction = -1;\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = this.diameter[i];\n            var targetDiameter = this.targetDiameter[i];\n            if (diameter <= 0) newLastObstruction = i;\n            var slowReturn; \n            if (i<this.noseStart) slowReturn = 0.6;\n            else if (i >= this.tipStart) slowReturn = 1.0; \n            else slowReturn = 0.6+0.4*(i-this.noseStart)/(this.tipStart-this.noseStart);\n            this.diameter[i] = Math.moveTowards(diameter, targetDiameter, slowReturn*amount, 2*amount);\n        }\n        if (this.lastObstruction>-1 && newLastObstruction == -1 && this.noseA[0]<0.05)\n        {\n            this.addTransient(this.lastObstruction);\n        }\n        this.lastObstruction = newLastObstruction;\n        \n        amount = deltaTime * this.movementSpeed; \n        this.noseDiameter[0] = Math.moveTowards(this.noseDiameter[0], this.velumTarget, \n                amount*0.25, amount*0.1);\n        this.noseA[0] = this.noseDiameter[0]*this.noseDiameter[0];        \n    }\n    \n    calculateReflections() {\n        for (var i=0; i<this.n; i++) \n        {\n            this.A[i] = this.diameter[i]*this.diameter[i]; //ignoring PI etc.\n        }\n        for (var i=1; i<this.n; i++)\n        {\n            this.reflection[i] = this.newReflection[i];\n            if (this.A[i] == 0) this.newReflection[i] = 0.999; //to prevent some bad behaviour if 0\n            else this.newReflection[i] = (this.A[i-1]-this.A[i]) / (this.A[i-1]+this.A[i]); \n        }\n        \n        //now at junction with nose\n\n        this.reflectionLeft = this.newReflectionLeft;\n        this.reflectionRight = this.newReflectionRight;\n        this.reflectionNose = this.newReflectionNose;\n        var sum = this.A[this.noseStart]+this.A[this.noseStart+1]+this.noseA[0];\n        this.newReflectionLeft = (2*this.A[this.noseStart]-sum)/sum;\n        this.newReflectionRight = (2*this.A[this.noseStart+1]-sum)/sum;   \n        this.newReflectionNose = (2*this.noseA[0]-sum)/sum;      \n    }\n\n    calculateNoseReflections() {\n        for (var i=0; i<this.noseLength; i++) \n        {\n            this.noseA[i] = this.noseDiameter[i]*this.noseDiameter[i]; \n        }\n        for (var i=1; i<this.noseLength; i++)\n        {\n            this.noseReflection[i] = (this.noseA[i-1]-this.noseA[i]) / (this.noseA[i-1]+this.noseA[i]); \n        }\n    }\n    \n    runStep(glottalOutput, turbulenceNoise, lambda) {\n        var updateAmplitudes = (Math.random()<0.1);\n    \n        //mouth\n        this.processTransients();\n        this.addTurbulenceNoise(turbulenceNoise);\n        \n        //this.glottalReflection = -0.8 + 1.6 * Glottis.newTenseness;\n        this.junctionOutputR[0] = this.L[0] * this.glottalReflection + glottalOutput;\n        this.junctionOutputL[this.n] = this.R[this.n-1] * this.lipReflection; \n        \n        for (var i=1; i<this.n; i++)\n        {\n            var r = this.reflection[i] * (1-lambda) + this.newReflection[i]*lambda;\n            var w = r * (this.R[i-1] + this.L[i]);\n            this.junctionOutputR[i] = this.R[i-1] - w;\n            this.junctionOutputL[i] = this.L[i] + w;\n        }    \n        \n        //now at junction with nose\n        var i = this.noseStart;\n        var r = this.newReflectionLeft * (1-lambda) + this.reflectionLeft*lambda;\n        this.junctionOutputL[i] = r*this.R[i-1]+(1+r)*(this.noseL[0]+this.L[i]);\n        r = this.newReflectionRight * (1-lambda) + this.reflectionRight*lambda;\n        this.junctionOutputR[i] = r*this.L[i]+(1+r)*(this.R[i-1]+this.noseL[0]);     \n        r = this.newReflectionNose * (1-lambda) + this.reflectionNose*lambda;\n        this.noseJunctionOutputR[0] = r*this.noseL[0]+(1+r)*(this.L[i]+this.R[i-1]);\n         \n        for (var i=0; i<this.n; i++)\n        {          \n            this.R[i] = this.junctionOutputR[i]*0.999;\n            this.L[i] = this.junctionOutputL[i+1]*0.999; \n            \n            //this.R[i] = Math.clamp(this.junctionOutputR[i] * this.fade, -1, 1);\n            //this.L[i] = Math.clamp(this.junctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {   \n                var amplitude = Math.abs(this.R[i]+this.L[i]);\n                if (amplitude > this.maxAmplitude[i]) this.maxAmplitude[i] = amplitude;\n                else this.maxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.lipOutput = this.R[this.n-1];\n        \n        //nose     \n        this.noseJunctionOutputL[this.noseLength] = this.noseR[this.noseLength-1] * this.lipReflection; \n        \n        for (var i=1; i<this.noseLength; i++)\n        {\n            var w = this.noseReflection[i] * (this.noseR[i-1] + this.noseL[i]);\n            this.noseJunctionOutputR[i] = this.noseR[i-1] - w;\n            this.noseJunctionOutputL[i] = this.noseL[i] + w;\n        }\n        \n        for (var i=0; i<this.noseLength; i++)\n        {\n            this.noseR[i] = this.noseJunctionOutputR[i] * this.fade;\n            this.noseL[i] = this.noseJunctionOutputL[i+1] * this.fade;   \n            \n            //this.noseR[i] = Math.clamp(this.noseJunctionOutputR[i] * this.fade, -1, 1);\n            //this.noseL[i] = Math.clamp(this.noseJunctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {\n                var amplitude = Math.abs(this.noseR[i]+this.noseL[i]);\n                if (amplitude > this.noseMaxAmplitude[i]) this.noseMaxAmplitude[i] = amplitude;\n                else this.noseMaxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.noseOutput = this.noseR[this.noseLength-1];\n       \n    }\n    \n    finishBlock() {         \n        this.reshapeTract(this.trombone.audioSystem.blockTime);\n        this.calculateReflections();\n    }\n    \n    addTransient(position) {\n        var trans = {}\n        trans.position = position;\n        trans.timeAlive = 0;\n        trans.lifeTime = 0.2;\n        trans.strength = 0.3;\n        trans.exponent = 200;\n        this.transients.push(trans);\n    }\n    \n    processTransients() {\n        for (var i = 0; i < this.transients.length; i++)  \n        {\n            var trans = this.transients[i];\n            var amplitude = trans.strength * Math.pow(2, -trans.exponent * trans.timeAlive);\n            this.R[trans.position] += amplitude/2;\n            this.L[trans.position] += amplitude/2;\n            trans.timeAlive += 1.0/(this.trombone.audioSystem.sampleRate*2);\n        }\n        for (var i=this.transients.length-1; i>=0; i--)\n        {\n            var trans = this.transients[i];\n            if (trans.timeAlive > trans.lifeTime)\n            {\n                this.transients.splice(i,1);\n            }\n        }\n    }\n    \n    addTurbulenceNoise(turbulenceNoise) {\n        // for (var j=0; j<UI.touchesWithMouse.length; j++)\n        // {\n        //     var touch = UI.touchesWithMouse[j];\n        //     if (touch.index<2 || touch.index>Tract.n) continue;\n        //     if (touch.diameter<=0) continue;            \n        //     var intensity = touch.fricative_intensity;\n        //     if (intensity == 0) continue;\n        //     this.addTurbulenceNoiseAtIndex(0.66*turbulenceNoise*intensity, touch.index, touch.diameter);\n        // }\n    }\n    \n    addTurbulenceNoiseAtIndex(turbulenceNoise, index, diameter) {   \n        var i = Math.floor(index);\n        var delta = index - i;\n        turbulenceNoise *= this.glottis.getNoiseModulator();\n        var thinness0 = Math.clamp(8*(0.7-diameter),0,1);\n        var openness = Math.clamp(30*(diameter-0.3), 0, 1);\n        var noise0 = turbulenceNoise*(1-delta)*thinness0*openness;\n        var noise1 = turbulenceNoise*delta*thinness0*openness;\n        this.R[i+1] += noise0/2;\n        this.L[i+1] += noise0/2;\n        this.R[i+2] += noise1/2;\n        this.L[i+2] += noise1/2;\n    }\n};\n\nexport { Tract };","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nclass Grad {\n    constructor(x, y, z){\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    dot2(x, y){\n        return this.x*x + this.y*y;\n    }\n\n    dot3(x, y, z) {\n        return this.x*x + this.y*y + this.z*z;\n    };\n}\n\nclass Noise {\n    constructor() {\n        this.grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n                      new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n                      new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n        this.p = [151,160,137,91,90,15,\n            131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n            190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n            88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n            77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n            102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n            135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n            5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n            223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n            129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n            251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n            49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n            138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n\n        // To remove the need for index wrapping, double the permutation table length\n        this.perm = new Array(512);\n        this.gradP = new Array(512);\n\n        this.seed(Date.now());\n    }\n\n    seed(seed) {\n        if(seed > 0 && seed < 1) {\n            // Scale the seed out\n            seed *= 65536;\n        }\n\n        seed = Math.floor(seed);\n        if(seed < 256) {\n            seed |= seed << 8;\n        }\n\n        for(var i = 0; i < 256; i++) {\n            var v;\n            if (i & 1) {\n                v = this.p[i] ^ (seed & 255);\n            } else {\n                v = this.p[i] ^ ((seed>>8) & 255);\n            }\n\n            this.perm[i] = this.perm[i + 256] = v;\n            this.gradP[i] = this.gradP[i + 256] = this.grad3[v % 12];\n        }\n    };\n\n    // 2D simplex noise\n    simplex2(xin, yin) {\n        // Skewing and unskewing factors for 2, 3, and 4 dimensions\n        var F2 = 0.5*(Math.sqrt(3)-1);\n        var G2 = (3-Math.sqrt(3))/6;\n\n        var F3 = 1/3;\n        var G3 = 1/6;\n\n        var n0, n1, n2; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        var s = (xin+yin)*F2; // Hairy factor for 2D\n        var i = Math.floor(xin+s);\n        var j = Math.floor(yin+s);\n        var t = (i+j)*G2;\n        var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n        var y0 = yin-j+t;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1=1; j1=0;\n        } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n            i1=0; j1=1;\n        }\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        var y1 = y0 - j1 + G2;\n        var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        var y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        i &= 255;\n        j &= 255;\n        var gi0 = this.gradP[i+this.perm[j]];\n        var gi1 = this.gradP[i+i1+this.perm[j+j1]];\n        var gi2 = this.gradP[i+1+this.perm[j+1]];\n        // Calculate the contribution from the three corners\n        var t0 = 0.5 - x0*x0-y0*y0;\n        if(t0<0) {\n            n0 = 0;\n        } else {\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n        }\n        var t1 = 0.5 - x1*x1-y1*y1;\n        if(t1<0) {\n            n1 = 0;\n        } else {\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot2(x1, y1);\n        }\n        var t2 = 0.5 - x2*x2-y2*y2;\n        if(t2<0) {\n            n2 = 0;\n        } else {\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot2(x2, y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n    \n    simplex1(x){\n        return this.simplex2(x*1.2, -x*0.7);\n    }\n\n}\n\nconst singleton = new Noise();\nObject.freeze(singleton);\n\nexport default singleton;","import noise from \"../noise.js\";\n\nclass Glottis {\n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.timeInWaveform = 0;\n        this.oldFrequency = 140;\n        this.newFrequency = 140;\n        this.UIFrequency = 140;\n        this.smoothFrequency = 140;\n        this.oldTenseness = 0.6;\n        this.newTenseness = 0.6;\n        this.UITenseness = 0.6;\n        this.totalTime = 0;\n        this.vibratoAmount = 0.005;\n        this.vibratoFrequency = 6;\n        this.intensity = 0;\n        this.loudness = 1;\n        this.isTouched = false;\n        this.touch = 0;\n        this.x = 240;\n        this.y = 530;\n\n        this.keyboardTop = 500;\n        this.keyboardLeft = 0;\n        this.keyboardWidth = 600;\n        this.keyboardHeight = 100;\n        this.semitones = 20;\n        this.marks = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0];\n        this.baseNote = 87.3071; //F\n\n        this.output;\n\n        /// Allow pitch to wobble over time\n        this.addPitchVariance = true;\n        /// Allow tenseness to wobble over time\n        this.addTensenessVariance = true;\n\n    }\n    \n    init() {\n        this.setupWaveform(0);\n    }\n    \n    handleTouches() {\n        if (this.touch != 0 && !this.touch.alive) this.touch = 0;\n        \n        if (this.touch == 0)\n        {        \n            for (var j=0; j<UI.touchesWithMouse.length; j++)  \n            {\n                var touch = UI.touchesWithMouse[j];\n                if (!touch.alive) continue;\n                if (touch.y<this.keyboardTop) continue;\n                this.touch = touch;\n            }    \n        }\n        \n        if (this.touch != 0)\n        {\n            var local_y = this.touch.y -  this.keyboardTop-10;\n            var local_x = this.touch.x - this.keyboardLeft;\n            local_y = Math.clamp(local_y, 0, this.keyboardHeight-26);\n            var semitone = this.semitones * local_x / this.keyboardWidth + 0.5;\n            Glottis.UIFrequency = this.baseNote * Math.pow(2, semitone/12);\n            if (Glottis.intensity == 0) Glottis.smoothFrequency = Glottis.UIFrequency;\n            //Glottis.UIRd = 3*local_y / (this.keyboardHeight-20);\n            var t = Math.clamp(1-local_y / (this.keyboardHeight-28), 0, 1);\n            Glottis.UITenseness = 1-Math.cos(t*Math.PI*0.5);\n            Glottis.loudness = Math.pow(Glottis.UITenseness, 0.25);\n            this.x = this.touch.x;\n            this.y = local_y + this.keyboardTop+10;\n        }\n        Glottis.isTouched = (this.touch != 0);\n    }\n        \n    runStep(lambda, noiseSource) {\n        var timeStep = 1.0 / this.trombone.audioSystem.sampleRate;\n        this.timeInWaveform += timeStep;\n        this.totalTime += timeStep;\n        if (this.timeInWaveform > this.waveformLength) \n        {\n            this.timeInWaveform -= this.waveformLength;\n            this.setupWaveform(lambda);\n        }\n        var out = this.normalizedLFWaveform(this.timeInWaveform/this.waveformLength);\n        var aspiration = this.intensity*(1.0-Math.sqrt(this.UITenseness))*this.getNoiseModulator()*noiseSource;\n        aspiration *= 0.2 + 0.02 * noise.simplex1(this.totalTime * 1.99);\n        out += aspiration;\n        return out;\n    }\n    \n    getNoiseModulator() {\n        var voiced = 0.1+0.2*Math.max(0,Math.sin(Math.PI*2*this.timeInWaveform/this.waveformLength));\n        //return 0.3;\n        return this.UITenseness* this.intensity * voiced + (1-this.UITenseness* this.intensity ) * 0.3;\n    }\n    \n    finishBlock() {\n        var vibrato = 0;\n        if (this.addPitchVariance) {\n            // Add small imperfections to the vocal output\n            vibrato += this.vibratoAmount * Math.sin(2*Math.PI * this.totalTime *this.vibratoFrequency);          \n            vibrato += 0.02 * noise.simplex1(this.totalTime * 4.07);\n            vibrato += 0.04 * noise.simplex1(this.totalTime * 2.15);\n        }\n        \n        if (this.trombone.autoWobble)\n        {\n            vibrato += 0.2 * noise.simplex1(this.totalTime * 0.98);\n            vibrato += 0.4 * noise.simplex1(this.totalTime * 0.5);\n        }\n\n        if (this.UIFrequency>this.smoothFrequency) \n            this.smoothFrequency = Math.min(this.smoothFrequency * 1.1, this.UIFrequency);\n        if (this.UIFrequency<this.smoothFrequency) \n            this.smoothFrequency = Math.max(this.smoothFrequency / 1.1, this.UIFrequency);\n        this.oldFrequency = this.newFrequency;\n        this.newFrequency = this.smoothFrequency * (1+vibrato);\n        this.oldTenseness = this.newTenseness;\n\n        if (this.addTensenessVariance)\n            this.newTenseness = this.UITenseness + 0.1*noise.simplex1(this.totalTime*0.46)+0.05*noise.simplex1(this.totalTime*0.36);\n        else\n            this.newTenseness = this.UITenseness;\n\n        if (!this.isTouched && this.trombone.alwaysVoice) this.newTenseness += (3-this.UITenseness)*(1-this.intensity);\n        \n        if (this.isTouched || this.trombone.alwaysVoice)\n            this.intensity += 0.13;\n        this.intensity = Math.clamp(this.intensity, 0, 1);\n    }\n    \n    /// Queues up a single wave?\n    setupWaveform(lambda) {\n        this.frequency = this.oldFrequency*(1-lambda) + this.newFrequency*lambda;\n        var tenseness = this.oldTenseness*(1-lambda) + this.newTenseness*lambda;\n        this.Rd = 3*(1-tenseness);\n        this.waveformLength = 1.0/this.frequency;\n        \n        var Rd = this.Rd;\n        if (Rd<0.5) Rd = 0.5;\n        if (Rd>2.7) Rd = 2.7;\n        // normalized to time = 1, Ee = 1\n        var Ra = -0.01 + 0.048*Rd;\n        var Rk = 0.224 + 0.118*Rd;\n        var Rg = (Rk/4)*(0.5+1.2*Rk)/(0.11*Rd-Ra*(0.5+1.2*Rk));\n        \n        var Ta = Ra;\n        var Tp = 1 / (2*Rg);\n        var Te = Tp + Tp*Rk; //\n        \n        var epsilon = 1/Ta;\n        var shift = Math.exp(-epsilon * (1-Te));\n        var Delta = 1 - shift; //divide by this to scale RHS\n           \n        var RHSIntegral = (1/epsilon)*(shift - 1) + (1-Te)*shift;\n        RHSIntegral = RHSIntegral/Delta;\n        \n        var totalLowerIntegral = - (Te-Tp)/2 + RHSIntegral;\n        var totalUpperIntegral = -totalLowerIntegral;\n        \n        var omega = Math.PI/Tp;\n        var s = Math.sin(omega*Te);\n        var y = -Math.PI*s*totalUpperIntegral / (Tp*2);\n        var z = Math.log(y);\n        var alpha = z/(Tp/2 - Te);\n        var E0 = -1 / (s*Math.exp(alpha*Te));\n        this.alpha = alpha;\n        this.E0 = E0;\n        this.epsilon = epsilon;\n        this.shift = shift;\n        this.Delta = Delta;\n        this.Te=Te;\n        this.omega = omega;\n    }\n    \n \n    normalizedLFWaveform(t) {     \n        if (t>this.Te) this.output = (-Math.exp(-this.epsilon * (t-this.Te)) + this.shift)/this.Delta;\n        else this.output = this.E0 * Math.exp(this.alpha*t) * Math.sin(this.omega * t);\n     \n        return this.output * this.intensity * this.loudness;\n    }\n}\n\nexport { Glottis };","\n\nclass AudioSystem {  \n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.blockLength = 512;\n        this.blockTime = 1;\n        this.soundOn = false;\n\n    }\n\n    init() {\n        window.AudioContext = window.AudioContext||window.webkitAudioContext;\n        this.audioContext = new window.AudioContext();\n        this.sampleRate = this.audioContext.sampleRate;\n        \n        this.blockTime = this.blockLength/this.sampleRate;\n\n        this.processors = [];\n    }\n    \n    startSound() {\n        for (let i = 0; i < this.trombone.voices.length; i++) {\n            //scriptProcessor may need a dummy input channel on iOS\n            let scriptProcessor = this.audioContext.createScriptProcessor(this.blockLength, 2, 1);\n            scriptProcessor.connect(this.audioContext.destination);\n            scriptProcessor.onaudioprocess = (e) => {this.doScriptProcessor(e, i)};\n        \n            var whiteNoise = this.createWhiteNoiseNode(2 * this.sampleRate); // 2 seconds of noise\n            \n            var aspirateFilter = this.audioContext.createBiquadFilter();\n            aspirateFilter.type = \"bandpass\";\n            aspirateFilter.frequency.value = 500;\n            aspirateFilter.Q.value = 0.5;\n            whiteNoise.connect(aspirateFilter);  // Use white noise as input for filter\n            aspirateFilter.connect(scriptProcessor);  // Use this as input 0 for script processor\n            \n            var fricativeFilter = this.audioContext.createBiquadFilter();\n            fricativeFilter.type = \"bandpass\";\n            fricativeFilter.frequency.value = 1000;\n            fricativeFilter.Q.value = 0.5;\n            whiteNoise.connect(fricativeFilter);  // Use white noise as input\n            fricativeFilter.connect(scriptProcessor);  // Use this as input 1 for script processor\n            \n            whiteNoise.start(0);\n            this.processors.push(scriptProcessor);\n        }\n    }\n    \n    createWhiteNoiseNode(frameCount) {\n        var myArrayBuffer = this.audioContext.createBuffer(1, frameCount, this.sampleRate);\n\n        var nowBuffering = myArrayBuffer.getChannelData(0);\n        for (var i = 0; i < frameCount; i++) \n        {\n            nowBuffering[i] = Math.random();// gaussian();\n        }\n\n        var source = this.audioContext.createBufferSource();\n        source.buffer = myArrayBuffer;\n        source.loop = true;\n\n        return source;\n    }\n    \n    doScriptProcessor(event, index) {\n        var inputArray1 = event.inputBuffer.getChannelData(0);  // Glottis input\n        var inputArray2 = event.inputBuffer.getChannelData(1);  // Tract input\n        var outArray = event.outputBuffer.getChannelData(0);  // Output (mono)\n\n        let voice = this.trombone.voices[index];\n\n        let N = outArray.length;\n        for (var j = 0; j < N; j++)\n        {\n            var lambda1 = j/N; // Goes from 0 to 1\n            var lambda2 = (j+0.5)/N;\n            var glottalOutput = voice.glottis.runStep(lambda1, inputArray1[j]); \n            \n            var vocalOutput = 0;\n            //Tract runs at twice the sample rate \n            voice.tract.runStep(glottalOutput, inputArray2[j], lambda1);\n            vocalOutput += voice.tract.lipOutput + voice.tract.noseOutput;\n            voice.tract.runStep(glottalOutput, inputArray2[j], lambda2);\n            vocalOutput += voice.tract.lipOutput + voice.tract.noseOutput;\n            outArray[j] = vocalOutput * 0.125;\n\n            // Solves background hissing problem but introduces popping.\n            //if(voice.glottis.loudness == 0) outArray[j] = 0;\n        }\n\n        voice.glottis.finishBlock();\n        voice.tract.finishBlock();\n    }\n    \n    mute() {\n        for(let processor of this.processors) {\n            processor.disconnect();\n        }\n    }\n    \n    unmute() {\n        for(let processor of this.processors) {\n            processor.connect(this.audioContext.destination);\n        }\n    }\n    \n}\n\nexports.AudioSystem = AudioSystem;","Math.clamp = function(number, min, max) {\n    if (number<min) return min;\n    else if (number>max) return max;\n    else return number;\n}\n\nMath.moveTowards = function(current, target, amount) {\n    if (current<target) return Math.min(current+amount, target);\n    else return Math.max(current-amount, target);\n}\n\nMath.moveTowards = function(current, target, amountUp, amountDown) {\n    if (current<target) return Math.min(current+amountUp, target);\n    else return Math.max(current-amountDown, target);\n}\n\nMath.gaussian = function() {\n    var s = 0;\n    for (var c=0; c<16; c++) s+=Math.random();\n    return (s-8)/4;\n}\n\nMath.lerp = function(a, b, t) {\n    return a + (b - a) * t;\n}","import \"./math-extensions.js\";\n\nimport { AudioSystem } from \"./components/audio-system.js\";\nimport { Glottis } from \"./components/glottis.js\";\nimport { Tract } from \"./components/tract.js\";\nimport { TractUI } from \"./components/tract-ui.js\";\n\nclass Voice {\n    constructor(trombone, id) {\n        this.id = id;\n\n        this.glottis = new Glottis(trombone);\n        this.glottis.init();\n\n        this.tract = new Tract(trombone, this.glottis);\n        this.tract.init();\n\n        this.tractUI = new TractUI(trombone, this.tract);\n        this.tractUI.init();\n    }\n}\n\nclass PinkTrombone {\n    constructor(controller){\n        this.controller = controller;\n        \n        this.time = 0;\n        this.alwaysVoice = true;\n        this.autoWobble = true;\n        this.noiseFreq = 500;\n        this.noiseQ = 0.7;\n\n        this.voices = [];\n        for(let i = 0; i < 8; i++){\n            let voice = new Voice(this, i);\n            voice.glottis.loudness = i == 0 ? 1 : 0;\n            this.voices.push(voice);\n        }\n\n        this.audioSystem = new AudioSystem(this);\n        this.audioSystem.init();\n\n        //this.StartAudio();\n        //this.SetMute(true);\n\n        this.muted = false;\n    }\n\n    StartAudio() {\n        this.muted = false;\n        this.audioSystem.startSound();\n    }\n\n    SetMute(doMute) {\n        doMute ? this.audioSystem.mute() : this.audioSystem.unmute();\n        this.muted = doMute;\n    }\n\n    ToggleMute() {\n        this.SetMute(!this.muted);\n    }\n\n}\n\nexport { PinkTrombone, Voice };","/**\n *  StartAudioContext.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2016 Yotam Mann\n */\n(function (root, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([], factory)\n\t } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n\t} else {\n\t\troot.StartAudioContext = factory()\n  }\n}(this, function () {\n\n\t//TAP LISTENER/////////////////////////////////////////////////////////////\n\n\t/**\n\t * @class  Listens for non-dragging tap ends on the given element\n\t * @param {Element} element\n\t * @internal\n\t */\n\tvar TapListener = function(element, context){\n\n\t\tthis._dragged = false\n\n\t\tthis._element = element\n\n\t\tthis._bindedMove = this._moved.bind(this)\n\t\tthis._bindedEnd = this._ended.bind(this, context)\n\n\t\telement.addEventListener(\"touchstart\", this._bindedEnd)\n\t\telement.addEventListener(\"touchmove\", this._bindedMove)\n\t\telement.addEventListener(\"touchend\", this._bindedEnd)\n\t\telement.addEventListener(\"mouseup\", this._bindedEnd)\n\t}\n\n\t/**\n\t * drag move event\n\t */\n\tTapListener.prototype._moved = function(e){\n\t\tthis._dragged = true\n\t};\n\n\t/**\n\t * tap ended listener\n\t */\n\tTapListener.prototype._ended = function(context){\n\t\tif (!this._dragged){\n\t\t\tstartContext(context)\n\t\t}\n\t\tthis._dragged = false\n\t};\n\n\t/**\n\t * remove all the bound events\n\t */\n\tTapListener.prototype.dispose = function(){\n\t\tthis._element.removeEventListener(\"touchstart\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"touchmove\", this._bindedMove)\n\t\tthis._element.removeEventListener(\"touchend\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"mouseup\", this._bindedEnd)\n\t\tthis._bindedMove = null\n\t\tthis._bindedEnd = null\n\t\tthis._element = null\n\t};\n\n\t//END TAP LISTENER/////////////////////////////////////////////////////////\n\n\t/**\n\t * Plays a silent sound and also invoke the \"resume\" method\n\t * @param {AudioContext} context\n\t * @private\n\t */\n\tfunction startContext(context){\n\t\t// this accomplishes the iOS specific requirement\n\t\tvar buffer = context.createBuffer(1, 1, context.sampleRate)\n\t\tvar source = context.createBufferSource()\n\t\tsource.buffer = buffer\n\t\tsource.connect(context.destination)\n\t\tsource.start(0)\n\n\t\t// resume the audio context\n\t\tif (context.resume){\n\t\t\tcontext.resume()\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the audio context is started\n\t * @param  {AudioContext}  context\n\t * @return {Boolean}\n\t * @private\n\t */\n\tfunction isStarted(context){\n\t\t return context.state === \"running\"\n\t}\n\n\t/**\n\t * Invokes the callback as soon as the AudioContext\n\t * is started\n\t * @param  {AudioContext}   context\n\t * @param  {Function} callback\n\t */\n\tfunction onStarted(context, callback){\n\n\t\tfunction checkLoop(){\n\t\t\tif (isStarted(context)){\n\t\t\t\tcallback()\n\t\t\t} else {\n\t\t\t\trequestAnimationFrame(checkLoop)\n\t\t\t\tif (context.resume){\n\t\t\t\t\tcontext.resume()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isStarted(context)){\n\t\t\tcallback()\n\t\t} else {\n\t\t\tcheckLoop()\n\t\t}\n\t}\n\n\t/**\n\t * Add a tap listener to the audio context\n\t * @param  {Array|Element|String|jQuery} element\n\t * @param {Array} tapListeners\n\t */\n\tfunction bindTapListener(element, tapListeners, context){\n\t\tif (Array.isArray(element) || (NodeList && element instanceof NodeList)){\n\t\t\tfor (var i = 0; i < element.length; i++){\n\t\t\t\tbindTapListener(element[i], tapListeners, context)\n\t\t\t}\n\t\t} else if (typeof element === \"string\"){\n\t\t\tbindTapListener(document.querySelectorAll(element), tapListeners, context)\n\t\t} else if (element.jquery && typeof element.toArray === \"function\"){\n\t\t\tbindTapListener(element.toArray(), tapListeners, context)\n\t\t} else if (Element && element instanceof Element){\n\t\t\t//if it's an element, create a TapListener\n\t\t\tvar tap = new TapListener(element, context)\n\t\t\ttapListeners.push(tap)\n\t\t} \n\t}\n\n\t/**\n\t * @param {AudioContext} context The AudioContext to start.\n\t * @param {Array|String|Element|jQuery=} elements For iOS, the list of elements\n\t *                                               to bind tap event listeners\n\t *                                               which will start the AudioContext. If\n\t *                                               no elements are given, it will bind\n\t *                                               to the document.body.\n\t * @param {Function=} callback The callback to invoke when the AudioContext is started.\n\t * @return {Promise} The promise is invoked when the AudioContext\n\t *                       is started.\n\t */\n\tfunction StartAudioContext(context, elements, callback){\n\n\t\t//the promise is invoked when the AudioContext is started\n\t\tvar promise = new Promise(function(success) {\n\t\t\tonStarted(context, success)\n\t\t})\n\n\t\t// The TapListeners bound to the elements\n\t\tvar tapListeners = []\n\n\t\t// add all the tap listeners\n\t\tif (!elements){\n\t\t\telements = document.body\n\t\t}\n\t\tbindTapListener(elements, tapListeners, context)\n\n\t\t//dispose all these tap listeners when the context is started\n\t\tpromise.then(function(){\n\t\t\tfor (var i = 0; i < tapListeners.length; i++){\n\t\t\t\ttapListeners[i].dispose()\n\t\t\t}\n\t\t\ttapListeners = null\n\n\t\t\tif (callback){\n\t\t\t\tcallback()\n\t\t\t}\n\t\t})\n\n\t\treturn promise\n\t}\n\n\treturn StartAudioContext\n}))","import StartAudioContext from 'startaudiocontext'\n\nclass StartOverlay {\n\n    constructor(container, audioContext) {\n        this.container = container\n\n        let overlay = document.createElement(\"div\")\n        this.container.appendChild(overlay)\n        overlay.style.cssText = `\n            width: 100%;\n            height: 100%;\n            text-align: center;\n            position: absolute;\n            left: 0;\n            top: 0;\n            display: block;\n            background-color: rgba(0, 0, 0, 0.5);\n        `\n\n        overlay.innerHTML = `\n            <div style=\"position: absolute; margin: auto; top: 0; right: 0; bottom: 0; left: 0; width: 100px; height: 100px;\">\n                <p class=\"jon-trombone-audio-overlay-text\">\n                    Tap here to begin.\n                </p>\n            </div>\n        `\n\n        StartAudioContext(audioContext, overlay, () => {\n            console.log(\"Unlocked iOS audio\")\n            overlay.remove()\n        })\n\n    }\n\n}\n\nexport { StartOverlay }","class ModelLoader {\n\n    /**\n     * Loads a model asynchronously. Expects an object containing\n     * the path to the object, the relative path of the OBJ file,\n     * and the relative path of the MTL file.\n     * \n     * An example:\n     * let modelInfo = {\n     *      path: \"../resources/obj/\",\n     *      objFile: \"test.obj\",\n     *      mtlFile: \"test.mtl\"\n     * }\n     */\n    static LoadOBJ(modelInfo, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var mtlLoader = new THREE.MTLLoader();\n        mtlLoader.setPath( modelInfo.path );\n\n        mtlLoader.load( modelInfo.mtlFile, ( materials ) => {\n            materials.preload();\n            var objLoader = new THREE.OBJLoader();\n            objLoader.setMaterials( materials );\n            objLoader.setPath( modelInfo.path );\n            objLoader.load( modelInfo.objFile, ( object ) => {\n                loadedCallback(object);\n            }, onProgress, onError );\n            \n        });\n\n    }\n\n    static LoadJSON(path, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.JSONLoader();\n        loader.load( path, ( geometry, materials ) => {\n            // Apply skinning to each material so the verts are affected by bone movement\n            for(let mat of materials){\n                mat.skinning = true;\n            }\n            let mesh = new THREE.SkinnedMesh( geometry, new THREE.MultiMaterial( materials ) );\n            mesh.name = \"Jon\";\n            loadedCallback(mesh);\n        }, onProgress, onError);\n    }\n\n    static LoadFBX(path, loadedCallback) {\n        let manager = new THREE.LoadingManager();\n        manager.onProgress = function( item, loaded, total ) {\n            console.log( item, loaded, total );\n        };\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.FBXLoader( manager );\n        loader.load( path, ( object ) => {\n            loadedCallback(object);\n        }, onProgress, onError );\n    }\n\n}\n\nexport { ModelLoader };","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","module.exports = require('./_hide');\n","module.exports = true;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = function () { /* empty */ };\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","import { ModelLoader } from \"./utils/model-loader.js\";\nimport { StartOverlay } from \"./utils/start-overlay.js\";\nimport { PinkTrombone } from \"./pink-trombone/pink-trombone.js\";\nimport { MidiController } from \"./midi/midi-controller.js\";\nimport { TTSController } from \"./tts/tts-controller.js\";\nimport { gui } from \"./gui.js\";\n\nclass JonTrombone {\n\n    constructor(container, finishedCallback) {\n        this.container = container;\n        this.container.style.position = \"relative\";\n        this.container.style.cursor = \"default\";\n\n        // Set up renderer and embed in container\n        this.renderer = new THREE.WebGLRenderer( { alpha: true } );\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n        this.renderer.setClearColor(0x000000, 0);\n        this.container.appendChild(this.renderer.domElement);\n\n        // Set up scene and view\n        let aspect = this.container.offsetWidth / this.container.offsetHeight;\n        this.camera = new THREE.PerspectiveCamera( 45, aspect, 0.1, 100 );\n        this.scene = new THREE.Scene();\n\n        // Export scene for three js inspector\n        //window.scene = this.scene;\n\n        // Set up clock for timing\n        this.clock = new THREE.Clock();\n\n        let startDelayMS = 1000;\n        this.trombone = new PinkTrombone(this);\n        setTimeout(()=> {\n            this.trombone.StartAudio();\n            //this.trombone.SetMute(true);\n            this.moveJaw = true;\n        }, startDelayMS);\n\n        // Mute button for trombone\n        // let button = document.createElement(\"button\");\n        // button.innerHTML = \"Mute\";\n        // button.style.cssText = \"position: absolute; display: block; top: 0; left: 0;\";\n        // this.container.appendChild(button);\n        // button.addEventListener (\"click\", () => {\n        //     this.trombone.ToggleMute();\n        //     button.innerHTML = this.trombone.muted ? \"Unmute\" : \"Mute\";\n        // });\n\n        this.jawFlapSpeed = 20.0;\n        this.jawOpenOffset = 0.19;\n        this.moveJaw = false;\n        this.legato = false;\n        this.flapWhileSinging = false;\n\n        this.midiController = new MidiController(this);\n\n        // let tts = new TTSController();\n        // console.log(tts.GetGraphemes(\"Testing one two three 1 2 3\"));\n\n        this.SetUpThree();\n        this.SetUpScene();\n\n        let startOverlay = new StartOverlay(this.container, this.trombone.audioSystem.audioContext);\n\n        // Start the update loop\n        this.OnUpdate();\n\n        gui.Init(this, this.container);\n    }\n\n    /**\n     * Set up non-scene config for Three.js\n     */\n    SetUpThree() {\n        if(THREE.OrbitControls !== undefined){\n            // Add orbit controls\n            this.controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n            this.controls.target.set( 0, 0, 0 );\n            this.controls.update();\n        } else {\n            console.warn(\"No THREE.OrbitControls detected. Include to allow interaction with the model.\");\n        }\n    }\n\n    /**\n     * Populates and configures objects within the scene.\n     */\n    SetUpScene() {\n\n        // Set camera position\n        this.camera.position.set( 0, 0, 0.5 );\n\n        // Lights\n        let light1 = new THREE.HemisphereLight(0xffffff, 0x444444, 1.0);\n        light1.name = \"Hemisphere Light\";\n        light1.position.set(0, 1, 0);\n        this.scene.add(light1);\n\n        let light2 = new THREE.DirectionalLight(0xffffff, 1.0);\n        light2.name = \"Directional Light\";\n        light2.position.set(0, 1, 1);\n        light2.target.position.set(0, 0, 0);\n        this.scene.add(light2);\n\n        // Load the Jon model and place it in the scene\n        ModelLoader.LoadJSON(\"../resources/jon/three/jon.json\", (object) => {\n            this.jon = object;\n            this.scene.add( this.jon );\n            this.jon.rotation.y = (THREE.Math.degToRad(15));\n\n            this.jaw = this.jon.skeleton.bones.find((obj) => {\n                return obj.name == \"Bone.006\";\n            });\n            if(this.jaw){\n                this.jawShutZ = this.jaw.position.z;\n            }\n        });\n\n\n    }\n\n    /**\n     * Called every frame. Continues indefinitely after being called once.\n     */\n    OnUpdate() {\n        let deltaTime = this.clock.getDelta();\n        requestAnimationFrame( this.OnUpdate.bind(this) );\n\n        if(this.midiController.playing){\n\n            let notes = this.midiController.GetPitches();\n            if(notes != this.lastNotes){\n                // Do the note\n                if(notes !== undefined){ //&& notes.length != 0){ \n                    // Note on\n                    // Play frequency\n                    for (let i = 0; i < this.trombone.voices.length; i++){\n                        if (i >= notes.length) {\n                            if (!this.legato) this.trombone.voices[i].glottis.loudness = 0;\n                            if (this.moveJaw) this.trombone.voices[i].tractUI.SetLipsClosed(1);\n                            continue\n                        }\n\n                        this.trombone.voices[i].glottis.UIFrequency = this.midiController.MIDIToFrequency(notes[i].midi);\n                        this.trombone.voices[i].glottis.loudness = notes[i].velocity;\n\n                        if (this.moveJaw) this.trombone.voices[i].tractUI.SetLipsClosed(0);\n                    }\n                    // let note = notes[0];\n                    // if(notes.length > 1){\n                    //     //console.log (\"chord\");\n                    // }\n                    // let freq = this.midiController.MIDIToFrequency(note.midi);\n                    // //console.log(freq);\n                    // this.trombone.glottis.UIFrequency = freq;\n                    // this.trombone.glottis.loudness = note.velocity;\n                    // Open jaw\n                    if (this.moveJaw) this.jaw.position.z = this.jawShutZ + this.jawOpenOffset;\n                    for(let voice of this.trombone.voices) {\n                        if (this.moveJaw) voice.tractUI.SetLipsClosed(0);\n                    }\n\n                } \n\n                if(notes.length == 0) {\n                    if (this.moveJaw) this.jaw.position.z = this.jawShutZ;\n                    \n                }\n                // else { \n                //     // Note off\n                //     if (!this.legato) this.trombone.glottis.loudness = 0;\n                //     // Close jaw\n                //     this.jaw.position.z = this.jawShutZ;\n                //     // this.trombone.tractUI.SetLipsClosed(1);\n\n                // }\n\n                this.lastNotes = notes;\n            }\n\n        }\n\n        if(this.jaw && this.moveJaw && (!this.midiController.playing || this.flapWhileSinging)){\n            let time = this.clock.getElapsedTime();// % 60;\n\n            // Move the jaw\n            let percent = (Math.sin(time * this.jawFlapSpeed) + 1.0) / 2.0;\n            this.jaw.position.z = this.jawShutZ + (percent * this.jawOpenOffset);\n\n            // Make the audio match the jaw position\n            for(let voice of this.trombone.voices) {\n                voice.tractUI.SetLipsClosed(1.0 - percent);\n            }\n\n        }\n\n        // Render\n        this.renderer.render(this.scene, this.camera);\n\n    }\n\n}\n\nexport { JonTrombone };","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","class Detector {\n\n    //http://stackoverflow.com/questions/11871077/proper-way-to-detect-webgl-support\n    static HasWebGL() {\n        if (!!window.WebGLRenderingContext) {\n            var canvas = document.createElement(\"canvas\"),\n                    names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\n                context = false;\n\n            for(var i=0;i<4;i++) {\n                try {\n                    context = canvas.getContext(names[i]);\n                    if (context && typeof context.getParameter == \"function\") {\n                        // WebGL is enabled\n                        return true;\n                    }\n                } catch(e) {}\n            }\n\n            // WebGL is supported, but disabled\n            return false;\n        }\n        // WebGL not supported\n        return false;\n    }\n\n    static GetErrorHTML(message = null){\n        if(message == null){\n            message = `Your graphics card does not seem to support \n                        <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>. <br>\n                        Find out how to get it <a href=\"http://get.webgl.org/\">here</a>.`;\n        }\n        return `\n        <div class=\"no-webgl-support\">\n        <p style=\"text-align: center;\">${message}</p>\n        </div>\n        `\n    }\n\n}\n\nexport { Detector };","import { Detector } from \"./utils/webgl-detect.js\";\nimport { JonTrombone } from \"./jon-trombone.js\";\n\n// Optionally bundle three.js as part of the project\n//import THREELib from \"three-js\";\n//var THREE = THREELib(); // return THREE JS\n\nlet Init = () => {\n    let container = document.getElementById(\"jon-trombone-container\");\n\n    if ( !Detector.HasWebGL() ) {\n        //exit(\"WebGL is not supported on this browser.\");\n        console.log(\"WebGL is not supported on this browser.\");\n        container.innerHTML = Detector.GetErrorHTML();\n        container.classList.add(\"no-webgl\");\n    }\n    else{\n        let jonTrombone = new JonTrombone(container);\n    }\n}\n\nif (document.readyState === 'complete') {\n    Init();\n} else {\n    window.onload = () => {\n        Init();\n    }\n}"],"sourceRoot":""}