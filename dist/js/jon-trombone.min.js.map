{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/gui.js","js/jon-trombone.js","js/main.js","js/midi/midi-controller.js","js/pink-trombone/components/audio-system.js","js/pink-trombone/components/glottis.js","js/pink-trombone/components/tract-ui.js","js/pink-trombone/components/tract.js","js/pink-trombone/math-extensions.js","js/pink-trombone/noise.js","js/pink-trombone/pink-trombone.js","js/tts/tts-controller.js","js/utils/model-loader.js","js/utils/webgl-detect.js","node_modules/midiconvert/build/MidiConvert.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","GUI","jon","container","guify","console","log","this","panel","title","theme","root","width","barMode","align","opacity","Register","type","label","object","trombone","property","onChange","data","SetMute","min","max","folder","voices","glottis","step","tract","tractUI","fileReadFunc","midiController","LoadSongDirect","action","PlaySong","Stop","Restart","gui","_modelLoader","_pinkTrombone","_midiController","_gui","JonTrombone","finishedCallback","_this","_classCallCheck","style","position","cursor","renderer","THREE","WebGLRenderer","alpha","setPixelRatio","window","devicePixelRatio","setSize","offsetWidth","offsetHeight","setClearColor","appendChild","domElement","aspect","camera","PerspectiveCamera","scene","Scene","clock","Clock","PinkTrombone","setTimeout","StartAudio","moveJaw","jawFlapSpeed","jawOpenOffset","legato","flapWhileSinging","MidiController","SetUpThree","SetUpScene","OnUpdate","Init","undefined","OrbitControls","controls","target","set","update","warn","_this2","light1","HemisphereLight","name","add","light2","DirectionalLight","ModelLoader","LoadJSON","rotation","y","Math","degToRad","jaw","skeleton","bones","find","obj","jawShutZ","z","getDelta","requestAnimationFrame","bind","playing","notes","GetPitches","lastNotes","loudness","SetLipsClosed","UIFrequency","MIDIToFrequency","midi","velocity","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","voice","value","err","return","time","getElapsedTime","percent","sin","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","render","_webglDetect","_jonTrombone","document","getElementById","Detector","HasWebGL","innerHTML","GetErrorHTML","classList","readyState","onload","MidiConvert","controller","currentTrack","baseFreq","path","callback","load","file","parse","trackIndex","arguments","GetSongProgress","tracks","item","noteOn","noteOff","filter","track","LoadSong","EnterSingMode","start","midiCode","pow","stop","ExitSingMode","backup_settings","autoWobble","voiceBackup","addPitchVariance","addTensenessVariance","vibratoFrequency","id","backup","AudioSystem","blockLength","blockTime","soundOn","AudioContext","webkitAudioContext","audioContext","sampleRate","processors","whiteNoise","aspirateFilter","fricativeFilter","scriptProcessor","createScriptProcessor","connect","destination","onaudioprocess","doScriptProcessor","createWhiteNoiseNode","createBiquadFilter","frequency","Q","push","frameCount","myArrayBuffer","createBuffer","nowBuffering","getChannelData","random","source","createBufferSource","buffer","loop","event","index","inputArray1","inputBuffer","inputArray2","outArray","outputBuffer","N","j","lambda1","lambda2","glottalOutput","runStep","vocalOutput","lipOutput","noseOutput","finishBlock","disconnect","_noise","Glottis","timeInWaveform","oldFrequency","newFrequency","smoothFrequency","oldTenseness","newTenseness","UITenseness","totalTime","vibratoAmount","intensity","isTouched","touch","x","keyboardTop","keyboardLeft","keyboardWidth","keyboardHeight","semitones","marks","baseNote","output","setupWaveform","alive","UI","touchesWithMouse","local_y","local_x","clamp","semitone","cos","PI","lambda","noiseSource","timeStep","audioSystem","waveformLength","out","normalizedLFWaveform","aspiration","sqrt","getNoiseModulator","_noise2","default","simplex1","voiced","vibrato","alwaysVoice","tenseness","Rd","Ra","Rk","Rg","Ta","Tp","Te","epsilon","shift","exp","Delta","RHSIntegral","totalLowerIntegral","totalUpperIntegral","omega","E0","TractUI","originX","originY","radius","scale","tongueIndex","tongueDiameter","innerTongueControlRadius","outerTongueControlRadius","tongueTouch","angleScale","angleOffset","noseOffset","gridOffset","Tract","setRestDiameter","diameter","targetDiameter","restDiameter","tongueLowerIndexBound","bladeStart","tongueUpperIndexBound","tipStart","tongueIndexCentre","xx","yy","angle","atan2","lipStart","fixedTongueDiameter","curve","progress","_i","interp","lerp","R","L","reflection","junctionOutputR","junctionOutputL","maxAmplitude","newDiameter","A","glottalReflection","lipReflection","lastObstruction","fade","movementSpeed","transients","velumTarget","floor","Float64Array","newReflection","noseLength","noseStart","noseR","noseL","noseJunctionOutputR","noseJunctionOutputL","noseReflection","noseDiameter","noseA","noseMaxAmplitude","d","newReflectionLeft","newReflectionRight","newReflectionNose","calculateReflections","calculateNoseReflections","deltaTime","amount","newLastObstruction","slowReturn","moveTowards","addTransient","reflectionLeft","reflectionRight","reflectionNose","sum","turbulenceNoise","updateAmplitudes","processTransients","addTurbulenceNoise","w","amplitude","abs","reshapeTract","trans","timeAlive","lifeTime","strength","exponent","splice","delta","thinness0","openness","noise0","noise1","number","current","amountUp","amountDown","gaussian","c","b","Grad","Noise","grad3","p","perm","Array","gradP","seed","Date","now","_seed","v","xin","yin","n0","n1","n2","i1","j1","F2","G2","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","dot2","t1","t2","simplex2","singleton","Object","freeze","_audioSystem","_glottis","_tract","_tractUi","Voice","init","noiseFreq","noiseQ","muted","startSound","doMute","mute","unmute","TTSController","modelInfo","loadedCallback","onProgress","xhr","lengthComputable","percentComplete","loaded","total","round","onError","mtlLoader","MTLLoader","setPath","mtlFile","materials","preload","objLoader","OBJLoader","setMaterials","objFile","JSONLoader","geometry","skinning","mesh","SkinnedMesh","MultiMaterial","manager","LoadingManager","FBXLoader","WebGLRenderingContext","canvas","createElement","names","context","getContext","getParameter","message","define","amd","m","defineProperty","configurable","enumerable","get","__esModule","prototype","hasOwnProperty","0","8","16","24","25","32","40","48","56","replace","bpm","PPQ","test","cbb","cb","c#","cx","dbb","db","d#","dx","ebb","eb","e#","ex","fbb","fb","f#","fx","gbb","gb","g","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","exec","toLowerCase","parseInt","TypeError","h","writable","key","header","timeSignature","forEach","fromJSON","Promise","XMLHttpRequest","open","responseType","addEventListener","status","decode","response","send","catch","ArrayBuffer","Uint8Array","String","fromCharCode","apply","subtype","text","noteNumber","channelNumber","channel","controllerType","cc","instrument","patch","programNumber","File","ticks","addTrack","addEvent","MetaEvent","TRACK_NAME","setTempo","encode","toBytes","charCodeAt","startTime","duration","map","toJSON","slice","2","4","5","7","10","64","65","66","67","68","84","ticksPerBeat","numerator","denominator","microsecondsPerBeat","Uint32Array","then","create","controlChanges","instrumentNumber","match","findIndex","noteOns","addNoteOn","noteOffs","addNoteOff","instrumentFamily","isPercussion","keys","indexOf","includes","DEFAULT_VOLUME","DEFAULT_DURATION","DEFAULT_CHANNEL","midi_letter_pitches","midiPitchFromNote","substr","ensureMidiPitch","midi_pitches_letter","12","13","14","15","17","18","19","20","21","22","23","midi_flattened_notes","noteFromMidiPitch","mpqnFromBpm","unshift","bpmFromMpqn","codes2Str","str2Bytes","translateTickTime","param1","setTime","setType","setChannel","setParam1","setParam2","param2","NOTE_OFF","NOTE_ON","AFTER_TOUCH","CONTROLLER","PROGRAM_CHANGE","CHANNEL_AFTERTOUCH","PITCH_BEND","setData","SEQUENCE","TEXT","COPYRIGHT","INSTRUMENT","LYRIC","MARKER","CUE_POINT","CHANNEL_PREFIX","END_OF_TRACK","TEMPO","SMPTE","TIME_SIG","KEY_SIG","SEQ_EVENT","isArray","split","events","START_BYTES","END_BYTES","addNote","note","addChord","chord","setInstrument","tempo","toString","concat","HDR_CHUNKID","HDR_CHUNK_SIZE","HDR_TYPE0","HDR_TYPE1","Util","Track","Event","Midi","read","readInt32","stream","readInt16","formatType","trackCount","eof","readVarInt","readInt8","frameRate","96","hour","sec","frame","subframe","metronome","thirtyseconds","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"jon-trombone.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","class GUI {\n\n    Init(jon, container){\n\n        if(!guify) {\n            console.log(\"Guify was not found! Add it to your page to enable a GUI for this program.\");\n            return;\n        }\n\n        this.panel = new guify({\n            title: \"Jon-Trombone\", \n            theme: \"dark\", \n            root: container,\n            width: 350,\n            barMode: \"above\",\n            align: \"right\",\n            opacity: \"0.95\"\n        });\n\n        this.panel.Register({ \n            type: \"checkbox\", label: \"Mute\", \n            object: jon.trombone, property: \"muted\", \n            onChange: (data) => {\n                jon.trombone.SetMute(data);\n            } \n        });\n\n        // Jon folder\n        this.panel.Register({ type: \"folder\", label: \"Jon\" });\n        this.panel.Register([\n            { type: \"checkbox\", label: \"Move Jaw\", object: jon, property: \"moveJaw\" },\n            { type: \"range\", label: \"Jaw Speed\", object: jon, property: \"jawFlapSpeed\", min: 0, max: 100 },\n            { type: \"range\", label: \"Jaw Range\", object: jon, property: \"jawOpenOffset\", min: 0, max: 1 },\n        ], { folder: \"Jon\" });\n\n        // Voice folder\n        this.panel.Register({ type: \"folder\", label: \"Voice\" });\n        this.panel.Register([\n            { type: \"checkbox\", label: \"Wobble\", object: jon.trombone, property: \"autoWobble\" },\n            { type: \"checkbox\", label: \"Pitch Variance\", object: jon.trombone.voices[0].glottis, property: \"addPitchVariance\" },\n            { type: \"checkbox\", label: \"Tenseness Variance\", object: jon.trombone.voices[0].glottis, property: \"addTensenessVariance\" },\n            { type: \"range\", label: \"Tenseness\", object: jon.trombone.voices[0].glottis, property: \"UITenseness\", min: 0, max: 1 },\n            { type: \"range\", label: \"Vibrato\", object: jon.trombone.voices[0].glottis, property: \"vibratoAmount\", min: 0, max: 0.5 },\n            { type: \"range\", label: \"Frequency\", object: jon.trombone.voices[0].glottis, property: \"UIFrequency\", min: 1, max: 1000, step: 1 },\n            { type: \"range\", label: \"Loudness\", object: jon.trombone.voices[0].glottis, property: \"loudness\", min: 0, max: 1 },\n        ], { folder: \"Voice\" });\n\n        // Tract folder\n        this.panel.Register({ type: \"folder\", label: \"Tract\" });\n        this.panel.Register([\n            { type: \"range\", label: \"Move Speed\", object: jon.trombone.voices[0].tract, property: \"movementSpeed\", min: 1, max: 30, step: 1 },\n            { type: \"range\", label: \"Velum Target\", object: jon.trombone.voices[0].tract, property: \"velumTarget\", min: 0.001, max: 2 },\n            { type: \"range\", label: \"Target\", object: jon.trombone.voices[0].tractUI, property: \"target\", min: 0.001, max: 1 },\n            { type: \"range\", label: \"Index\", object: jon.trombone.voices[0].tractUI, property: \"index\", min: 0, max: 43, step: 1 },\n            { type: \"range\", label: \"Radius\", object: jon.trombone.voices[0].tractUI, property: \"radius\", min: 0, max: 5, step: 1 },\n        ], { folder: \"Tract\" });\n\n        // MIDI folder\n        this.panel.Register({ type: \"folder\", label: \"MIDI\" });\n        this.panel.Register([\n            { type: \"file\", label: \"MIDI File\", fileReadFunc: \"readAsBinaryString\",\n                onChange: (data) => {\n                    jon.midiController.LoadSongDirect(data);\n                }\n            },\n            { type: \"title\", label: \"Controls\" },\n            { type: \"button\", label: \"Play\", action: () => jon.midiController.PlaySong() },\n            { type: \"button\", label: \"Stop\", action: () => jon.midiController.Stop() },\n            { type: \"button\", label: \"Restart\", action: () => jon.midiController.Restart() },\n            { type: \"title\", label: \"Options\" },\n            { type: \"range\", label: \"Track\", object: jon.midiController, property: \"currentTrack\", min: 1, max: 20, step: 1 },\n            { type: \"range\", label: \"Base Frequency\", object: jon.midiController, property: \"baseFreq\", min: 1, max: 2000, step: 1 },\n            { type: \"checkbox\", label: \"Extreme Vibrato\", object: jon, property: \"flapWhileSinging\" },\n            { type: \"checkbox\", label: \"Legato\", object: jon, property: \"legato\" },\n        ], { folder: \"MIDI\" });\n\n    }\n\n}\n\nexport let gui = new GUI();","import { ModelLoader } from \"./utils/model-loader.js\";\nimport { PinkTrombone } from \"./pink-trombone/pink-trombone.js\";\nimport { MidiController } from \"./midi/midi-controller.js\";\nimport { TTSController } from \"./tts/tts-controller.js\";\nimport { gui } from \"./gui.js\";\n\nclass JonTrombone {\n\n    constructor(container, finishedCallback) {\n        this.container = container;\n        this.container.style.position = \"relative\";\n        this.container.style.cursor = \"default\";\n\n        // Set up renderer and embed in container\n        this.renderer = new THREE.WebGLRenderer( { alpha: true } );\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n        this.renderer.setClearColor(0x000000, 0);\n        this.container.appendChild(this.renderer.domElement);\n\n        // Set up scene and view\n        let aspect = this.container.offsetWidth / this.container.offsetHeight;\n        this.camera = new THREE.PerspectiveCamera( 45, aspect, 0.1, 100 );\n        this.scene = new THREE.Scene();\n\n        // Export scene for three js inspector\n        //window.scene = this.scene;\n\n        // Set up clock for timing\n        this.clock = new THREE.Clock();\n\n        let startDelayMS = 1000;\n        this.trombone = new PinkTrombone(this);\n        setTimeout(()=> {\n            this.trombone.StartAudio();\n            //this.trombone.SetMute(true);\n            this.moveJaw = true;\n        }, startDelayMS);\n\n        // Mute button for trombone\n        // let button = document.createElement(\"button\");\n        // button.innerHTML = \"Mute\";\n        // button.style.cssText = \"position: absolute; display: block; top: 0; left: 0;\";\n        // this.container.appendChild(button);\n        // button.addEventListener (\"click\", () => {\n        //     this.trombone.ToggleMute();\n        //     button.innerHTML = this.trombone.muted ? \"Unmute\" : \"Mute\";\n        // });\n\n        this.jawFlapSpeed = 20.0;\n        this.jawOpenOffset = 0.19;\n        this.moveJaw = false;\n        this.legato = false;\n        this.flapWhileSinging = false;\n\n        this.midiController = new MidiController(this);\n\n        // let tts = new TTSController();\n        // console.log(tts.GetGraphemes(\"Testing one two three 1 2 3\"));\n\n        this.SetUpThree();\n        this.SetUpScene();\n\n        // Start the update loop\n        this.OnUpdate();\n\n        gui.Init(this, this.container);\n    }\n\n    /**\n     * Set up non-scene config for Three.js\n     */\n    SetUpThree() {\n        if(THREE.OrbitControls !== undefined){\n            // Add orbit controls\n            this.controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n            this.controls.target.set( 0, 0, 0 );\n            this.controls.update();\n        } else {\n            console.warn(\"No THREE.OrbitControls detected. Include to allow interaction with the model.\");\n        }\n    }\n\n    /**\n     * Populates and configures objects within the scene.\n     */\n    SetUpScene() {\n\n        // Set camera position\n        this.camera.position.set( 0, 0, 0.5 );\n\n        // Lights\n        let light1 = new THREE.HemisphereLight(0xffffff, 0x444444, 1.0);\n        light1.name = \"Hemisphere Light\";\n        light1.position.set(0, 1, 0);\n        this.scene.add(light1);\n\n        let light2 = new THREE.DirectionalLight(0xffffff, 1.0);\n        light2.name = \"Directional Light\";\n        light2.position.set(0, 1, 1);\n        light2.target.position.set(0, 0, 0);\n        this.scene.add(light2);\n\n        // Load the Jon model and place it in the scene\n        ModelLoader.LoadJSON(\"../resources/jon/three/jon.json\", (object) => {\n            this.jon = object;\n            this.scene.add( this.jon );\n            this.jon.rotation.y = (THREE.Math.degToRad(15));\n\n            this.jaw = this.jon.skeleton.bones.find((obj) => {\n                return obj.name == \"Bone.006\";\n            });\n            if(this.jaw){\n                this.jawShutZ = this.jaw.position.z;\n            }\n        });\n\n\n    }\n\n    /**\n     * Called every frame. Continues indefinitely after being called once.\n     */\n    OnUpdate() {\n        let deltaTime = this.clock.getDelta();\n        requestAnimationFrame( this.OnUpdate.bind(this) );\n\n        if(this.midiController.playing){\n\n            let notes = this.midiController.GetPitches();\n            if(notes != this.lastNotes){\n                // Do the note\n                if(notes !== undefined){ //&& notes.length != 0){ \n                    // Note on\n                    // Play frequency\n                    for (let i = 0; i < this.trombone.voices.length; i++){\n                        if (i >= notes.length) {\n                            if (!this.legato) this.trombone.voices[i].glottis.loudness = 0;\n                            if (this.moveJaw) this.trombone.voices[i].tractUI.SetLipsClosed(1);\n                            continue\n                        }\n\n                        this.trombone.voices[i].glottis.UIFrequency = this.midiController.MIDIToFrequency(notes[i].midi);\n                        this.trombone.voices[i].glottis.loudness = notes[i].velocity;\n\n                        if (this.moveJaw) this.trombone.voices[i].tractUI.SetLipsClosed(0);\n                    }\n                    // let note = notes[0];\n                    // if(notes.length > 1){\n                    //     //console.log (\"chord\");\n                    // }\n                    // let freq = this.midiController.MIDIToFrequency(note.midi);\n                    // //console.log(freq);\n                    // this.trombone.glottis.UIFrequency = freq;\n                    // this.trombone.glottis.loudness = note.velocity;\n                    // Open jaw\n                    if (this.moveJaw) this.jaw.position.z = this.jawShutZ + this.jawOpenOffset;\n                    for(let voice of this.trombone.voices) {\n                        if (this.moveJaw) voice.tractUI.SetLipsClosed(0);\n                    }\n\n                } \n\n                if(notes.length == 0) {\n                    if (this.moveJaw) this.jaw.position.z = this.jawShutZ;\n                    \n                }\n                // else { \n                //     // Note off\n                //     if (!this.legato) this.trombone.glottis.loudness = 0;\n                //     // Close jaw\n                //     this.jaw.position.z = this.jawShutZ;\n                //     // this.trombone.tractUI.SetLipsClosed(1);\n\n                // }\n\n                this.lastNotes = notes;\n            }\n\n        }\n\n        if(this.jaw && this.moveJaw && (!this.midiController.playing || this.flapWhileSinging)){\n            let time = this.clock.getElapsedTime();// % 60;\n\n            // Move the jaw\n            let percent = (Math.sin(time * this.jawFlapSpeed) + 1.0) / 2.0;\n            this.jaw.position.z = this.jawShutZ + (percent * this.jawOpenOffset);\n\n            // Make the audio match the jaw position\n            for(let voice of this.trombone.voices) {\n                voice.tractUI.SetLipsClosed(1.0 - percent);\n            }\n\n        }\n\n        // Render\n        this.renderer.render(this.scene, this.camera);\n\n    }\n\n}\n\nexport { JonTrombone };","import { Detector } from \"./utils/webgl-detect.js\";\nimport { JonTrombone } from \"./jon-trombone.js\";\n\n// Optionally bundle three.js as part of the project\n//import THREELib from \"three-js\";\n//var THREE = THREELib(); // return THREE JS\n\nlet Init = () => {\n    let container = document.getElementById(\"jon-trombone-container\");\n\n    if ( !Detector.HasWebGL() ) {\n        //exit(\"WebGL is not supported on this browser.\");\n        console.log(\"WebGL is not supported on this browser.\");\n        container.innerHTML = Detector.GetErrorHTML();\n        container.classList.add(\"no-webgl\");\n    }\n    else{\n        let jonTrombone = new JonTrombone(container);\n    }\n}\n\nif (document.readyState === 'complete') {\n    Init();\n} else {\n    window.onload = () => {\n        Init();\n    }\n}","let MidiConvert = require('midiconvert');\n\n/**\n * Simple class for MIDI playback.\n * The paradigm here's a bit weird; it's up to an external\n * source to actually produce audio. This class just manages\n * a timer, which GetPitch() reads to produce the \"current\"\n * note information. \n * \n * As an example of usage, jon-trombone calls PlaySong() to\n * begin, and then every frame uses GetPitch() to figure out\n * what the current frequency to produce is.\n */\nclass MidiController {\n\n    constructor(controller) {\n        this.controller = controller;\n\n        this.midi = null;\n\n        this.playing = false;\n        this.currentTrack = 5;\n\n        this.baseFreq = 440; //110 is A4\n\n        this.clock = new THREE.Clock(false);\n    }\n\n    /**\n     * Loads and parses a MIDI file.\n     */\n    LoadSong(path, callback){\n        this.Stop();\n        this.midi = null;\n        MidiConvert.load(path, (midi) => {\n            console.log(\"MIDI loaded.\");\n            this.midi = midi;\n            console.log(this.midi);\n            if(callback) callback(midi);\n        });\n    }\n\n    LoadSongDirect(file){\n        this.Stop();\n        this.midi = MidiConvert.parse(file);\n        console.log(\"MIDI loaded.\");\n        console.log(this.midi);\n    }\n\n    /**\n     * Gets the pitch for the specified track at the current time in the song.\n     */\n    GetPitch(trackIndex = this.currentTrack){\n        let time = this.GetSongProgress();\n\n        // Constrain track specified to valid range\n        trackIndex = Math.min(trackIndex, this.midi.tracks.length - 1);\n        trackIndex = Math.max(trackIndex, 0);\n\n        return this.midi.tracks[trackIndex].notes.find((item) => {\n            return item.noteOn <= time && time <= item.noteOff;\n        });\n    }\n\n    GetPitches(trackIndex = this.currentTrack){\n        let time = this.GetSongProgress();\n\n        // Constrain track specified to valid range\n        trackIndex = Math.min(trackIndex, this.midi.tracks.length - 1);\n        trackIndex = Math.max(trackIndex, 0);\n\n        return this.midi.tracks[trackIndex].notes.filter(item => \n            item.noteOn <= time && time <= item.noteOff);\n    }\n\n    PlaySong(track = 5){\n        if(this.playing){\n            return;\n        }\n\n        // If no song is specified, load a song\n        if(!this.midi){\n            console.log(\"No MIDI is loaded. Loading an example...\");\n            this.LoadSong('../resources/midi/un-owen-was-her.mid', () => {\n                this.PlaySong();\n            });\n            return;\n        }\n\n        // Turn off some stuff so the singing kind of sounds okay\n        this.EnterSingMode();\n\n        this.currentTrack = track;\n        this.clock.start();\n        this.playing = true;\n\n        console.log(\"Playback started.\");\n\n    }\n\n    GetSongProgress(){\n        return this.clock.getElapsedTime();\n    }\n\n    /**\n     * Converts from a MIDI note code to its corresponding frequency.\n     * @param {*} midiCode \n     */\n    MIDIToFrequency(midiCode){\n        return this.baseFreq * Math.pow(2, (midiCode - 69) / 12);\n    }\n\n    /**\n     * Restarts the playback.\n     */\n    Restart(){\n        console.log(\"Playback moved to beginning.\");\n        this.clock = new THREE.Clock();\n    }\n\n    /**\n     * Stops playback.\n     */\n    Stop() {\n        if(!this.playing){\n            return;\n        }\n        console.log(\"Playback stopped.\");\n        this.clock.stop();\n        this.playing = false;\n        this.ExitSingMode();\n    }\n\n    /**\n     * Sets up the trombone for singing.\n     */\n    EnterSingMode(){\n        if(this.backup_settings){\n            return;\n        }\n\n        this.backup_settings = {};\n\n        this.backup_settings[\"autoWobble\"] = this.controller.trombone.autoWobble;\n        this.controller.trombone.autoWobble = false;\n\n        for(let voice of this.controller.trombone.voices) {\n            let voiceBackup = {}\n\n            voiceBackup[\"addPitchVariance\"] = voice.glottis.addPitchVariance;\n            voice.glottis.addPitchVariance = false;\n\n            voiceBackup[\"addTensenessVariance\"] = voice.glottis.addTensenessVariance;\n            voice.glottis.addTensenessVariance = false;\n\n            voiceBackup[\"vibratoFrequency\"] = voice.glottis.vibratoFrequency;\n            voice.glottis.vibratoFrequency = 0;\n\n            voiceBackup[\"frequency\"] = voice.glottis.UIFrequency;\n\n            voiceBackup[\"loudness\"] = voice.glottis.loudness;\n            voice.glottis.loudness = 0;\n\n            this.backup_settings[`${voice.id}`] = voiceBackup\n        }\n    }\n\n    /**\n     * Restores the trombone to the state it was in before singing.\n     */\n    ExitSingMode(){\n        if(!this.backup_settings) {\n            return;\n        }\n\n        this.controller.trombone.autoWobble = this.backup_settings[\"autoWobble\"];\n\n        for(let voice of this.controller.trombone.voices) {\n            let backup = this.backup_settings[`${voice.id}`]\n            voice.glottis.addPitchVariance = backup[\"addPitchVariance\"];\n            voice.glottis.addTensenessVariance = backup[\"addTensenessVariance\"];\n            voice.glottis.vibratoFrequency = backup[\"vibratoFrequency\"];\n            voice.glottis.UIFrequency = backup[\"frequency\"];\n            voice.glottis.loudness = backup[\"loudness\"];\n        }\n\n        this.backup_settings = null;\n    }\n\n}\n\nexport { MidiController };","\n\nclass AudioSystem {  \n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.blockLength = 512;\n        this.blockTime = 1;\n        this.soundOn = false;\n\n    }\n\n    init() {\n        window.AudioContext = window.AudioContext||window.webkitAudioContext;\n        this.audioContext = new window.AudioContext();\n        this.sampleRate = this.audioContext.sampleRate;\n        \n        this.blockTime = this.blockLength/this.sampleRate;\n\n        this.processors = [];\n    }\n    \n    startSound() {\n        for (let i = 0; i < this.trombone.voices.length; i++) {\n            //scriptProcessor may need a dummy input channel on iOS\n            let scriptProcessor = this.audioContext.createScriptProcessor(this.blockLength, 2, 1);\n            scriptProcessor.connect(this.audioContext.destination);\n            scriptProcessor.onaudioprocess = (e) => {this.doScriptProcessor(e, i)};\n        \n            var whiteNoise = this.createWhiteNoiseNode(2 * this.sampleRate); // 2 seconds of noise\n            \n            var aspirateFilter = this.audioContext.createBiquadFilter();\n            aspirateFilter.type = \"bandpass\";\n            aspirateFilter.frequency.value = 500;\n            aspirateFilter.Q.value = 0.5;\n            whiteNoise.connect(aspirateFilter);  // Use white noise as input for filter\n            aspirateFilter.connect(scriptProcessor);  // Use this as input 0 for script processor\n            \n            var fricativeFilter = this.audioContext.createBiquadFilter();\n            fricativeFilter.type = \"bandpass\";\n            fricativeFilter.frequency.value = 1000;\n            fricativeFilter.Q.value = 0.5;\n            whiteNoise.connect(fricativeFilter);  // Use white noise as input\n            fricativeFilter.connect(scriptProcessor);  // Use this as input 1 for script processor\n            \n            whiteNoise.start(0);\n            this.processors.push(scriptProcessor);\n        }\n    }\n    \n    createWhiteNoiseNode(frameCount) {\n        var myArrayBuffer = this.audioContext.createBuffer(1, frameCount, this.sampleRate);\n\n        var nowBuffering = myArrayBuffer.getChannelData(0);\n        for (var i = 0; i < frameCount; i++) \n        {\n            nowBuffering[i] = Math.random();// gaussian();\n        }\n\n        var source = this.audioContext.createBufferSource();\n        source.buffer = myArrayBuffer;\n        source.loop = true;\n\n        return source;\n    }\n    \n    doScriptProcessor(event, index) {\n        var inputArray1 = event.inputBuffer.getChannelData(0);  // Glottis input\n        var inputArray2 = event.inputBuffer.getChannelData(1);  // Tract input\n        var outArray = event.outputBuffer.getChannelData(0);  // Output (mono)\n\n        let voice = this.trombone.voices[index];\n\n        let N = outArray.length;\n        for (var j = 0; j < N; j++)\n        {\n            var lambda1 = j/N; // Goes from 0 to 1\n            var lambda2 = (j+0.5)/N;\n            var glottalOutput = voice.glottis.runStep(lambda1, inputArray1[j]); \n            \n            var vocalOutput = 0;\n            //Tract runs at twice the sample rate \n            voice.tract.runStep(glottalOutput, inputArray2[j], lambda1);\n            vocalOutput += voice.tract.lipOutput + voice.tract.noseOutput;\n            voice.tract.runStep(glottalOutput, inputArray2[j], lambda2);\n            vocalOutput += voice.tract.lipOutput + voice.tract.noseOutput;\n            outArray[j] = vocalOutput * 0.125;\n\n            // Solves background hissing problem but introduces popping.\n            //if(voice.glottis.loudness == 0) outArray[j] = 0;\n        }\n\n        voice.glottis.finishBlock();\n        voice.tract.finishBlock();\n    }\n    \n    mute() {\n        for(let processor of this.processors) {\n            processor.disconnect();\n        }\n    }\n    \n    unmute() {\n        for(let processor of this.processors) {\n            processor.connect(this.audioContext.destination);\n        }\n    }\n    \n}\n\nexports.AudioSystem = AudioSystem;","import noise from \"../noise.js\";\n\nclass Glottis {\n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.timeInWaveform = 0;\n        this.oldFrequency = 140;\n        this.newFrequency = 140;\n        this.UIFrequency = 140;\n        this.smoothFrequency = 140;\n        this.oldTenseness = 0.6;\n        this.newTenseness = 0.6;\n        this.UITenseness = 0.6;\n        this.totalTime = 0;\n        this.vibratoAmount = 0.005;\n        this.vibratoFrequency = 6;\n        this.intensity = 0;\n        this.loudness = 1;\n        this.isTouched = false;\n        this.touch = 0;\n        this.x = 240;\n        this.y = 530;\n\n        this.keyboardTop = 500;\n        this.keyboardLeft = 0;\n        this.keyboardWidth = 600;\n        this.keyboardHeight = 100;\n        this.semitones = 20;\n        this.marks = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0];\n        this.baseNote = 87.3071; //F\n\n        this.output;\n\n        /// Allow pitch to wobble over time\n        this.addPitchVariance = true;\n        /// Allow tenseness to wobble over time\n        this.addTensenessVariance = true;\n\n    }\n    \n    init() {\n        this.setupWaveform(0);\n    }\n    \n    handleTouches() {\n        if (this.touch != 0 && !this.touch.alive) this.touch = 0;\n        \n        if (this.touch == 0)\n        {        \n            for (var j=0; j<UI.touchesWithMouse.length; j++)  \n            {\n                var touch = UI.touchesWithMouse[j];\n                if (!touch.alive) continue;\n                if (touch.y<this.keyboardTop) continue;\n                this.touch = touch;\n            }    \n        }\n        \n        if (this.touch != 0)\n        {\n            var local_y = this.touch.y -  this.keyboardTop-10;\n            var local_x = this.touch.x - this.keyboardLeft;\n            local_y = Math.clamp(local_y, 0, this.keyboardHeight-26);\n            var semitone = this.semitones * local_x / this.keyboardWidth + 0.5;\n            Glottis.UIFrequency = this.baseNote * Math.pow(2, semitone/12);\n            if (Glottis.intensity == 0) Glottis.smoothFrequency = Glottis.UIFrequency;\n            //Glottis.UIRd = 3*local_y / (this.keyboardHeight-20);\n            var t = Math.clamp(1-local_y / (this.keyboardHeight-28), 0, 1);\n            Glottis.UITenseness = 1-Math.cos(t*Math.PI*0.5);\n            Glottis.loudness = Math.pow(Glottis.UITenseness, 0.25);\n            this.x = this.touch.x;\n            this.y = local_y + this.keyboardTop+10;\n        }\n        Glottis.isTouched = (this.touch != 0);\n    }\n        \n    runStep(lambda, noiseSource) {\n        var timeStep = 1.0 / this.trombone.audioSystem.sampleRate;\n        this.timeInWaveform += timeStep;\n        this.totalTime += timeStep;\n        if (this.timeInWaveform > this.waveformLength) \n        {\n            this.timeInWaveform -= this.waveformLength;\n            this.setupWaveform(lambda);\n        }\n        var out = this.normalizedLFWaveform(this.timeInWaveform/this.waveformLength);\n        var aspiration = this.intensity*(1.0-Math.sqrt(this.UITenseness))*this.getNoiseModulator()*noiseSource;\n        aspiration *= 0.2 + 0.02 * noise.simplex1(this.totalTime * 1.99);\n        out += aspiration;\n        return out;\n    }\n    \n    getNoiseModulator() {\n        var voiced = 0.1+0.2*Math.max(0,Math.sin(Math.PI*2*this.timeInWaveform/this.waveformLength));\n        //return 0.3;\n        return this.UITenseness* this.intensity * voiced + (1-this.UITenseness* this.intensity ) * 0.3;\n    }\n    \n    finishBlock() {\n        var vibrato = 0;\n        if (this.addPitchVariance) {\n            // Add small imperfections to the vocal output\n            vibrato += this.vibratoAmount * Math.sin(2*Math.PI * this.totalTime *this.vibratoFrequency);          \n            vibrato += 0.02 * noise.simplex1(this.totalTime * 4.07);\n            vibrato += 0.04 * noise.simplex1(this.totalTime * 2.15);\n        }\n        \n        if (this.trombone.autoWobble)\n        {\n            vibrato += 0.2 * noise.simplex1(this.totalTime * 0.98);\n            vibrato += 0.4 * noise.simplex1(this.totalTime * 0.5);\n        }\n\n        if (this.UIFrequency>this.smoothFrequency) \n            this.smoothFrequency = Math.min(this.smoothFrequency * 1.1, this.UIFrequency);\n        if (this.UIFrequency<this.smoothFrequency) \n            this.smoothFrequency = Math.max(this.smoothFrequency / 1.1, this.UIFrequency);\n        this.oldFrequency = this.newFrequency;\n        this.newFrequency = this.smoothFrequency * (1+vibrato);\n        this.oldTenseness = this.newTenseness;\n\n        if (this.addTensenessVariance)\n            this.newTenseness = this.UITenseness + 0.1*noise.simplex1(this.totalTime*0.46)+0.05*noise.simplex1(this.totalTime*0.36);\n        else\n            this.newTenseness = this.UITenseness;\n\n        if (!this.isTouched && this.trombone.alwaysVoice) this.newTenseness += (3-this.UITenseness)*(1-this.intensity);\n        \n        if (this.isTouched || this.trombone.alwaysVoice)\n            this.intensity += 0.13;\n        this.intensity = Math.clamp(this.intensity, 0, 1);\n    }\n    \n    /// Queues up a single wave?\n    setupWaveform(lambda) {\n        this.frequency = this.oldFrequency*(1-lambda) + this.newFrequency*lambda;\n        var tenseness = this.oldTenseness*(1-lambda) + this.newTenseness*lambda;\n        this.Rd = 3*(1-tenseness);\n        this.waveformLength = 1.0/this.frequency;\n        \n        var Rd = this.Rd;\n        if (Rd<0.5) Rd = 0.5;\n        if (Rd>2.7) Rd = 2.7;\n        // normalized to time = 1, Ee = 1\n        var Ra = -0.01 + 0.048*Rd;\n        var Rk = 0.224 + 0.118*Rd;\n        var Rg = (Rk/4)*(0.5+1.2*Rk)/(0.11*Rd-Ra*(0.5+1.2*Rk));\n        \n        var Ta = Ra;\n        var Tp = 1 / (2*Rg);\n        var Te = Tp + Tp*Rk; //\n        \n        var epsilon = 1/Ta;\n        var shift = Math.exp(-epsilon * (1-Te));\n        var Delta = 1 - shift; //divide by this to scale RHS\n           \n        var RHSIntegral = (1/epsilon)*(shift - 1) + (1-Te)*shift;\n        RHSIntegral = RHSIntegral/Delta;\n        \n        var totalLowerIntegral = - (Te-Tp)/2 + RHSIntegral;\n        var totalUpperIntegral = -totalLowerIntegral;\n        \n        var omega = Math.PI/Tp;\n        var s = Math.sin(omega*Te);\n        var y = -Math.PI*s*totalUpperIntegral / (Tp*2);\n        var z = Math.log(y);\n        var alpha = z/(Tp/2 - Te);\n        var E0 = -1 / (s*Math.exp(alpha*Te));\n        this.alpha = alpha;\n        this.E0 = E0;\n        this.epsilon = epsilon;\n        this.shift = shift;\n        this.Delta = Delta;\n        this.Te=Te;\n        this.omega = omega;\n    }\n    \n \n    normalizedLFWaveform(t) {     \n        if (t>this.Te) this.output = (-Math.exp(-this.epsilon * (t-this.Te)) + this.shift)/this.Delta;\n        else this.output = this.E0 * Math.exp(this.alpha*t) * Math.sin(this.omega * t);\n     \n        return this.output * this.intensity * this.loudness;\n    }\n}\n\nexport { Glottis };","class TractUI\n{\n\n    constructor(trombone, tract) {\n        this.trombone = trombone;\n        this.tract = tract;\n        \n        this.originX = 340; \n        this.originY = 449; \n        this.radius = 298; \n        this.scale = 60;\n        this.tongueIndex = 12.9;\n        this.tongueDiameter = 2.43;\n        this.innerTongueControlRadius = 2.05;\n        this.outerTongueControlRadius = 3.5;\n        this.tongueTouch = 0;\n        this.angleScale = 0.64;\n        this.angleOffset = -0.24;\n        this.noseOffset = 0.8;\n        this.gridOffset = 1.7;\n\n        /// Final openness of the mouth (closer to 0 is more closed)\n        this.target = 0.1;\n        /// Index in the throat array to move to target\n        this.index = 42;\n        /// Number of throat segments to close around the index\n        this.radius = 0;\n    }\n    \n    init() {\n        let Tract = this.tract;\n\n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) \n        {\n            Tract.diameter[i] = Tract.targetDiameter[i] = Tract.restDiameter[i];\n        }\n\n        this.tongueLowerIndexBound = Tract.bladeStart+2;\n        this.tongueUpperIndexBound = Tract.tipStart-3;\n        this.tongueIndexCentre = 0.5*(this.tongueLowerIndexBound+this.tongueUpperIndexBound);\n    }\n        \n    getIndex(x,y) {\n        let Tract = this.tract;\n\n        var xx = x-this.originX; var yy = y-this.originY;\n        var angle = Math.atan2(yy, xx);\n        while (angle> 0) angle -= 2*Math.PI;\n        return (Math.PI + angle - this.angleOffset)*(Tract.lipStart-1) / (this.angleScale*Math.PI);\n    }\n\n    getDiameter(x,y) {\n        var xx = x-this.originX; var yy = y-this.originY;\n        return (this.radius-Math.sqrt(xx*xx + yy*yy))/this.scale;\n    }\n    \n    setRestDiameter() {\n        let Tract = this.tract;\n\n        for (var i=Tract.bladeStart; i<Tract.lipStart; i++)\n        {\n            var t = 1.1 * Math.PI*(this.tongueIndex - i)/(Tract.tipStart - Tract.bladeStart);\n            var fixedTongueDiameter = 2+(this.tongueDiameter-2)/1.5;\n            var curve = (1.5-fixedTongueDiameter+this.gridOffset)*Math.cos(t);\n            if (i == Tract.bladeStart-2 || i == Tract.lipStart-1) curve *= 0.8;\n            if (i == Tract.bladeStart || i == Tract.lipStart-2) curve *= 0.94;               \n            Tract.restDiameter[i] = 1.5 - curve;\n        }\n    }\n\n    /**\n     * Sets the lips of the modeled tract to be closed by the specified amount.\n     * @param {number} progress Percentage closed (number between 0 and 1)\n     */\n    SetLipsClosed(progress) {\n\n        let Tract = this.tract;\n        \n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) Tract.targetDiameter[i] = Tract.restDiameter[i];    \n\n        // Disable this behavior if the mouth is closed a certain amount\n        //if (progress > 0.8 || progress < 0.1) return;\n        \n        for(let i= this.index - this.radius; i <= this.index + this.radius; i++){\n            if (i > Tract.targetDiameter.length || i < 0) continue;\n            let interp = Math.lerp(Tract.restDiameter[i], this.target, progress);\n            Tract.targetDiameter[i] = interp;\n        }\n    }\n\n\n}\n\nexport { TractUI };","class Tract {\n\n    constructor(trombone, glottis) {\n        this.trombone = trombone;\n        this.glottis = glottis;\n        \n        this.n = 44;\n        this.bladeStart = 10;\n        this.tipStart = 32;\n        this.lipStart = 39;\n        this.R = []; //component going right\n        this.L = []; //component going left\n        this.reflection = [];\n        this.junctionOutputR = [];\n        this.junctionOutputL = [];\n        this.maxAmplitude = [];\n        this.diameter = [];\n        this.restDiameter = [];\n        this.targetDiameter = [];\n        this.newDiameter = [];\n        this.A = [];\n        this.glottalReflection = 0.75;\n        this.lipReflection = -0.85;\n        this.lastObstruction = -1;\n        this.fade = 1.0; //0.9999,\n        this.movementSpeed = 15; //cm per second\n        this.transients = [];\n        this.lipOutput = 0;\n        this.noseOutput = 0;\n        this.velumTarget = 0.01;\n    }\n\n    init() {\n        this.bladeStart = Math.floor(this.bladeStart*this.n/44);\n        this.tipStart = Math.floor(this.tipStart*this.n/44);\n        this.lipStart = Math.floor(this.lipStart*this.n/44);        \n        this.diameter = new Float64Array(this.n);\n        this.restDiameter = new Float64Array(this.n);\n        this.targetDiameter = new Float64Array(this.n);\n        this.newDiameter = new Float64Array(this.n);\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = 0;\n            if (i<7*this.n/44-0.5) diameter = 0.6;\n            else if (i<12*this.n/44) diameter = 1.1;\n            else diameter = 1.5;\n            this.diameter[i] = this.restDiameter[i] = this.targetDiameter[i] = this.newDiameter[i] = diameter;\n        }\n        this.R = new Float64Array(this.n);\n        this.L = new Float64Array(this.n);\n        this.reflection = new Float64Array(this.n+1);\n        this.newReflection = new Float64Array(this.n+1);\n        this.junctionOutputR = new Float64Array(this.n+1);\n        this.junctionOutputL = new Float64Array(this.n+1);\n        this.A =new Float64Array(this.n);\n        this.maxAmplitude = new Float64Array(this.n);\n        \n        this.noseLength = Math.floor(28*this.n/44)\n        this.noseStart = this.n-this.noseLength + 1;\n        this.noseR = new Float64Array(this.noseLength);\n        this.noseL = new Float64Array(this.noseLength);\n        this.noseJunctionOutputR = new Float64Array(this.noseLength+1);\n        this.noseJunctionOutputL = new Float64Array(this.noseLength+1);        \n        this.noseReflection = new Float64Array(this.noseLength+1);\n        this.noseDiameter = new Float64Array(this.noseLength);\n        this.noseA = new Float64Array(this.noseLength);\n        this.noseMaxAmplitude = new Float64Array(this.noseLength);\n        for (var i=0; i<this.noseLength; i++)\n        {\n            var diameter;\n            var d = 2*(i/this.noseLength);\n            if (d<1) diameter = 0.4+1.6*d;\n            else diameter = 0.5+1.5*(2-d);\n            diameter = Math.min(diameter, 1.9);\n            this.noseDiameter[i] = diameter;\n        }       \n        this.newReflectionLeft = this.newReflectionRight = this.newReflectionNose = 0;\n        this.calculateReflections();        \n        this.calculateNoseReflections();\n        this.noseDiameter[0] = this.velumTarget;\n    }\n    \n    reshapeTract(deltaTime) {\n        var amount = deltaTime * this.movementSpeed; ;    \n        var newLastObstruction = -1;\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = this.diameter[i];\n            var targetDiameter = this.targetDiameter[i];\n            if (diameter <= 0) newLastObstruction = i;\n            var slowReturn; \n            if (i<this.noseStart) slowReturn = 0.6;\n            else if (i >= this.tipStart) slowReturn = 1.0; \n            else slowReturn = 0.6+0.4*(i-this.noseStart)/(this.tipStart-this.noseStart);\n            this.diameter[i] = Math.moveTowards(diameter, targetDiameter, slowReturn*amount, 2*amount);\n        }\n        if (this.lastObstruction>-1 && newLastObstruction == -1 && this.noseA[0]<0.05)\n        {\n            this.addTransient(this.lastObstruction);\n        }\n        this.lastObstruction = newLastObstruction;\n        \n        amount = deltaTime * this.movementSpeed; \n        this.noseDiameter[0] = Math.moveTowards(this.noseDiameter[0], this.velumTarget, \n                amount*0.25, amount*0.1);\n        this.noseA[0] = this.noseDiameter[0]*this.noseDiameter[0];        \n    }\n    \n    calculateReflections() {\n        for (var i=0; i<this.n; i++) \n        {\n            this.A[i] = this.diameter[i]*this.diameter[i]; //ignoring PI etc.\n        }\n        for (var i=1; i<this.n; i++)\n        {\n            this.reflection[i] = this.newReflection[i];\n            if (this.A[i] == 0) this.newReflection[i] = 0.999; //to prevent some bad behaviour if 0\n            else this.newReflection[i] = (this.A[i-1]-this.A[i]) / (this.A[i-1]+this.A[i]); \n        }\n        \n        //now at junction with nose\n\n        this.reflectionLeft = this.newReflectionLeft;\n        this.reflectionRight = this.newReflectionRight;\n        this.reflectionNose = this.newReflectionNose;\n        var sum = this.A[this.noseStart]+this.A[this.noseStart+1]+this.noseA[0];\n        this.newReflectionLeft = (2*this.A[this.noseStart]-sum)/sum;\n        this.newReflectionRight = (2*this.A[this.noseStart+1]-sum)/sum;   \n        this.newReflectionNose = (2*this.noseA[0]-sum)/sum;      \n    }\n\n    calculateNoseReflections() {\n        for (var i=0; i<this.noseLength; i++) \n        {\n            this.noseA[i] = this.noseDiameter[i]*this.noseDiameter[i]; \n        }\n        for (var i=1; i<this.noseLength; i++)\n        {\n            this.noseReflection[i] = (this.noseA[i-1]-this.noseA[i]) / (this.noseA[i-1]+this.noseA[i]); \n        }\n    }\n    \n    runStep(glottalOutput, turbulenceNoise, lambda) {\n        var updateAmplitudes = (Math.random()<0.1);\n    \n        //mouth\n        this.processTransients();\n        this.addTurbulenceNoise(turbulenceNoise);\n        \n        //this.glottalReflection = -0.8 + 1.6 * Glottis.newTenseness;\n        this.junctionOutputR[0] = this.L[0] * this.glottalReflection + glottalOutput;\n        this.junctionOutputL[this.n] = this.R[this.n-1] * this.lipReflection; \n        \n        for (var i=1; i<this.n; i++)\n        {\n            var r = this.reflection[i] * (1-lambda) + this.newReflection[i]*lambda;\n            var w = r * (this.R[i-1] + this.L[i]);\n            this.junctionOutputR[i] = this.R[i-1] - w;\n            this.junctionOutputL[i] = this.L[i] + w;\n        }    \n        \n        //now at junction with nose\n        var i = this.noseStart;\n        var r = this.newReflectionLeft * (1-lambda) + this.reflectionLeft*lambda;\n        this.junctionOutputL[i] = r*this.R[i-1]+(1+r)*(this.noseL[0]+this.L[i]);\n        r = this.newReflectionRight * (1-lambda) + this.reflectionRight*lambda;\n        this.junctionOutputR[i] = r*this.L[i]+(1+r)*(this.R[i-1]+this.noseL[0]);     \n        r = this.newReflectionNose * (1-lambda) + this.reflectionNose*lambda;\n        this.noseJunctionOutputR[0] = r*this.noseL[0]+(1+r)*(this.L[i]+this.R[i-1]);\n         \n        for (var i=0; i<this.n; i++)\n        {          \n            this.R[i] = this.junctionOutputR[i]*0.999;\n            this.L[i] = this.junctionOutputL[i+1]*0.999; \n            \n            //this.R[i] = Math.clamp(this.junctionOutputR[i] * this.fade, -1, 1);\n            //this.L[i] = Math.clamp(this.junctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {   \n                var amplitude = Math.abs(this.R[i]+this.L[i]);\n                if (amplitude > this.maxAmplitude[i]) this.maxAmplitude[i] = amplitude;\n                else this.maxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.lipOutput = this.R[this.n-1];\n        \n        //nose     \n        this.noseJunctionOutputL[this.noseLength] = this.noseR[this.noseLength-1] * this.lipReflection; \n        \n        for (var i=1; i<this.noseLength; i++)\n        {\n            var w = this.noseReflection[i] * (this.noseR[i-1] + this.noseL[i]);\n            this.noseJunctionOutputR[i] = this.noseR[i-1] - w;\n            this.noseJunctionOutputL[i] = this.noseL[i] + w;\n        }\n        \n        for (var i=0; i<this.noseLength; i++)\n        {\n            this.noseR[i] = this.noseJunctionOutputR[i] * this.fade;\n            this.noseL[i] = this.noseJunctionOutputL[i+1] * this.fade;   \n            \n            //this.noseR[i] = Math.clamp(this.noseJunctionOutputR[i] * this.fade, -1, 1);\n            //this.noseL[i] = Math.clamp(this.noseJunctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {\n                var amplitude = Math.abs(this.noseR[i]+this.noseL[i]);\n                if (amplitude > this.noseMaxAmplitude[i]) this.noseMaxAmplitude[i] = amplitude;\n                else this.noseMaxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.noseOutput = this.noseR[this.noseLength-1];\n       \n    }\n    \n    finishBlock() {         \n        this.reshapeTract(this.trombone.audioSystem.blockTime);\n        this.calculateReflections();\n    }\n    \n    addTransient(position) {\n        var trans = {}\n        trans.position = position;\n        trans.timeAlive = 0;\n        trans.lifeTime = 0.2;\n        trans.strength = 0.3;\n        trans.exponent = 200;\n        this.transients.push(trans);\n    }\n    \n    processTransients() {\n        for (var i = 0; i < this.transients.length; i++)  \n        {\n            var trans = this.transients[i];\n            var amplitude = trans.strength * Math.pow(2, -trans.exponent * trans.timeAlive);\n            this.R[trans.position] += amplitude/2;\n            this.L[trans.position] += amplitude/2;\n            trans.timeAlive += 1.0/(this.trombone.audioSystem.sampleRate*2);\n        }\n        for (var i=this.transients.length-1; i>=0; i--)\n        {\n            var trans = this.transients[i];\n            if (trans.timeAlive > trans.lifeTime)\n            {\n                this.transients.splice(i,1);\n            }\n        }\n    }\n    \n    addTurbulenceNoise(turbulenceNoise) {\n        // for (var j=0; j<UI.touchesWithMouse.length; j++)\n        // {\n        //     var touch = UI.touchesWithMouse[j];\n        //     if (touch.index<2 || touch.index>Tract.n) continue;\n        //     if (touch.diameter<=0) continue;            \n        //     var intensity = touch.fricative_intensity;\n        //     if (intensity == 0) continue;\n        //     this.addTurbulenceNoiseAtIndex(0.66*turbulenceNoise*intensity, touch.index, touch.diameter);\n        // }\n    }\n    \n    addTurbulenceNoiseAtIndex(turbulenceNoise, index, diameter) {   \n        var i = Math.floor(index);\n        var delta = index - i;\n        turbulenceNoise *= this.glottis.getNoiseModulator();\n        var thinness0 = Math.clamp(8*(0.7-diameter),0,1);\n        var openness = Math.clamp(30*(diameter-0.3), 0, 1);\n        var noise0 = turbulenceNoise*(1-delta)*thinness0*openness;\n        var noise1 = turbulenceNoise*delta*thinness0*openness;\n        this.R[i+1] += noise0/2;\n        this.L[i+1] += noise0/2;\n        this.R[i+2] += noise1/2;\n        this.L[i+2] += noise1/2;\n    }\n};\n\nexport { Tract };","Math.clamp = function(number, min, max) {\n    if (number<min) return min;\n    else if (number>max) return max;\n    else return number;\n}\n\nMath.moveTowards = function(current, target, amount) {\n    if (current<target) return Math.min(current+amount, target);\n    else return Math.max(current-amount, target);\n}\n\nMath.moveTowards = function(current, target, amountUp, amountDown) {\n    if (current<target) return Math.min(current+amountUp, target);\n    else return Math.max(current-amountDown, target);\n}\n\nMath.gaussian = function() {\n    var s = 0;\n    for (var c=0; c<16; c++) s+=Math.random();\n    return (s-8)/4;\n}\n\nMath.lerp = function(a, b, t) {\n    return a + (b - a) * t;\n}","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nclass Grad {\n    constructor(x, y, z){\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    dot2(x, y){\n        return this.x*x + this.y*y;\n    }\n\n    dot3(x, y, z) {\n        return this.x*x + this.y*y + this.z*z;\n    };\n}\n\nclass Noise {\n    constructor() {\n        this.grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n                      new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n                      new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n        this.p = [151,160,137,91,90,15,\n            131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n            190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n            88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n            77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n            102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n            135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n            5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n            223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n            129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n            251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n            49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n            138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n\n        // To remove the need for index wrapping, double the permutation table length\n        this.perm = new Array(512);\n        this.gradP = new Array(512);\n\n        this.seed(Date.now());\n    }\n\n    seed(seed) {\n        if(seed > 0 && seed < 1) {\n            // Scale the seed out\n            seed *= 65536;\n        }\n\n        seed = Math.floor(seed);\n        if(seed < 256) {\n            seed |= seed << 8;\n        }\n\n        for(var i = 0; i < 256; i++) {\n            var v;\n            if (i & 1) {\n                v = this.p[i] ^ (seed & 255);\n            } else {\n                v = this.p[i] ^ ((seed>>8) & 255);\n            }\n\n            this.perm[i] = this.perm[i + 256] = v;\n            this.gradP[i] = this.gradP[i + 256] = this.grad3[v % 12];\n        }\n    };\n\n    // 2D simplex noise\n    simplex2(xin, yin) {\n        // Skewing and unskewing factors for 2, 3, and 4 dimensions\n        var F2 = 0.5*(Math.sqrt(3)-1);\n        var G2 = (3-Math.sqrt(3))/6;\n\n        var F3 = 1/3;\n        var G3 = 1/6;\n\n        var n0, n1, n2; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        var s = (xin+yin)*F2; // Hairy factor for 2D\n        var i = Math.floor(xin+s);\n        var j = Math.floor(yin+s);\n        var t = (i+j)*G2;\n        var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n        var y0 = yin-j+t;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1=1; j1=0;\n        } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n            i1=0; j1=1;\n        }\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        var y1 = y0 - j1 + G2;\n        var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        var y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        i &= 255;\n        j &= 255;\n        var gi0 = this.gradP[i+this.perm[j]];\n        var gi1 = this.gradP[i+i1+this.perm[j+j1]];\n        var gi2 = this.gradP[i+1+this.perm[j+1]];\n        // Calculate the contribution from the three corners\n        var t0 = 0.5 - x0*x0-y0*y0;\n        if(t0<0) {\n            n0 = 0;\n        } else {\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n        }\n        var t1 = 0.5 - x1*x1-y1*y1;\n        if(t1<0) {\n            n1 = 0;\n        } else {\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot2(x1, y1);\n        }\n        var t2 = 0.5 - x2*x2-y2*y2;\n        if(t2<0) {\n            n2 = 0;\n        } else {\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot2(x2, y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n    \n    simplex1(x){\n        return this.simplex2(x*1.2, -x*0.7);\n    }\n\n}\n\nconst singleton = new Noise();\nObject.freeze(singleton);\n\nexport default singleton;","import \"./math-extensions.js\";\n\nimport { AudioSystem } from \"./components/audio-system.js\";\nimport { Glottis } from \"./components/glottis.js\";\nimport { Tract } from \"./components/tract.js\";\nimport { TractUI } from \"./components/tract-ui.js\";\n\nclass Voice {\n    constructor(trombone, id) {\n        this.id = id;\n\n        this.glottis = new Glottis(trombone);\n        this.glottis.init();\n\n        this.tract = new Tract(trombone, this.glottis);\n        this.tract.init();\n\n        this.tractUI = new TractUI(trombone, this.tract);\n        this.tractUI.init();\n    }\n}\n\nclass PinkTrombone {\n    constructor(controller){\n        this.controller = controller;\n        \n        this.time = 0;\n        this.alwaysVoice = true;\n        this.autoWobble = true;\n        this.noiseFreq = 500;\n        this.noiseQ = 0.7;\n\n        this.voices = [];\n        for(let i = 0; i < 8; i++){\n            let voice = new Voice(this, i);\n            voice.glottis.loudness = i == 0 ? 1 : 0;\n            this.voices.push(voice);\n        }\n\n        this.audioSystem = new AudioSystem(this);\n        this.audioSystem.init();\n\n        //this.StartAudio();\n        //this.SetMute(true);\n\n        this.muted = false;\n    }\n\n    StartAudio() {\n        this.muted = false;\n        this.audioSystem.startSound();\n    }\n\n    SetMute(doMute) {\n        doMute ? this.audioSystem.mute() : this.audioSystem.unmute();\n        this.muted = doMute;\n    }\n\n    ToggleMute() {\n        this.SetMute(!this.muted);\n    }\n\n}\n\nexport { PinkTrombone, Voice };","// const words = require('cmu-pronouncing-dictionary');\n\nexport class TTSController {\n    constructor(){\n        \n    }\n\n    // GetGraphemes(str){\n    //     let zeroPunctuation = str.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\n    //     let wordBank = []\n    //     for(let word of zeroPunctuation.split(' ')){\n    //         wordBank.push(this.GetPronunciationForWord(word));\n    //     }\n    //     return wordBank;\n    // }\n\n    // GetPronunciationForWord(rawWord){\n    //     let word = rawWord.toLowerCase();\n    //     if (words[word]){\n    //         return words[word];\n    //     } else {\n    //         // If the word isn't in the dict, ignore it for now\n    //         return \"None\";\n    //     }\n    // }\n\n\n\n}","class ModelLoader {\n\n    /**\n     * Loads a model asynchronously. Expects an object containing\n     * the path to the object, the relative path of the OBJ file,\n     * and the relative path of the MTL file.\n     * \n     * An example:\n     * let modelInfo = {\n     *      path: \"../resources/obj/\",\n     *      objFile: \"test.obj\",\n     *      mtlFile: \"test.mtl\"\n     * }\n     */\n    static LoadOBJ(modelInfo, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var mtlLoader = new THREE.MTLLoader();\n        mtlLoader.setPath( modelInfo.path );\n\n        mtlLoader.load( modelInfo.mtlFile, ( materials ) => {\n            materials.preload();\n            var objLoader = new THREE.OBJLoader();\n            objLoader.setMaterials( materials );\n            objLoader.setPath( modelInfo.path );\n            objLoader.load( modelInfo.objFile, ( object ) => {\n                loadedCallback(object);\n            }, onProgress, onError );\n            \n        });\n\n    }\n\n    static LoadJSON(path, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.JSONLoader();\n        loader.load( path, ( geometry, materials ) => {\n            // Apply skinning to each material so the verts are affected by bone movement\n            for(let mat of materials){\n                mat.skinning = true;\n            }\n            let mesh = new THREE.SkinnedMesh( geometry, new THREE.MultiMaterial( materials ) );\n            mesh.name = \"Jon\";\n            loadedCallback(mesh);\n        }, onProgress, onError);\n    }\n\n    static LoadFBX(path, loadedCallback) {\n        let manager = new THREE.LoadingManager();\n        manager.onProgress = function( item, loaded, total ) {\n            console.log( item, loaded, total );\n        };\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.FBXLoader( manager );\n        loader.load( path, ( object ) => {\n            loadedCallback(object);\n        }, onProgress, onError );\n    }\n\n}\n\nexport { ModelLoader };","class Detector {\n\n    //http://stackoverflow.com/questions/11871077/proper-way-to-detect-webgl-support\n    static HasWebGL() {\n        if (!!window.WebGLRenderingContext) {\n            var canvas = document.createElement(\"canvas\"),\n                    names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\n                context = false;\n\n            for(var i=0;i<4;i++) {\n                try {\n                    context = canvas.getContext(names[i]);\n                    if (context && typeof context.getParameter == \"function\") {\n                        // WebGL is enabled\n                        return true;\n                    }\n                } catch(e) {}\n            }\n\n            // WebGL is supported, but disabled\n            return false;\n        }\n        // WebGL not supported\n        return false;\n    }\n\n    static GetErrorHTML(message = null){\n        if(message == null){\n            message = `Your graphics card does not seem to support \n                        <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>. <br>\n                        Find out how to get it <a href=\"http://get.webgl.org/\">here</a>.`;\n        }\n        return `\n        <div class=\"no-webgl-support\">\n        <p style=\"text-align: center;\">${message}</p>\n        </div>\n        `\n    }\n\n}\n\nexport { Detector };","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.MidiConvert=e():t.MidiConvert=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=7)}([function(t,e,n){\"use strict\";n.d(e,\"a\",function(){return r}),n.d(e,\"b\",function(){return i}),n.d(e,\"c\",function(){return a});var r=[\"acoustic grand piano\",\"bright acoustic piano\",\"electric grand piano\",\"honky-tonk piano\",\"electric piano 1\",\"electric piano 2\",\"harpsichord\",\"clavi\",\"celesta\",\"glockenspiel\",\"music box\",\"vibraphone\",\"marimba\",\"xylophone\",\"tubular bells\",\"dulcimer\",\"drawbar organ\",\"percussive organ\",\"rock organ\",\"church organ\",\"reed organ\",\"accordion\",\"harmonica\",\"tango accordion\",\"acoustic guitar (nylon)\",\"acoustic guitar (steel)\",\"electric guitar (jazz)\",\"electric guitar (clean)\",\"electric guitar (muted)\",\"overdriven guitar\",\"distortion guitar\",\"guitar harmonics\",\"acoustic bass\",\"electric bass (finger)\",\"electric bass (pick)\",\"fretless bass\",\"slap bass 1\",\"slap bass 2\",\"synth bass 1\",\"synth bass 2\",\"violin\",\"viola\",\"cello\",\"contrabass\",\"tremolo strings\",\"pizzicato strings\",\"orchestral harp\",\"timpani\",\"string ensemble 1\",\"string ensemble 2\",\"synthstrings 1\",\"synthstrings 2\",\"choir aahs\",\"voice oohs\",\"synth voice\",\"orchestra hit\",\"trumpet\",\"trombone\",\"tuba\",\"muted trumpet\",\"french horn\",\"brass section\",\"synthbrass 1\",\"synthbrass 2\",\"soprano sax\",\"alto sax\",\"tenor sax\",\"baritone sax\",\"oboe\",\"english horn\",\"bassoon\",\"clarinet\",\"piccolo\",\"flute\",\"recorder\",\"pan flute\",\"blown bottle\",\"shakuhachi\",\"whistle\",\"ocarina\",\"lead 1 (square)\",\"lead 2 (sawtooth)\",\"lead 3 (calliope)\",\"lead 4 (chiff)\",\"lead 5 (charang)\",\"lead 6 (voice)\",\"lead 7 (fifths)\",\"lead 8 (bass + lead)\",\"pad 1 (new age)\",\"pad 2 (warm)\",\"pad 3 (polysynth)\",\"pad 4 (choir)\",\"pad 5 (bowed)\",\"pad 6 (metallic)\",\"pad 7 (halo)\",\"pad 8 (sweep)\",\"fx 1 (rain)\",\"fx 2 (soundtrack)\",\"fx 3 (crystal)\",\"fx 4 (atmosphere)\",\"fx 5 (brightness)\",\"fx 6 (goblins)\",\"fx 7 (echoes)\",\"fx 8 (sci-fi)\",\"sitar\",\"banjo\",\"shamisen\",\"koto\",\"kalimba\",\"bag pipe\",\"fiddle\",\"shanai\",\"tinkle bell\",\"agogo\",\"steel drums\",\"woodblock\",\"taiko drum\",\"melodic tom\",\"synth drum\",\"reverse cymbal\",\"guitar fret noise\",\"breath noise\",\"seashore\",\"bird tweet\",\"telephone ring\",\"helicopter\",\"applause\",\"gunshot\"],i=[\"piano\",\"chromatic percussion\",\"organ\",\"guitar\",\"bass\",\"strings\",\"ensemble\",\"brass\",\"reed\",\"pipe\",\"synth lead\",\"synth pad\",\"synth effects\",\"ethnic\",\"percussive\",\"sound effects\"],a={0:\"standard kit\",8:\"room kit\",16:\"power kit\",24:\"electronic kit\",25:\"tr-808 kit\",32:\"jazz kit\",40:\"brush kit\",48:\"orchestra kit\",56:\"sound fx kit\"}},function(t,e,n){\"use strict\";function r(t){return t.replace(/\\u0000/g,\"\")}function i(t,e){return 60/e.bpm*(t/e.PPQ)}function a(t){return\"number\"==typeof t}function o(t){return\"string\"==typeof t}function s(t){return[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"][t%12]+(Math.floor(t/12)-1)}e.b=r,e.a=i,e.c=a,n.d(e,\"d\",function(){return u}),e.e=s,n.d(e,\"f\",function(){return c});var u=function(){var t=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;return function(e){return o(e)&&t.test(e)}}(),c=function(){var t=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,e={cbb:-2,cb:-1,c:0,\"c#\":1,cx:2,dbb:0,db:1,d:2,\"d#\":3,dx:4,ebb:2,eb:3,e:4,\"e#\":5,ex:6,fbb:3,fb:4,f:5,\"f#\":6,fx:7,gbb:5,gb:6,g:7,\"g#\":8,gx:9,abb:7,ab:8,a:9,\"a#\":10,ax:11,bbb:9,bb:10,b:11,\"b#\":12,bx:13};return function(n){var r=t.exec(n),i=r[1],a=r[2];return e[i.toLowerCase()]+12*(parseInt(a)+1)}}()},function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}n.d(e,\"a\",function(){return h});var i=n(11),a=(n.n(i),n(10)),o=(n.n(a),n(1)),s=n(9),u=n(5),c=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),h=function(){function t(){r(this,t),this.header={bpm:120,timeSignature:[4,4],PPQ:480},this.tracks=[]}return c(t,null,[{key:\"fromJSON\",value:function(e){var n=new t;return n.header=e.header,e.tracks.forEach(function(t){var e=s.a.fromJSON(t);n.tracks.push(e)}),n}}]),c(t,[{key:\"load\",value:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"GET\";return new Promise(function(i,a){var o=new XMLHttpRequest;o.open(r,t),o.responseType=\"arraybuffer\",o.addEventListener(\"load\",function(){4===o.readyState&&200===o.status?i(e.decode(o.response)):a(o.status)}),o.addEventListener(\"error\",a),o.send(n)}).catch(function(t){console.log(t)})}},{key:\"decode\",value:function(t){var e=this;if(t instanceof ArrayBuffer){var r=new Uint8Array(t);t=String.fromCharCode.apply(null,r)}var a=i(t);return this.header=n.i(u.a)(a),this.tracks=[],a.tracks.forEach(function(t,n){var r=new s.a;r.id=n,e.tracks.push(r);var i=0;t.forEach(function(t){i+=o.a(t.deltaTime,e.header),\"meta\"===t.type&&\"trackName\"===t.subtype?r.name=o.b(t.text):\"noteOn\"===t.subtype?(r.noteOn(t.noteNumber,i,t.velocity/127),-1===r.channelNumber&&(r.channelNumber=t.channel)):\"noteOff\"===t.subtype?r.noteOff(t.noteNumber,i):\"controller\"===t.subtype&&t.controllerType?r.cc(t.controllerType,i,t.value/127):\"meta\"===t.type&&\"instrumentName\"===t.subtype?r.instrument=t.text:\"channel\"===t.type&&\"programChange\"===t.subtype&&(r.patch(t.programNumber),r.channelNumber=t.channel)}),e.header.name||r.length||!r.name||(e.header.name=r.name)}),this}},{key:\"encode\",value:function(){var t=this,e=new a.File({ticks:this.header.PPQ}),n=this.tracks.filter(function(t){return!t.length})[0];if(this.header.name&&(!n||n.name!==this.header.name)){e.addTrack().addEvent(new a.MetaEvent({time:0,type:a.MetaEvent.TRACK_NAME,data:this.header.name}))}return this.tracks.forEach(function(n){var r=e.addTrack();r.setTempo(t.bpm),n.name&&r.addEvent(new a.MetaEvent({time:0,type:a.MetaEvent.TRACK_NAME,data:n.name})),n.encode(r,t.header)}),e.toBytes()}},{key:\"toArray\",value:function(){for(var t=this.encode(),e=new Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}},{key:\"toJSON\",value:function(){var t={header:this.header,startTime:this.startTime,duration:this.duration,tracks:(this.tracks||[]).map(function(t){return t.toJSON()})};return t.header.name||(t.header.name=\"\"),t}},{key:\"track\",value:function(t){var e=new s.a(t);return this.tracks.push(e),e}},{key:\"get\",value:function(t){return o.c(t)?this.tracks[t]:this.tracks.find(function(e){return e.name===t})}},{key:\"slice\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.duration,r=new t;return r.header=this.header,r.tracks=this.tracks.map(function(t){return t.slice(e,n)}),r}},{key:\"startTime\",get:function(){var t=this.tracks.map(function(t){return t.startTime});return t.length?Math.min.apply(Math,t)||0:0}},{key:\"bpm\",get:function(){return this.header.bpm},set:function(t){var e=this.header.bpm;this.header.bpm=t;var n=e/t;this.tracks.forEach(function(t){return t.scale(n)})}},{key:\"timeSignature\",get:function(){return this.header.timeSignature},set:function(t){this.header.timeSignature=t}},{key:\"duration\",get:function(){var t=this.tracks.map(function(t){return t.duration});return t.length?Math.max.apply(Math,t)||0:0}}]),t}()},function(t,e,n){\"use strict\";function r(t,e){var n=0,r=t.length,i=r;if(r>0&&t[r-1].time<=e)return r-1;for(;n<i;){var a=Math.floor(n+(i-n)/2),o=t[a],s=t[a+1];if(o.time===e){for(var u=a;u<t.length;u++){t[u].time===e&&(a=u)}return a}if(o.time<e&&s.time>e)return a;o.time>e?i=a:o.time<e&&(n=a+1)}return-1}function i(t,e){if(t.length){var n=r(t,e.time);t.splice(n+1,0,e)}else t.push(e)}n.d(e,\"a\",function(){return i})},function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}n.d(e,\"a\",function(){return o});var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a={1:\"modulationWheel\",2:\"breath\",4:\"footController\",5:\"portamentoTime\",7:\"volume\",8:\"balance\",10:\"pan\",64:\"sustain\",65:\"portamentoTime\",66:\"sostenuto\",67:\"softPedal\",68:\"legatoFootswitch\",84:\"portamentoContro\"},o=function(){function t(e,n,i){r(this,t),this.number=e,this.time=n,this.value=i}return i(t,[{key:\"name\",get:function(){if(a.hasOwnProperty(this.number))return a[this.number]}}]),t}()},function(t,e,n){\"use strict\";function r(t){for(var e={PPQ:t.header.ticksPerBeat},n=0;n<t.tracks.length;n++)for(var r=t.tracks[n],i=0;i<r.length;i++){var a=r[i];\"meta\"===a.type&&(\"timeSignature\"===a.subtype?e.timeSignature=[a.numerator,a.denominator]:\"setTempo\"===a.subtype&&(e.bpm||(e.bpm=6e7/a.microsecondsPerBeat)))}return e.bpm=e.bpm||120,e}n.d(e,\"a\",function(){return r})},function(t,e,n){\"use strict\";function r(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=e[n];if(r.length>i)return!0}return!1}function i(t,e,n){for(var r=0,i=1/0,a=0;a<t.length;a++){var o=t[a],s=e[a];o[s]&&o[s].time<i&&(r=a,i=o[s].time)}n[r](t[r][e[r]]),e[r]+=1}function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];for(var a=e.filter(function(t,e){return e%2==0}),o=new Uint32Array(a.length),s=e.filter(function(t,e){return e%2==1});r(a,o);)i(a,o,s)}n.d(e,\"a\",function(){return a})},function(t,e,n){\"use strict\";function r(t){return(new s.a).decode(t)}function i(t,e){var n=(new s.a).load(t);return e&&n.then(e),n}function a(){return new s.a}function o(t){return s.a.fromJSON(t)}Object.defineProperty(e,\"__esModule\",{value:!0}),e.parse=r,e.load=i,e.create=a,e.fromJSON=o;var s=n(2),u=n(0);n.d(e,\"instrumentByPatchID\",function(){return u.a}),n.d(e,\"instrumentFamilyByID\",function(){return u.b}),n.d(e,\"drumKitByPatchID\",function(){return u.c})},function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}n.d(e,\"a\",function(){return o});var i=n(1),a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),o=function(){function t(e,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(r(this,t),i.c(e))this.midi=e;else{if(!i.d(e))throw new Error(\"the midi value must either be in Pitch Notation (e.g. C#4) or a midi value\");this.name=e}this.time=n,this.duration=a,this.velocity=o}return a(t,null,[{key:\"fromJSON\",value:function(e){return new t(e.midi,e.time,e.duration,e.velocity)}}]),a(t,[{key:\"match\",value:function(t){return i.c(t)?this.midi===t:i.d(t)?this.name.toLowerCase()===t.toLowerCase():void 0}},{key:\"toJSON\",value:function(){return{name:this.name,midi:this.midi,time:this.time,velocity:this.velocity,duration:this.duration}}},{key:\"name\",get:function(){return i.e(this.midi)},set:function(t){this.midi=i.f(t)}},{key:\"noteOn\",get:function(){return this.time},set:function(t){this.time=t}},{key:\"noteOff\",get:function(){return this.time+this.duration},set:function(t){this.duration=t-this.time}}]),t}()},function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}n.d(e,\"a\",function(){return h});var i=n(3),a=n(4),o=n(6),s=n(8),u=n(0),c=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),h=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;r(this,t),this.name=e,this.channelNumber=i,this.notes=[],this.controlChanges={},this.instrumentNumber=n}return c(t,null,[{key:\"fromJSON\",value:function(e){var n=new t(e.name,e.instrumentNumber,e.channelNumber);return n.id=e.id,e.notes&&e.notes.forEach(function(t){var e=s.a.fromJSON(t);n.notes.push(e)}),e.controlChanges&&(n.controlChanges=e.controlChanges),n}}]),c(t,[{key:\"note\",value:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=new s.a(t,e,r,a);return n.i(i.a)(this.notes,o),this}},{key:\"noteOn\",value:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=new s.a(t,e,0,r);return n.i(i.a)(this.notes,a),this}},{key:\"noteOff\",value:function(t,e){for(var n=0;n<this.notes.length;n++){var r=this.notes[n];if(r.match(t)&&0===r.duration){r.noteOff=e;break}}return this}},{key:\"cc\",value:function(t,e,r){this.controlChanges.hasOwnProperty(t)||(this.controlChanges[t]=[]);var o=new a.a(t,e,r);return n.i(i.a)(this.controlChanges[t],o),this}},{key:\"patch\",value:function(t){return this.instrumentNumber=t,this}},{key:\"channel\",value:function(t){return this.channelNumber=t,this}},{key:\"scale\",value:function(t){return this.notes.forEach(function(e){e.time*=t,e.duration*=t}),this}},{key:\"slice\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.duration,r=Math.max(this.notes.findIndex(function(t){return t.time>=e}),0),i=this.notes.findIndex(function(t){return t.noteOff>=n})+1,a=new t(this.name);return a.notes=this.notes.slice(r,i),a.notes.forEach(function(t){return t.time=t.time-e}),a}},{key:\"encode\",value:function(t,e){function r(t){var e=Math.floor(i*t),n=Math.max(e-a,0);return a=e,n}var i=e.PPQ/(60/e.bpm),a=0,s=Math.max(0,this.channelNumber);-1!==this.instrumentNumber&&t.instrument(s,this.instrumentNumber),n.i(o.a)(this.noteOns,function(e){t.addNoteOn(s,e.name,r(e.time),Math.floor(127*e.velocity))},this.noteOffs,function(e){t.addNoteOff(s,e.name,r(e.time))})}},{key:\"toJSON\",value:function(){var t={startTime:this.startTime,duration:this.duration,length:this.length,notes:[],controlChanges:{}};return void 0!==this.id&&(t.id=this.id),t.name=this.name,-1!==this.instrumentNumber&&(t.instrumentNumber=this.instrumentNumber,t.instrument=this.instrument,t.instrumentFamily=this.instrumentFamily),-1!==this.channelNumber&&(t.channelNumber=this.channelNumber,t.isPercussion=this.isPercussion),this.notes.length&&(t.notes=this.notes.map(function(t){return t.toJSON()})),Object.keys(this.controlChanges).length&&(t.controlChanges=this.controlChanges),t}},{key:\"noteOns\",get:function(){var t=[];return this.notes.forEach(function(e){t.push({time:e.noteOn,midi:e.midi,name:e.name,velocity:e.velocity})}),t}},{key:\"noteOffs\",get:function(){var t=[];return this.notes.forEach(function(e){t.push({time:e.noteOff,midi:e.midi,name:e.name})}),t}},{key:\"length\",get:function(){return this.notes.length}},{key:\"startTime\",get:function(){if(this.notes.length){return this.notes[0].noteOn}return 0}},{key:\"duration\",get:function(){if(this.notes.length){return this.notes[this.notes.length-1].noteOff}return 0}},{key:\"instrument\",get:function(){return this.isPercussion?u.c[this.instrumentNumber]:u.a[this.instrumentNumber]},set:function(t){var e=u.a.indexOf(t);-1!==e&&(this.instrumentNumber=e)}},{key:\"isPercussion\",get:function(){return[9,10].includes(this.channelNumber)}},{key:\"instrumentFamily\",get:function(){return this.isPercussion?\"drums\":u.b[Math.floor(this.instrumentNumber/8)]}}]),t}()},function(t,e,n){(function(t){var n={};!function(t){var e=t.DEFAULT_VOLUME=90,n=(t.DEFAULT_DURATION=128,t.DEFAULT_CHANNEL=0,{midi_letter_pitches:{a:21,b:23,c:12,d:14,e:16,f:17,g:19},midiPitchFromNote:function(t){var e=/([a-g])(#+|b+)?([0-9]+)$/i.exec(t),r=e[1].toLowerCase(),i=e[2]||\"\";return 12*parseInt(e[3],10)+n.midi_letter_pitches[r]+(\"#\"==i.substr(0,1)?1:-1)*i.length},ensureMidiPitch:function(t){return\"number\"!=typeof t&&/[^0-9]/.test(t)?n.midiPitchFromNote(t):parseInt(t,10)},midi_pitches_letter:{12:\"c\",13:\"c#\",14:\"d\",15:\"d#\",16:\"e\",17:\"f\",18:\"f#\",19:\"g\",20:\"g#\",21:\"a\",22:\"a#\",23:\"b\"},midi_flattened_notes:{\"a#\":\"bb\",\"c#\":\"db\",\"d#\":\"eb\",\"f#\":\"gb\",\"g#\":\"ab\"},noteFromMidiPitch:function(t,e){var r,i=0,a=t,e=e||!1;return t>23&&(i=Math.floor(t/12)-1,a=t-12*i),r=n.midi_pitches_letter[a],e&&r.indexOf(\"#\")>0&&(r=n.midi_flattened_notes[r]),r+i},mpqnFromBpm:function(t){var e=Math.floor(6e7/t),n=[];do{n.unshift(255&e),e>>=8}while(e);for(;n.length<3;)n.push(0);return n},bpmFromMpqn:function(t){var e=t;if(void 0!==t[0]){e=0;for(var n=0,r=t.length-1;r>=0;++n,--r)e|=t[n]<<r}return Math.floor(6e7/t)},codes2Str:function(t){return String.fromCharCode.apply(null,t)},str2Bytes:function(t,e){if(e)for(;t.length/2<e;)t=\"0\"+t;for(var n=[],r=t.length-1;r>=0;r-=2){var i=0===r?t[r]:t[r-1]+t[r];n.unshift(parseInt(i,16))}return n},translateTickTime:function(t){for(var e=127&t;t>>=7;)e<<=8,e|=127&t|128;for(var n=[];;){if(n.push(255&e),!(128&e))break;e>>=8}return n}}),r=function(t){if(!this)return new r(t);!t||null===t.type&&void 0===t.type||null===t.channel&&void 0===t.channel||null===t.param1&&void 0===t.param1||(this.setTime(t.time),this.setType(t.type),this.setChannel(t.channel),this.setParam1(t.param1),this.setParam2(t.param2))};r.NOTE_OFF=128,r.NOTE_ON=144,r.AFTER_TOUCH=160,r.CONTROLLER=176,r.PROGRAM_CHANGE=192,r.CHANNEL_AFTERTOUCH=208,r.PITCH_BEND=224,r.prototype.setTime=function(t){this.time=n.translateTickTime(t||0)},r.prototype.setType=function(t){if(t<r.NOTE_OFF||t>r.PITCH_BEND)throw new Error(\"Trying to set an unknown event: \"+t);this.type=t},r.prototype.setChannel=function(t){if(t<0||t>15)throw new Error(\"Channel is out of bounds.\");this.channel=t},r.prototype.setParam1=function(t){this.param1=t},r.prototype.setParam2=function(t){this.param2=t},r.prototype.toBytes=function(){var t=[],e=this.type|15&this.channel;return t.push.apply(t,this.time),t.push(e),t.push(this.param1),void 0!==this.param2&&null!==this.param2&&t.push(this.param2),t};var i=function(t){if(!this)return new i(t);this.setTime(t.time),this.setType(t.type),this.setData(t.data)};i.SEQUENCE=0,i.TEXT=1,i.COPYRIGHT=2,i.TRACK_NAME=3,i.INSTRUMENT=4,i.LYRIC=5,i.MARKER=6,i.CUE_POINT=7,i.CHANNEL_PREFIX=32,i.END_OF_TRACK=47,i.TEMPO=81,i.SMPTE=84,i.TIME_SIG=88,i.KEY_SIG=89,i.SEQ_EVENT=127,i.prototype.setTime=function(t){this.time=n.translateTickTime(t||0)},i.prototype.setType=function(t){this.type=t},i.prototype.setData=function(t){this.data=t},i.prototype.toBytes=function(){if(!this.type)throw new Error(\"Type for meta-event not specified.\");var t=[];if(t.push.apply(t,this.time),t.push(255,this.type),Array.isArray(this.data))t.push(this.data.length),t.push.apply(t,this.data);else if(\"number\"==typeof this.data)t.push(1,this.data);else if(null!==this.data&&void 0!==this.data){t.push(this.data.length);var e=this.data.split(\"\").map(function(t){return t.charCodeAt(0)});t.push.apply(t,e)}else t.push(0);return t};var a=function(t){if(!this)return new a(t);var e=t||{};this.events=e.events||[]};a.START_BYTES=[77,84,114,107],a.END_BYTES=[0,255,47,0],a.prototype.addEvent=function(t){return this.events.push(t),this},a.prototype.addNoteOn=a.prototype.noteOn=function(t,i,a,o){return this.events.push(new r({type:r.NOTE_ON,channel:t,param1:n.ensureMidiPitch(i),param2:o||e,time:a||0})),this},a.prototype.addNoteOff=a.prototype.noteOff=function(t,i,a,o){return this.events.push(new r({type:r.NOTE_OFF,channel:t,param1:n.ensureMidiPitch(i),param2:o||e,time:a||0})),this},a.prototype.addNote=a.prototype.note=function(t,e,n,r,i){return this.noteOn(t,e,r,i),n&&this.noteOff(t,e,n,i),this},a.prototype.addChord=a.prototype.chord=function(t,e,n,r){if(!Array.isArray(e)&&!e.length)throw new Error(\"Chord must be an array of pitches\");return e.forEach(function(e){this.noteOn(t,e,0,r)},this),e.forEach(function(e,r){0===r?this.noteOff(t,e,n):this.noteOff(t,e)},this),this},a.prototype.setInstrument=a.prototype.instrument=function(t,e,n){return this.events.push(new r({type:r.PROGRAM_CHANGE,channel:t,param1:e,time:n||0})),this},a.prototype.setTempo=a.prototype.tempo=function(t,e){return this.events.push(new i({type:i.TEMPO,data:n.mpqnFromBpm(t),time:e||0})),this},a.prototype.toBytes=function(){var t=0,e=[],r=a.START_BYTES,i=a.END_BYTES,o=function(n){var r=n.toBytes();t+=r.length,e.push.apply(e,r)};this.events.forEach(o),t+=i.length;var s=n.str2Bytes(t.toString(16),4);return r.concat(s,e,i)};var o=function(t){if(!this)return new o(t);var e=t||{};if(e.ticks){if(\"number\"!=typeof e.ticks)throw new Error(\"Ticks per beat must be a number!\");if(e.ticks<=0||e.ticks>=32768||e.ticks%1!=0)throw new Error(\"Ticks per beat must be an integer between 1 and 32767!\")}this.ticks=e.ticks||128,this.tracks=e.tracks||[]};o.HDR_CHUNKID=\"MThd\",o.HDR_CHUNK_SIZE=\"\\0\\0\\0\u0006\",o.HDR_TYPE0=\"\\0\\0\",o.HDR_TYPE1=\"\\0\u0001\",o.prototype.addTrack=function(t){return t?(this.tracks.push(t),this):(t=new a,this.tracks.push(t),t)},o.prototype.toBytes=function(){var t=this.tracks.length.toString(16),e=o.HDR_CHUNKID+o.HDR_CHUNK_SIZE;return parseInt(t,16)>1?e+=o.HDR_TYPE1:e+=o.HDR_TYPE0,e+=n.codes2Str(n.str2Bytes(t,2)),e+=String.fromCharCode(this.ticks/256,this.ticks%256),this.tracks.forEach(function(t){e+=n.codes2Str(t.toBytes())}),e},t.Util=n,t.File=o,t.Track=a,t.Event=r,t.MetaEvent=i}(n),void 0!==t&&null!==t?t.exports=n:void 0!==e&&null!==e?e=n:this.Midi=n}).call(e,n(12)(t))},function(t,e){function n(t){function e(t){var e=t.read(4),n=t.readInt32();return{id:e,length:n,data:t.read(n)}}var n;stream=r(t);var i=e(stream);if(\"MThd\"!=i.id||6!=i.length)throw\"Bad .mid file - header not found\";var a=r(i.data),o=a.readInt16(),s=a.readInt16(),u=a.readInt16();if(32768&u)throw\"Expressing time division in SMTPE frames is not supported yet\";ticksPerBeat=u;for(var c={formatType:o,trackCount:s,ticksPerBeat:ticksPerBeat},h=[],f=0;f<c.trackCount;f++){h[f]=[];var d=e(stream);if(\"MTrk\"!=d.id)throw\"Unexpected chunk - expected MTrk, got \"+d.id;for(var l=r(d.data);!l.eof();){var p=function(t){var e={};e.deltaTime=t.readVarInt();var r=t.readInt8();if(240==(240&r)){if(255==r){e.type=\"meta\";var i=t.readInt8(),a=t.readVarInt();switch(i){case 0:if(e.subtype=\"sequenceNumber\",2!=a)throw\"Expected length for sequenceNumber event is 2, got \"+a;return e.number=t.readInt16(),e;case 1:return e.subtype=\"text\",e.text=t.read(a),e;case 2:return e.subtype=\"copyrightNotice\",e.text=t.read(a),e;case 3:return e.subtype=\"trackName\",e.text=t.read(a),e;case 4:return e.subtype=\"instrumentName\",e.text=t.read(a),e;case 5:return e.subtype=\"lyrics\",e.text=t.read(a),e;case 6:return e.subtype=\"marker\",e.text=t.read(a),e;case 7:return e.subtype=\"cuePoint\",e.text=t.read(a),e;case 32:if(e.subtype=\"midiChannelPrefix\",1!=a)throw\"Expected length for midiChannelPrefix event is 1, got \"+a;return e.channel=t.readInt8(),e;case 47:if(e.subtype=\"endOfTrack\",0!=a)throw\"Expected length for endOfTrack event is 0, got \"+a;return e;case 81:if(e.subtype=\"setTempo\",3!=a)throw\"Expected length for setTempo event is 3, got \"+a;return e.microsecondsPerBeat=(t.readInt8()<<16)+(t.readInt8()<<8)+t.readInt8(),e;case 84:if(e.subtype=\"smpteOffset\",5!=a)throw\"Expected length for smpteOffset event is 5, got \"+a;var o=t.readInt8();return e.frameRate={0:24,32:25,64:29,96:30}[96&o],e.hour=31&o,e.min=t.readInt8(),e.sec=t.readInt8(),e.frame=t.readInt8(),e.subframe=t.readInt8(),e;case 88:if(e.subtype=\"timeSignature\",4!=a)throw\"Expected length for timeSignature event is 4, got \"+a;return e.numerator=t.readInt8(),e.denominator=Math.pow(2,t.readInt8()),e.metronome=t.readInt8(),e.thirtyseconds=t.readInt8(),e;case 89:if(e.subtype=\"keySignature\",2!=a)throw\"Expected length for keySignature event is 2, got \"+a;return e.key=t.readInt8(!0),e.scale=t.readInt8(),e;case 127:return e.subtype=\"sequencerSpecific\",e.data=t.read(a),e;default:return e.subtype=\"unknown\",e.data=t.read(a),e}return e.data=t.read(a),e}if(240==r){e.type=\"sysEx\";var a=t.readVarInt();return e.data=t.read(a),e}if(247==r){e.type=\"dividedSysEx\";var a=t.readVarInt();return e.data=t.read(a),e}throw\"Unrecognised MIDI event type byte: \"+r}var s;0==(128&r)?(s=r,r=n):(s=t.readInt8(),n=r);var u=r>>4;switch(e.channel=15&r,e.type=\"channel\",u){case 8:return e.subtype=\"noteOff\",e.noteNumber=s,e.velocity=t.readInt8(),e;case 9:return e.noteNumber=s,e.velocity=t.readInt8(),0==e.velocity?e.subtype=\"noteOff\":e.subtype=\"noteOn\",e;case 10:return e.subtype=\"noteAftertouch\",e.noteNumber=s,e.amount=t.readInt8(),e;case 11:return e.subtype=\"controller\",e.controllerType=s,e.value=t.readInt8(),e;case 12:return e.subtype=\"programChange\",e.programNumber=s,e;case 13:return e.subtype=\"channelAftertouch\",e.amount=s,e;case 14:return e.subtype=\"pitchBend\",e.value=s+(t.readInt8()<<7),e;default:throw\"Unrecognised MIDI event type: \"+u}}(l);h[f].push(p)}}return{header:c,tracks:h}}function r(t){function e(e){var n=t.substr(s,e);return s+=e,n}function n(){var e=(t.charCodeAt(s)<<24)+(t.charCodeAt(s+1)<<16)+(t.charCodeAt(s+2)<<8)+t.charCodeAt(s+3);return s+=4,e}function r(){var e=(t.charCodeAt(s)<<8)+t.charCodeAt(s+1);return s+=2,e}function i(e){var n=t.charCodeAt(s);return e&&n>127&&(n-=256),s+=1,n}function a(){return s>=t.length}function o(){for(var t=0;;){var e=i();if(!(128&e))return t+e;t+=127&e,t<<=7}}var s=0;return{eof:a,read:e,readInt32:n,readInt16:r,readInt8:i,readVarInt:o}}t.exports=function(t){return n(t)}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\"loaded\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\"id\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}}])});\n//# sourceMappingURL=MidiConvert.js.map"]}