{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/gui.js","js/jon-trombone.js","js/main.js","js/midi/midi-controller.js","js/pink-trombone/components/audio-system.js","js/pink-trombone/components/glottis.js","js/pink-trombone/components/tract-ui.js","js/pink-trombone/components/tract.js","js/pink-trombone/math-extensions.js","js/pink-trombone/noise.js","js/pink-trombone/pink-trombone.js","js/tts/tts-controller.js","js/utils/model-loader.js","js/utils/webgl-detect.js","node_modules/midiconvert/build/MidiConvert.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","GUI","jon","container","guify","console","log","this","panel","title","theme","root","width","barMode","align","opacity","Register","type","label","object","trombone","property","onChange","data","SetMute","min","max","folder","Glottis","step","Tract","TractUI","fileReadFunc","midiController","LoadSongDirect","action","PlaySong","Stop","Restart","gui","_modelLoader","_pinkTrombone","_midiController","_gui","JonTrombone","finishedCallback","_this","_classCallCheck","style","position","cursor","renderer","THREE","WebGLRenderer","alpha","setPixelRatio","window","devicePixelRatio","setSize","offsetWidth","offsetHeight","setClearColor","appendChild","domElement","aspect","camera","PerspectiveCamera","scene","Scene","clock","Clock","PinkTrombone","setTimeout","StartAudio","moveJaw","jawFlapSpeed","jawOpenOffset","legato","flapWhileSinging","MidiController","SetUpThree","SetUpScene","OnUpdate","Init","undefined","OrbitControls","controls","target","set","update","warn","_this2","light1","HemisphereLight","name","add","light2","DirectionalLight","ModelLoader","LoadJSON","rotation","y","Math","degToRad","jaw","skeleton","bones","find","obj","jawShutZ","z","getDelta","requestAnimationFrame","bind","playing","notes","GetPitches","lastNotes","note","freq","MIDIToFrequency","midi","UIFrequency","loudness","velocity","SetLipsClosed","time","getElapsedTime","percent","sin","render","_webglDetect","_jonTrombone","document","getElementById","Detector","HasWebGL","innerHTML","GetErrorHTML","classList","MidiConvert","controller","currentTrack","baseFreq","path","callback","load","file","parse","trackIndex","arguments","GetSongProgress","tracks","item","noteOn","noteOff","filter","track","LoadSong","EnterSingMode","start","midiCode","pow","stop","ExitSingMode","backup_settings","autoWobble","addPitchVariance","addTensenessVariance","vibratoFrequency","AudioSystem","blockLength","blockTime","soundOn","AudioContext","webkitAudioContext","audioContext","sampleRate","scriptProcessor","createScriptProcessor","connect","destination","onaudioprocess","doScriptProcessor","whiteNoise","createWhiteNoiseNode","aspirateFilter","createBiquadFilter","frequency","value","Q","fricativeFilter","frameCount","myArrayBuffer","createBuffer","nowBuffering","getChannelData","random","source","createBufferSource","buffer","loop","event","inputArray1","inputBuffer","inputArray2","outArray","outputBuffer","j","N","lambda1","lambda2","glottalOutput","runStep","vocalOutput","lipOutput","noseOutput","finishBlock","disconnect","_noise","timeInWaveform","oldFrequency","newFrequency","smoothFrequency","oldTenseness","newTenseness","UITenseness","totalTime","vibratoAmount","intensity","isTouched","touch","x","keyboardTop","keyboardLeft","keyboardWidth","keyboardHeight","semitones","marks","baseNote","output","setupWaveform","alive","UI","touchesWithMouse","local_y","local_x","clamp","semitone","cos","PI","lambda","noiseSource","timeStep","waveformLength","out","normalizedLFWaveform","aspiration","sqrt","getNoiseModulator","_noise2","default","simplex1","voiced","vibrato","alwaysVoice","tenseness","Rd","Ra","Rk","Rg","Ta","Tp","Te","epsilon","shift","exp","Delta","RHSIntegral","totalLowerIntegral","totalUpperIntegral","omega","E0","originX","originY","radius","scale","tongueIndex","tongueDiameter","innerTongueControlRadius","outerTongueControlRadius","tongueTouch","angleScale","angleOffset","noseOffset","gridOffset","index","setRestDiameter","diameter","targetDiameter","restDiameter","tongueLowerIndexBound","bladeStart","tongueUpperIndexBound","tipStart","tongueIndexCentre","xx","yy","angle","atan2","lipStart","fixedTongueDiameter","curve","progress","_i","interp","lerp","R","L","reflection","junctionOutputR","junctionOutputL","maxAmplitude","newDiameter","A","glottalReflection","lipReflection","lastObstruction","fade","movementSpeed","transients","velumTarget","floor","Float64Array","newReflection","noseLength","noseStart","noseR","noseL","noseJunctionOutputR","noseJunctionOutputL","noseReflection","noseDiameter","noseA","noseMaxAmplitude","d","newReflectionLeft","newReflectionRight","newReflectionNose","calculateReflections","calculateNoseReflections","deltaTime","amount","newLastObstruction","slowReturn","moveTowards","addTransient","reflectionLeft","reflectionRight","reflectionNose","sum","turbulenceNoise","updateAmplitudes","processTransients","addTurbulenceNoise","w","amplitude","abs","reshapeTract","trans","timeAlive","lifeTime","strength","exponent","push","splice","delta","thinness0","openness","noise0","noise1","number","current","amountUp","amountDown","gaussian","c","b","Grad","Noise","grad3","p","perm","Array","gradP","seed","Date","now","_seed","v","xin","yin","n0","n1","n2","i1","j1","F2","G2","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","dot2","t1","t2","simplex2","singleton","Object","freeze","_audioSystem","_glottis","_tract","_tractUi","noiseFreq","noiseQ","init","muted","startSound","doMute","mute","unmute","TTSController","modelInfo","loadedCallback","onProgress","xhr","lengthComputable","percentComplete","loaded","total","round","onError","mtlLoader","MTLLoader","setPath","mtlFile","materials","preload","objLoader","OBJLoader","setMaterials","objFile","JSONLoader","geometry","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","skinning","err","return","mesh","SkinnedMesh","MultiMaterial","manager","LoadingManager","FBXLoader","WebGLRenderingContext","canvas","createElement","names","context","getContext","getParameter","message","define","amd","id","m","defineProperty","instrumentByPatchID","instrumentFamilyByID","Midi","decode","then","create","replace","bpm","PPQ","test","cbb","cb","c#","cx","dbb","db","d#","dx","ebb","eb","e#","ex","fbb","fb","f#","fx","gbb","gb","g","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","exec","toLowerCase","parseInt","cleanName","ticksToSeconds","isString","isNumber","isPitch","midiToPitch","pitchToMidi","BinaryInsert","TypeError","enumerable","configurable","writable","key","prototype","2","4","5","7","8","10","64","65","66","67","68","84","get","hasOwnProperty","Control","header","ticksPerBeat","subtype","timeSignature","numerator","denominator","microsecondsPerBeat","parseHeader","Uint32Array","Merge","__esModule","h","Promise","XMLHttpRequest","open","responseType","addEventListener","readyState","status","response","send","ArrayBuffer","Uint8Array","String","fromCharCode","apply","forEach","Track","text","noteNumber","controllerType","cc","instrument","patch","programNumber","File","ticks","addTrack","setTempo","encode","toBytes","charCodeAt","duration","map","slice","startTime","Note","controlChanges","instrumentNumber","match","findIndex","noteOns","addNoteOn","noteOffs","addNoteOff","indexOf","DEFAULT_VOLUME","DEFAULT_DURATION","DEFAULT_CHANNEL","midi_letter_pitches","midiPitchFromNote","substr","ensureMidiPitch","midi_pitches_letter","12","13","14","15","16","17","18","19","20","21","22","23","midi_flattened_notes","noteFromMidiPitch","mpqnFromBpm","unshift","bpmFromMpqn","codes2Str","str2Bytes","translateTickTime","channel","param1","setTime","setType","setChannel","setParam1","setParam2","param2","NOTE_OFF","NOTE_ON","AFTER_TOUCH","CONTROLLER","PROGRAM_CHANGE","CHANNEL_AFTERTOUCH","PITCH_BEND","setData","SEQUENCE","TEXT","COPYRIGHT","TRACK_NAME","INSTRUMENT","LYRIC","MARKER","CUE_POINT","CHANNEL_PREFIX","END_OF_TRACK","TEMPO","SMPTE","TIME_SIG","KEY_SIG","SEQ_EVENT","isArray","split","events","START_BYTES","END_BYTES","addEvent","addNote","addChord","chord","setInstrument","tempo","toString","concat","HDR_CHUNKID","HDR_CHUNK_SIZE","HDR_TYPE0","HDR_TYPE1","Util","Event","MetaEvent","read","readInt32","stream","readInt16","formatType","trackCount","eof","readVarInt","readInt8","frameRate","0","32","96","hour","sec","frame","subframe","metronome","thirtyseconds","webpackPolyfill","deprecate","paths","children"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,wZCAMK,2EAEGC,EAAKC,GAEN,IAAIC,MAEA,WADAC,SAAQC,IAAI,6EAIhBC,MAAKC,MAAQ,GAAIJ,OAAMH,KACnBQ,MAAO,eACPC,MAAO,OACPC,KAAMR,EACNS,MAAO,MACPC,QAAS,QACTC,MAAO,QACPC,QAAS,SAGbR,KAAKC,MAAMQ,UACPC,KAAM,WAAYC,MAAO,OACzBC,OAAQjB,EAAIkB,SAAUC,SAAU,QAChCC,SAAU,SAACC,GACPrB,EAAIkB,SAASI,QAAQD,MAK7BhB,KAAKC,MAAMQ,UAAWC,KAAM,SAAUC,MAAO,QAC7CX,KAAKC,MAAMQ,WACLC,KAAM,WAAYC,MAAO,WAAYC,OAAQjB,EAAKmB,SAAU,YAC5DJ,KAAM,QAASC,MAAO,YAAaC,OAAQjB,EAAKmB,SAAU,eAAgBI,IAAK,EAAGC,IAAK,MACvFT,KAAM,QAASC,MAAO,YAAaC,OAAQjB,EAAKmB,SAAU,gBAAiBI,IAAK,EAAGC,IAAK,KACzFC,OAAQ,QAGbpB,KAAKC,MAAMQ,UAAWC,KAAM,SAAUC,MAAO,UAC7CX,KAAKC,MAAMQ,WACLC,KAAM,WAAYC,MAAO,SAAUC,OAAQjB,EAAIkB,SAAUC,SAAU,eACnEJ,KAAM,WAAYC,MAAO,iBAAkBC,OAAQjB,EAAIkB,SAASQ,QAASP,SAAU,qBACnFJ,KAAM,WAAYC,MAAO,qBAAsBC,OAAQjB,EAAIkB,SAASQ,QAASP,SAAU,yBACvFJ,KAAM,QAASC,MAAO,YAAaC,OAAQjB,EAAIkB,SAASQ,QAASP,SAAU,cAAeI,IAAK,EAAGC,IAAK,IACvGT,KAAM,QAASC,MAAO,UAAWC,OAAQjB,EAAIkB,SAASQ,QAASP,SAAU,gBAAiBI,IAAK,EAAGC,IAAK,KACvGT,KAAM,QAASC,MAAO,YAAaC,OAAQjB,EAAIkB,SAASQ,QAASP,SAAU,cAAeI,IAAK,EAAGC,IAAK,IAAMG,KAAM,IACnHZ,KAAM,QAASC,MAAO,WAAYC,OAAQjB,EAAIkB,SAASQ,QAASP,SAAU,WAAYI,IAAK,EAAGC,IAAK,KACpGC,OAAQ,UAGbpB,KAAKC,MAAMQ,UAAWC,KAAM,SAAUC,MAAO,UAC7CX,KAAKC,MAAMQ,WACLC,KAAM,QAASC,MAAO,aAAcC,OAAQjB,EAAIkB,SAASU,MAAOT,SAAU,gBAAiBI,IAAK,EAAGC,IAAK,GAAIG,KAAM,IAClHZ,KAAM,QAASC,MAAO,eAAgBC,OAAQjB,EAAIkB,SAASU,MAAOT,SAAU,cAAeI,IAAK,KAAOC,IAAK,IAC5GT,KAAM,QAASC,MAAO,SAAUC,OAAQjB,EAAIkB,SAASW,QAASV,SAAU,SAAUI,IAAK,KAAOC,IAAK,IACnGT,KAAM,QAASC,MAAO,QAASC,OAAQjB,EAAIkB,SAASW,QAASV,SAAU,QAASI,IAAK,EAAGC,IAAK,GAAIG,KAAM,IACvGZ,KAAM,QAASC,MAAO,SAAUC,OAAQjB,EAAIkB,SAASW,QAASV,SAAU,SAAUI,IAAK,EAAGC,IAAK,EAAGG,KAAM,KACzGF,OAAQ,UAGbpB,KAAKC,MAAMQ,UAAWC,KAAM,SAAUC,MAAO,SAC7CX,KAAKC,MAAMQ,WACLC,KAAM,OAAQC,MAAO,YAAac,aAAc,qBAC9CV,SAAU,SAACC,GACPrB,EAAI+B,eAAeC,eAAeX,MAGxCN,KAAM,QAASC,MAAO,aACtBD,KAAM,SAAUC,MAAO,OAAQiB,OAAQ,WAAA,MAAMjC,GAAI+B,eAAeG,cAChEnB,KAAM,SAAUC,MAAO,OAAQiB,OAAQ,WAAA,MAAMjC,GAAI+B,eAAeI,UAChEpB,KAAM,SAAUC,MAAO,UAAWiB,OAAQ,WAAA,MAAMjC,GAAI+B,eAAeK,aACnErB,KAAM,QAASC,MAAO,YACtBD,KAAM,QAASC,MAAO,QAASC,OAAQjB,EAAI+B,eAAgBZ,SAAU,eAAgBI,IAAK,EAAGC,IAAK,GAAIG,KAAM,IAC5GZ,KAAM,QAASC,MAAO,iBAAkBC,OAAQjB,EAAI+B,eAAgBZ,SAAU,WAAYI,IAAK,EAAGC,IAAK,IAAMG,KAAM,IACnHZ,KAAM,WAAYC,MAAO,kBAAmBC,OAAQjB,EAAKmB,SAAU,qBACnEJ,KAAM,WAAYC,MAAO,SAAUC,OAAQjB,EAAKmB,SAAU,YAC3DM,OAAQ,iBAMV/B,GAAA2C,IAAM,GAAItC,qcChFrBuC,EAAAlD,EAAA,2BACAmD,EAAAnD,EAAA,oCACAoD,EAAApD,EAAA,6BAEAqD,GADArD,EAAA,2BACAA,EAAA,aAEMsD,aAEF,QAAAA,GAAYzC,EAAW0C,GAAkB,GAAAC,GAAAvC,IAAAwC,GAAAxC,KAAAqC,GACrCrC,KAAKJ,UAAYA,EACjBI,KAAKJ,UAAU6C,MAAMC,SAAW,WAChC1C,KAAKJ,UAAU6C,MAAME,OAAS,UAG9B3C,KAAK4C,SAAW,GAAIC,OAAMC,eAAiBC,OAAO,IAClD/C,KAAK4C,SAASI,cAAcC,OAAOC,kBACnClD,KAAK4C,SAASO,QAAQnD,KAAKJ,UAAUwD,YAAapD,KAAKJ,UAAUyD,cACjErD,KAAK4C,SAASU,cAAc,EAAU,GACtCtD,KAAKJ,UAAU2D,YAAYvD,KAAK4C,SAASY,WAGzC,IAAIC,GAASzD,KAAKJ,UAAUwD,YAAcpD,KAAKJ,UAAUyD,YACzDrD,MAAK0D,OAAS,GAAIb,OAAMc,kBAAmB,GAAIF,EAAQ,GAAK,KAC5DzD,KAAK4D,MAAQ,GAAIf,OAAMgB,MAMvB7D,KAAK8D,MAAQ,GAAIjB,OAAMkB,KAGvB/D,MAAKa,SAAW,GAAAqB,GAAA8B,aAAiBhE,MACjCiE,WAAW,WACP1B,EAAK1B,SAASqD,aAEd3B,EAAK4B,SAAU,GALA,KAkBnBnE,KAAKoE,aAAe,GACpBpE,KAAKqE,cAAgB,IACrBrE,KAAKmE,SAAU,EACfnE,KAAKsE,QAAS,EACdtE,KAAKuE,kBAAmB,EAExBvE,KAAK0B,eAAiB,GAAAS,GAAAqC,eAAmBxE,MAKzCA,KAAKyE,aACLzE,KAAK0E,aAGL1E,KAAK2E,WAELvC,EAAAJ,IAAI4C,KAAK5E,KAAMA,KAAKJ,8DAOOiF,KAAxBhC,MAAMiC,eAEL9E,KAAK+E,SAAW,GAAIlC,OAAMiC,cAAe9E,KAAK0D,OAAQ1D,KAAK4C,SAASY,YACpExD,KAAK+E,SAASC,OAAOC,IAAK,EAAG,EAAG,GAChCjF,KAAK+E,SAASG,UAEdpF,QAAQqF,KAAK,sHAOR,GAAAC,GAAApF,IAGTA,MAAK0D,OAAOhB,SAASuC,IAAK,EAAG,EAAG,GAGhC,IAAII,GAAS,GAAIxC,OAAMyC,gBAAgB,SAAU,QAAU,EAC3DD,GAAOE,KAAO,mBACdF,EAAO3C,SAASuC,IAAI,EAAG,EAAG,GAC1BjF,KAAK4D,MAAM4B,IAAIH,EAEf,IAAII,GAAS,GAAI5C,OAAM6C,iBAAiB,SAAU,EAClDD,GAAOF,KAAO,oBACdE,EAAO/C,SAASuC,IAAI,EAAG,EAAG,GAC1BjF,KAAK4D,MAAM4B,IAAIC,GAGfxD,EAAA0D,YAAYC,SAAS,kCAAmC,SAAChF,GACrDwE,EAAKzF,IAAMiB,EACXwE,EAAKxB,MAAM4B,IAAKJ,EAAKzF,KACrByF,EAAKzF,IAAIkG,SAASC,EAAKjD,MAAMkD,KAAKC,SAAS,IAE3CZ,EAAKa,IAAMb,EAAKzF,IAAIuG,SAASC,MAAMC,KAAK,SAACC,GACrC,MAAmB,YAAZA,EAAId,OAEZH,EAAKa,MACJb,EAAKkB,SAAWlB,EAAKa,IAAIvD,SAAS6D,wCAW1BvG,KAAK8D,MAAM0C,UAG3B,IAFAC,sBAAuBzG,KAAK2E,SAAS+B,KAAK1G,OAEvCA,KAAK0B,eAAeiF,UAEnB3G,KAAK4G,MAAQ5G,KAAK0B,eAAemF,aAC9B7G,KAAK4G,OAAS5G,KAAK8G,WAAU,CAE5B,OAAkBjC,KAAf7E,KAAK4G,OAA4C,GAArB5G,KAAK4G,MAAMrH,OAAY,CAGlD,GAAIwH,GAAO/G,KAAK4G,MAAM,EACnB5G,MAAK4G,MAAMrH,MAGd,IAAIyH,GAAOhH,KAAK0B,eAAeuF,gBAAgBF,EAAKG,KAEpDlH,MAAKa,SAASQ,QAAQ8F,YAAcH,EACpChH,KAAKa,SAASQ,QAAQ+F,SAAWL,EAAKM,SAEtCrH,KAAKiG,IAAIvD,SAAS6D,EAAIvG,KAAKsG,SAAWtG,KAAKqE,cAC3CrE,KAAKa,SAASW,QAAQ8F,cAAc,OAI/BtH,MAAKsE,SAAQtE,KAAKa,SAASQ,QAAQ+F,SAAW,GAEnDpH,KAAKiG,IAAIvD,SAAS6D,EAAIvG,KAAKsG,SAC3BtG,KAAKa,SAASW,QAAQ8F,cAAc,EAIxCtH,MAAK8G,UAAY9G,KAAK4G,MAK9B,GAAG5G,KAAKiG,KAAOjG,KAAKmE,WAAanE,KAAK0B,eAAeiF,SAAW3G,KAAKuE,kBAAkB,CACnF,GAAIgD,GAAOvH,KAAK8D,MAAM0D,iBAGlBC,GAAW1B,KAAK2B,IAAIH,EAAOvH,KAAKoE,cAAgB,GAAO,CAC3DpE,MAAKiG,IAAIvD,SAAS6D,EAAIvG,KAAKsG,SAAYmB,EAAUzH,KAAKqE,cAGtDrE,KAAKa,SAASW,QAAQ8F,cAAc,EAAMG,GAK9CzH,KAAK4C,SAAS+E,OAAO3H,KAAK4D,MAAO5D,KAAK0D,mBAMrCrB,YAAAA,gLCnLT,IAAAuF,GAAA7I,EAAA,2BACA8I,EAAA9I,EAAA,qBAMIa,EAAYkI,SAASC,eAAe,yBAExC,IAAMH,EAAAI,SAASC,WAOX,CAAkB,GAAAJ,GAAAxF,YAAgBzC,OALlCE,SAAQC,IAAI,2CACZH,EAAUsI,UAAYN,EAAAI,SAASG,eAC/BvI,EAAUwI,UAAU5C,IAAI,2eCbxB6C,EAActJ,EAAQ,eAapByF,aAEF,QAAAA,GAAY8D,GAAY9F,EAAAxC,KAAAwE,GACpBxE,KAAKsI,WAAaA,EAElBtI,KAAKkH,KAAO,KAEZlH,KAAK2G,SAAU,EACf3G,KAAKuI,aAAe,EAEpBvI,KAAKwI,SAAW,IAEhBxI,KAAK8D,MAAQ,GAAIjB,OAAMkB,OAAM,8CAMxB0E,EAAMC,GAAS,GAAAnG,GAAAvC,IACpBA,MAAK8B,OACL9B,KAAKkH,KAAO,KACZmB,EAAYM,KAAKF,EAAM,SAACvB,GACpBpH,QAAQC,IAAI,gBACZwC,EAAK2E,KAAOA,EACZpH,QAAQC,IAAIwC,EAAK2E,MACdwB,GAAUA,EAASxB,4CAIf0B,GACX5I,KAAK8B,OACL9B,KAAKkH,KAAOmB,EAAYQ,MAAMD,GAC9B9I,QAAQC,IAAI,gBACZD,QAAQC,IAAIC,KAAKkH,yCAMmB,GAA/B4B,GAA+BC,UAAAxJ,OAAA,OAAAsF,KAAAkE,UAAA,GAAAA,UAAA,GAAlB/I,KAAKuI,aACnBhB,EAAOvH,KAAKgJ,iBAMhB,OAHAF,GAAa/C,KAAK7E,IAAI4H,EAAY9I,KAAKkH,KAAK+B,OAAO1J,OAAS,GAC5DuJ,EAAa/C,KAAK5E,IAAI2H,EAAY,GAE3B9I,KAAKkH,KAAK+B,OAAOH,GAAYlC,MAAMR,KAAK,SAAC8C,GAC5C,MAAOA,GAAKC,QAAU5B,GAAQA,GAAQ2B,EAAKE,+CAIT,GAA/BN,GAA+BC,UAAAxJ,OAAA,OAAAsF,KAAAkE,UAAA,GAAAA,UAAA,GAAlB/I,KAAKuI,aACrBhB,EAAOvH,KAAKgJ,iBAMhB,OAHAF,GAAa/C,KAAK7E,IAAI4H,EAAY9I,KAAKkH,KAAK+B,OAAO1J,OAAS,GAC5DuJ,EAAa/C,KAAK5E,IAAI2H,EAAY,GAE3B9I,KAAKkH,KAAK+B,OAAOH,GAAYlC,MAAMyC,OAAO,SAAAH,GAAA,MAC7CA,GAAKC,QAAU5B,GAAQA,GAAQ2B,EAAKE,6CAGzB,GAAAhE,GAAApF,KAAVsJ,EAAUP,UAAAxJ,OAAA,OAAAsF,KAAAkE,UAAA,GAAAA,UAAA,GAAF,CACb,KAAG/I,KAAK2G,QAAR,CAKA,IAAI3G,KAAKkH,KAKL,MAJApH,SAAQC,IAAI,gDACZC,MAAKuJ,SAAS,wCAAyC,WACnDnE,EAAKvD,YAMb7B,MAAKwJ,gBAELxJ,KAAKuI,aAAee,EACpBtJ,KAAK8D,MAAM2F,QACXzJ,KAAK2G,SAAU,EAEf7G,QAAQC,IAAI,gEAKZ,MAAOC,MAAK8D,MAAM0D,yDAONkC,GACZ,MAAO1J,MAAKwI,SAAWzC,KAAK4D,IAAI,GAAID,EAAW,IAAM,sCAOrD5J,QAAQC,IAAI,gCACZC,KAAK8D,MAAQ,GAAIjB,OAAMkB,qCAOnB/D,KAAK2G,UAGT7G,QAAQC,IAAI,qBACZC,KAAK8D,MAAM8F,OACX5J,KAAK2G,SAAU,EACf3G,KAAK6J,wDAOF7J,KAAK8J,kBAIR9J,KAAK8J,mBAEL9J,KAAK8J,gBAAL,WAAqC9J,KAAKsI,WAAWzH,SAASkJ,WAC9D/J,KAAKsI,WAAWzH,SAASkJ,YAAa,EAEtC/J,KAAK8J,gBAAL,iBAA2C9J,KAAKsI,WAAWzH,SAASQ,QAAQ2I,iBAC5EhK,KAAKsI,WAAWzH,SAASQ,QAAQ2I,kBAAmB,EAEpDhK,KAAK8J,gBAAL,qBAA+C9J,KAAKsI,WAAWzH,SAASQ,QAAQ4I,qBAChFjK,KAAKsI,WAAWzH,SAASQ,QAAQ4I,sBAAuB,EAExDjK,KAAK8J,gBAAL,iBAA2C9J,KAAKsI,WAAWzH,SAASQ,QAAQ6I,iBAC5ElK,KAAKsI,WAAWzH,SAASQ,QAAQ6I,iBAAmB,EAEpDlK,KAAK8J,gBAAL,UAAoC9J,KAAKsI,WAAWzH,SAASQ,QAAQ8F,YAErEnH,KAAK8J,gBAAL,SAAmC9J,KAAKsI,WAAWzH,SAASQ,QAAQ+F,iDAOhEpH,KAAK8J,kBAIT9J,KAAKsI,WAAWzH,SAASkJ,WAAa/J,KAAK8J,gBAAL,WACtC9J,KAAKsI,WAAWzH,SAASQ,QAAQ2I,iBAAmBhK,KAAK8J,gBAAL,iBACpD9J,KAAKsI,WAAWzH,SAASQ,QAAQ4I,qBAAuBjK,KAAK8J,gBAAL,qBACxD9J,KAAKsI,WAAWzH,SAASQ,QAAQ6I,iBAAmBlK,KAAK8J,gBAAL,iBACpD9J,KAAKsI,WAAWzH,SAASQ,QAAQ8F,YAAcnH,KAAK8J,gBAAL,UAC/C9J,KAAKsI,WAAWzH,SAASQ,QAAQ+F,SAAWpH,KAAK8J,gBAAL,SAE5C9J,KAAK8J,gBAAkB,iBAKtBtF,eAAAA,4YCpLH2F,aAEF,QAAAA,GAAYtJ,GAAU2B,EAAAxC,KAAAmK,GAClBnK,KAAKa,SAAWA,EAEhBb,KAAKoK,YAAc,IACnBpK,KAAKqK,UAAY,EACjBrK,KAAKsK,SAAU,2CAKfrH,OAAOsH,aAAetH,OAAOsH,cAActH,OAAOuH,mBAClDxK,KAAKyK,aAAe,GAAIxH,QAAOsH,aAC/BvK,KAAKa,SAAS6J,WAAa1K,KAAKyK,aAAaC,WAE7C1K,KAAKqK,UAAYrK,KAAKoK,YAAYpK,KAAKa,SAAS6J,gDAKhD1K,KAAK2K,gBAAkB3K,KAAKyK,aAAaG,sBAAsB5K,KAAKoK,YAAa,EAAG,GACpFpK,KAAK2K,gBAAgBE,QAAQ7K,KAAKyK,aAAaK,aAC/C9K,KAAK2K,gBAAgBI,eAAiB/K,KAAKgL,kBAAkBtE,KAAK1G,KAElE,IAAIiL,GAAajL,KAAKkL,qBAAqB,EAAIlL,KAAKa,SAAS6J,YAEzDS,EAAiBnL,KAAKyK,aAAaW,oBACvCD,GAAezK,KAAO,WACtByK,EAAeE,UAAUC,MAAQ,IACjCH,EAAeI,EAAED,MAAQ,GACzBL,EAAWJ,QAAQM,GACnBA,EAAeN,QAAQ7K,KAAK2K,gBAE5B,IAAIa,GAAkBxL,KAAKyK,aAAaW,oBACxCI,GAAgB9K,KAAO,WACvB8K,EAAgBH,UAAUC,MAAQ,IAClCE,EAAgBD,EAAED,MAAQ,GAC1BL,EAAWJ,QAAQW,GACnBA,EAAgBX,QAAQ7K,KAAK2K,iBAE7BM,EAAWxB,MAAM,gDAQAgC,GAIjB,IAAK,GAHDC,GAAgB1L,KAAKyK,aAAakB,aAAa,EAAGF,EAAYzL,KAAKa,SAAS6J,YAE5EkB,EAAeF,EAAcG,eAAe,GACvC7M,EAAI,EAAGA,EAAIyM,EAAYzM,IAE5B4M,EAAa5M,GAAK+G,KAAK+F,QAG3B,IAAIC,GAAS/L,KAAKyK,aAAauB,oBAI/B,OAHAD,GAAOE,OAASP,EAChBK,EAAOG,MAAO,EAEPH,4CAgBOI,GAId,IAAK,GAHDC,GAAcD,EAAME,YAAYR,eAAe,GAC/CS,EAAcH,EAAME,YAAYR,eAAe,GAC/CU,EAAWJ,EAAMK,aAAaX,eAAe,GACxCY,EAAI,EAAGC,EAAIH,EAAShN,OAAQkN,EAAIC,EAAGD,IAC5C,CACI,GAAIE,GAAUF,EAAEC,EACZE,GAAWH,EAAE,IAAKC,EAClBG,EAAgB7M,KAAKa,SAASQ,QAAQyL,QAAQH,EAASP,EAAYK,IAEnEM,EAAc,CAElB/M,MAAKa,SAASU,MAAMuL,QAAQD,EAAeP,EAAYG,GAAIE,GAC3DI,GAAe/M,KAAKa,SAASU,MAAMyL,UAAYhN,KAAKa,SAASU,MAAM0L,WACnEjN,KAAKa,SAASU,MAAMuL,QAAQD,EAAeP,EAAYG,GAAIG,GAC3DG,GAAe/M,KAAKa,SAASU,MAAMyL,UAAYhN,KAAKa,SAASU,MAAM0L,WACnEV,EAASE,GAAmB,KAAdM,EAUlB/M,KAAKa,SAASQ,QAAQ6L,cACtBlN,KAAKa,SAASU,MAAM2L,6CAIpBlN,KAAK2K,gBAAgBwC,8CAIrBnN,KAAK2K,gBAAgBE,QAAQ7K,KAAKyK,aAAaK,qBAKvDzL,GAAQ8K,YAAcA,gcCtHtBiD,EAAArO,EAAA,sEAEMsC,aAEF,QAAAA,GAAYR,GAAU2B,EAAAxC,KAAAqB,GAClBrB,KAAKa,SAAWA,EAEhBb,KAAKqN,eAAiB,EACtBrN,KAAKsN,aAAe,IACpBtN,KAAKuN,aAAe,IACpBvN,KAAKmH,YAAc,IACnBnH,KAAKwN,gBAAkB,IACvBxN,KAAKyN,aAAe,GACpBzN,KAAK0N,aAAe,GACpB1N,KAAK2N,YAAc,GACnB3N,KAAK4N,UAAY,EACjB5N,KAAK6N,cAAgB,KACrB7N,KAAKkK,iBAAmB,EACxBlK,KAAK8N,UAAY,EACjB9N,KAAKoH,SAAW,EAChBpH,KAAK+N,WAAY,EACjB/N,KAAKgO,MAAQ,EACbhO,KAAKiO,EAAI,IACTjO,KAAK8F,EAAI,IAET9F,KAAKkO,YAAc,IACnBlO,KAAKmO,aAAe,EACpBnO,KAAKoO,cAAgB,IACrBpO,KAAKqO,eAAiB,IACtBrO,KAAKsO,UAAY,GACjBtO,KAAKuO,OAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDvO,KAAKwO,SAAW,QAEhBxO,KAAKyO,OAGLzO,KAAKgK,kBAAmB,EAExBhK,KAAKiK,sBAAuB,2CAK5BjK,KAAK0O,cAAc,2CAMnB,GAFkB,GAAd1O,KAAKgO,OAAehO,KAAKgO,MAAMW,QAAO3O,KAAKgO,MAAQ,GAErC,GAAdhO,KAAKgO,MAEL,IAAK,GAAIvB,GAAE,EAAGA,EAAEmC,GAAGC,iBAAiBtP,OAAQkN,IAC5C,CACI,GAAIuB,GAAQY,GAAGC,iBAAiBpC,EAC3BuB,GAAMW,QACPX,EAAMlI,EAAE9F,KAAKkO,cACjBlO,KAAKgO,MAAQA,IAIrB,GAAkB,GAAdhO,KAAKgO,MACT,CACI,GAAIc,GAAU9O,KAAKgO,MAAMlI,EAAK9F,KAAKkO,YAAY,GAC3Ca,EAAU/O,KAAKgO,MAAMC,EAAIjO,KAAKmO,YAClCW,GAAU/I,KAAKiJ,MAAMF,EAAS,EAAG9O,KAAKqO,eAAe,GACrD,IAAIY,GAAWjP,KAAKsO,UAAYS,EAAU/O,KAAKoO,cAAgB,EAC/D/M,GAAQ8F,YAAcnH,KAAKwO,SAAWzI,KAAK4D,IAAI,EAAGsF,EAAS,IAClC,GAArB5N,EAAQyM,YAAgBzM,EAAQmM,gBAAkBnM,EAAQ8F,YAE9D,IAAI3I,GAAIuH,KAAKiJ,MAAM,EAAEF,GAAW9O,KAAKqO,eAAe,IAAK,EAAG,EAC5DhN,GAAQsM,YAAc,EAAE5H,KAAKmJ,IAAI1Q,EAAEuH,KAAKoJ,GAAG,IAC3C9N,EAAQ+F,SAAWrB,KAAK4D,IAAItI,EAAQsM,YAAa,KACjD3N,KAAKiO,EAAIjO,KAAKgO,MAAMC,EACpBjO,KAAK8F,EAAIgJ,EAAU9O,KAAKkO,YAAY,GAExC7M,EAAQ0M,UAA2B,GAAd/N,KAAKgO,sCAGtBoB,EAAQC,GACZ,GAAIC,GAAW,EAAMtP,KAAKa,SAAS6J,UACnC1K,MAAKqN,gBAAkBiC,EACvBtP,KAAK4N,WAAa0B,EACdtP,KAAKqN,eAAiBrN,KAAKuP,iBAE3BvP,KAAKqN,gBAAkBrN,KAAKuP,eAC5BvP,KAAK0O,cAAcU,GAEvB,IAAII,GAAMxP,KAAKyP,qBAAqBzP,KAAKqN,eAAerN,KAAKuP,gBACzDG,EAAa1P,KAAK8N,WAAW,EAAI/H,KAAK4J,KAAK3P,KAAK2N,cAAc3N,KAAK4P,oBAAoBP,CAG3F,OAFAK,IAAc,GAAM,IAAOG,EAAAC,QAAMC,SAA0B,KAAjB/P,KAAK4N,WAC/C4B,GAAOE,8CAKP,GAAIM,GAAS,GAAI,GAAIjK,KAAK5E,IAAI,EAAE4E,KAAK2B,IAAY,EAAR3B,KAAKoJ,GAAKnP,KAAKqN,eAAerN,KAAKuP,gBAE5E,OAAOvP,MAAK2N,YAAa3N,KAAK8N,UAAYkC,EAAiD,IAAvC,EAAEhQ,KAAK2N,YAAa3N,KAAK8N,iDAI7E,GAAImC,GAAU,CACVjQ,MAAKgK,mBAELiG,GAAWjQ,KAAK6N,cAAgB9H,KAAK2B,IAAI,EAAE3B,KAAKoJ,GAAKnP,KAAK4N,UAAW5N,KAAKkK,kBAC1E+F,GAAW,IAAOJ,EAAAC,QAAMC,SAA0B,KAAjB/P,KAAK4N,WACtCqC,GAAW,IAAOJ,EAAAC,QAAMC,SAA0B,KAAjB/P,KAAK4N,YAGtC5N,KAAKa,SAASkJ,aAEdkG,GAAW,GAAMJ,EAAAC,QAAMC,SAA0B,IAAjB/P,KAAK4N,WACrCqC,GAAW,GAAMJ,EAAAC,QAAMC,SAA0B,GAAjB/P,KAAK4N,YAGrC5N,KAAKmH,YAAYnH,KAAKwN,kBACtBxN,KAAKwN,gBAAkBzH,KAAK7E,IAA2B,IAAvBlB,KAAKwN,gBAAuBxN,KAAKmH,cACjEnH,KAAKmH,YAAYnH,KAAKwN,kBACtBxN,KAAKwN,gBAAkBzH,KAAK5E,IAAInB,KAAKwN,gBAAkB,IAAKxN,KAAKmH,cACrEnH,KAAKsN,aAAetN,KAAKuN,aACzBvN,KAAKuN,aAAevN,KAAKwN,iBAAmB,EAAEyC,GAC9CjQ,KAAKyN,aAAezN,KAAK0N,aAErB1N,KAAKiK,qBACLjK,KAAK0N,aAAe1N,KAAK2N,YAAc,GAAIkC,EAAAC,QAAMC,SAAwB,IAAf/P,KAAK4N,WAAgB,IAAKiC,EAAAC,QAAMC,SAAwB,IAAf/P,KAAK4N,WAExG5N,KAAK0N,aAAe1N,KAAK2N,aAExB3N,KAAK+N,WAAa/N,KAAKa,SAASqP,cAAalQ,KAAK0N,eAAiB,EAAE1N,KAAK2N,cAAc,EAAE3N,KAAK8N,aAEhG9N,KAAK+N,WAAa/N,KAAKa,SAASqP,eAChClQ,KAAK8N,WAAa,KACtB9N,KAAK8N,UAAY/H,KAAKiJ,MAAMhP,KAAK8N,UAAW,EAAG,yCAGrCsB,GACVpP,KAAKqL,UAAYrL,KAAKsN,cAAc,EAAE8B,GAAUpP,KAAKuN,aAAa6B,CAClE,IAAIe,GAAYnQ,KAAKyN,cAAc,EAAE2B,GAAUpP,KAAK0N,aAAa0B,CACjEpP,MAAKoQ,GAAK,GAAG,EAAED,GACfnQ,KAAKuP,eAAiB,EAAIvP,KAAKqL,SAE/B,IAAI+E,GAAKpQ,KAAKoQ,EACVA,GAAG,KAAKA,EAAK,IACbA,EAAG,MAAKA,EAAK,IAEjB,IAAIC,GAAa,KAAMD,EAAb,IACNE,EAAK,KAAQ,KAAMF,EACnBG,EAAMD,EAAG,GAAI,GAAI,IAAIA,IAAK,IAAKF,EAAGC,GAAI,GAAI,IAAIC,IAE9CE,EAAKH,EACLI,EAAK,GAAK,EAAEF,GACZG,EAAKD,EAAKA,EAAGH,EAEbK,EAAU,EAAEH,EACZI,EAAQ7K,KAAK8K,KAAKF,GAAW,EAAED,IAC/BI,EAAQ,EAAIF,EAEZG,EAAe,EAAEJ,GAAUC,EAAQ,IAAM,EAAEF,GAAIE,CACnDG,IAA0BD,CAE1B,IAAIE,KAAwBN,EAAGD,GAAI,EAAIM,EACnCE,GAAsBD,EAEtBE,EAAQnL,KAAKoJ,GAAGsB,EAChB9R,EAAIoH,KAAK2B,IAAIwJ,EAAMR,GACnB5K,GAAKC,KAAKoJ,GAAGxQ,EAAEsS,GAAyB,EAAHR,GACrClK,EAAIR,KAAKhG,IAAI+F,GACb/C,EAAQwD,GAAGkK,EAAG,EAAIC,GAClBS,GAAM,GAAKxS,EAAEoH,KAAK8K,IAAI9N,EAAM2N,GAChC1Q,MAAK+C,MAAQA,EACb/C,KAAKmR,GAAKA,EACVnR,KAAK2Q,QAAUA,EACf3Q,KAAK4Q,MAAQA,EACb5Q,KAAK8Q,MAAQA,EACb9Q,KAAK0Q,GAAGA,EACR1Q,KAAKkR,MAAQA,+CAII1S,GAIjB,MAHIA,GAAEwB,KAAK0Q,GAAI1Q,KAAKyO,SAAW1I,KAAK8K,KAAK7Q,KAAK2Q,SAAWnS,EAAEwB,KAAK0Q,KAAO1Q,KAAK4Q,OAAO5Q,KAAK8Q,MACnF9Q,KAAKyO,OAASzO,KAAKmR,GAAKpL,KAAK8K,IAAI7Q,KAAK+C,MAAMvE,GAAKuH,KAAK2B,IAAI1H,KAAKkR,MAAQ1S,GAErEwB,KAAKyO,OAASzO,KAAK8N,UAAY9N,KAAKoH,oBAI1C/F,QAAAA,+bC3LHG,aAGF,QAAAA,GAAYX,GAAU2B,EAAAxC,KAAAwB,GAClBxB,KAAKa,SAAWA,EAEhBb,KAAKoR,QAAU,IACfpR,KAAKqR,QAAU,IACfrR,KAAKsR,OAAS,IACdtR,KAAKuR,MAAQ,GACbvR,KAAKwR,YAAc,KACnBxR,KAAKyR,eAAiB,KACtBzR,KAAK0R,yBAA2B,KAChC1R,KAAK2R,yBAA2B,IAChC3R,KAAK4R,YAAc,EACnB5R,KAAK6R,WAAa,IAClB7R,KAAK8R,aAAe,IACpB9R,KAAK+R,WAAa,GAClB/R,KAAKgS,WAAa,IAGlBhS,KAAKgF,OAAS,GAEdhF,KAAKiS,MAAQ,GAEbjS,KAAKsR,OAAS,2CAId,GAAI/P,GAAQvB,KAAKa,SAASU,KAE1BvB,MAAKkS,iBACL,KAAK,GAAIlT,GAAE,EAAGA,EAAEuC,EAAM9C,EAAGO,IAErBuC,EAAM4Q,SAASnT,GAAKuC,EAAM6Q,eAAepT,GAAKuC,EAAM8Q,aAAarT,EAGrEgB,MAAKsS,sBAAwB/Q,EAAMgR,WAAW,EAC9CvS,KAAKwS,sBAAwBjR,EAAMkR,SAAS,EAC5CzS,KAAK0S,kBAAoB,IAAK1S,KAAKsS,sBAAsBtS,KAAKwS,wDAGzDvE,EAAEnI,GAKP,IAJA,GAAIvE,GAAQvB,KAAKa,SAASU,MAEtBoR,EAAK1E,EAAEjO,KAAKoR,QAAawB,EAAK9M,EAAE9F,KAAKqR,QACrCwB,EAAQ9M,KAAK+M,MAAMF,EAAID,GACpBE,EAAO,GAAGA,GAAS,EAAE9M,KAAKoJ,EACjC,QAAQpJ,KAAKoJ,GAAK0D,EAAQ7S,KAAK8R,cAAcvQ,EAAMwR,SAAS,IAAM/S,KAAK6R,WAAW9L,KAAKoJ,wCAG/ElB,EAAEnI,GACV,GAAI6M,GAAK1E,EAAEjO,KAAKoR,QAAawB,EAAK9M,EAAE9F,KAAKqR,OACzC,QAAQrR,KAAKsR,OAAOvL,KAAK4J,KAAKgD,EAAGA,EAAKC,EAAGA,IAAK5S,KAAKuR,gDAMnD,IAAK,GAFDhQ,GAAQvB,KAAKa,SAASU,MAEjBvC,EAAEuC,EAAMgR,WAAYvT,EAAEuC,EAAMwR,SAAU/T,IAC/C,CACI,GAAIR,GAAI,IAAMuH,KAAKoJ,IAAInP,KAAKwR,YAAcxS,IAAIuC,EAAMkR,SAAWlR,EAAMgR,YACjES,EAAsB,GAAGhT,KAAKyR,eAAe,GAAG,IAChDwB,GAAS,IAAID,EAAoBhT,KAAKgS,YAAYjM,KAAKmJ,IAAI1Q,EAC3DQ,IAAKuC,EAAMgR,WAAW,GAAKvT,GAAKuC,EAAMwR,SAAS,IAAGE,GAAS,IAC3DjU,GAAKuC,EAAMgR,YAAcvT,GAAKuC,EAAMwR,SAAS,IAAGE,GAAS,KAC7D1R,EAAM8Q,aAAarT,GAAK,IAAMiU,yCAQxBC,GAEV,GAAI3R,GAAQvB,KAAKa,SAASU,KAE1BvB,MAAKkS,iBACL,KAAK,GAAIlT,GAAE,EAAGA,EAAEuC,EAAM9C,EAAGO,IAAKuC,EAAM6Q,eAAepT,GAAKuC,EAAM8Q,aAAarT,EAK3E,KAAI,GAAImU,GAAGnT,KAAKiS,MAAQjS,KAAKsR,OAAQ6B,GAAKnT,KAAKiS,MAAQjS,KAAKsR,OAAQ6B,IAChE,KAAIA,EAAI5R,EAAM6Q,eAAe7S,QAAU4T,EAAI,GAA3C,CACA,GAAIC,GAASrN,KAAKsN,KAAK9R,EAAM8Q,aAAac,GAAInT,KAAKgF,OAAQkO,EAC3D3R,GAAM6Q,eAAee,GAAKC,cAO7B5R,QAAAA,+aC9FHD,aAEF,QAAAA,GAAYV,GAAU2B,EAAAxC,KAAAuB,GAClBvB,KAAKa,SAAWA,EAEhBb,KAAKvB,EAAI,GACTuB,KAAKuS,WAAa,GAClBvS,KAAKyS,SAAW,GAChBzS,KAAK+S,SAAW,GAChB/S,KAAKsT,KACLtT,KAAKuT,KACLvT,KAAKwT,cACLxT,KAAKyT,mBACLzT,KAAK0T,mBACL1T,KAAK2T,gBACL3T,KAAKmS,YACLnS,KAAKqS,gBACLrS,KAAKoS,kBACLpS,KAAK4T,eACL5T,KAAK6T,KACL7T,KAAK8T,kBAAoB,IACzB9T,KAAK+T,eAAiB,IACtB/T,KAAKgU,iBAAmB,EACxBhU,KAAKiU,KAAO,EACZjU,KAAKkU,cAAgB,GACrBlU,KAAKmU,cACLnU,KAAKgN,UAAY,EACjBhN,KAAKiN,WAAa,EAClBjN,KAAKoU,YAAc,6CAInBpU,KAAKuS,WAAaxM,KAAKsO,MAAMrU,KAAKuS,WAAWvS,KAAKvB,EAAE,IACpDuB,KAAKyS,SAAW1M,KAAKsO,MAAMrU,KAAKyS,SAASzS,KAAKvB,EAAE,IAChDuB,KAAK+S,SAAWhN,KAAKsO,MAAMrU,KAAK+S,SAAS/S,KAAKvB,EAAE,IAChDuB,KAAKmS,SAAW,GAAImC,cAAatU,KAAKvB,GACtCuB,KAAKqS,aAAe,GAAIiC,cAAatU,KAAKvB,GAC1CuB,KAAKoS,eAAiB,GAAIkC,cAAatU,KAAKvB,GAC5CuB,KAAK4T,YAAc,GAAIU,cAAatU,KAAKvB,EACzC,KAAK,GAAIO,GAAE,EAAGA,EAAEgB,KAAKvB,EAAGO,IACxB,CACI,GAAImT,GAAW,CACQA,GAAnBnT,EAAE,EAAEgB,KAAKvB,EAAE,GAAG,GAAgB,GACzBO,EAAE,GAAGgB,KAAKvB,EAAE,GAAe,IACpB,IAChBuB,KAAKmS,SAASnT,GAAKgB,KAAKqS,aAAarT,GAAKgB,KAAKoS,eAAepT,GAAKgB,KAAK4T,YAAY5U,GAAKmT,EAE7FnS,KAAKsT,EAAI,GAAIgB,cAAatU,KAAKvB,GAC/BuB,KAAKuT,EAAI,GAAIe,cAAatU,KAAKvB,GAC/BuB,KAAKwT,WAAa,GAAIc,cAAatU,KAAKvB,EAAE,GAC1CuB,KAAKuU,cAAgB,GAAID,cAAatU,KAAKvB,EAAE,GAC7CuB,KAAKyT,gBAAkB,GAAIa,cAAatU,KAAKvB,EAAE,GAC/CuB,KAAK0T,gBAAkB,GAAIY,cAAatU,KAAKvB,EAAE,GAC/CuB,KAAK6T,EAAG,GAAIS,cAAatU,KAAKvB,GAC9BuB,KAAK2T,aAAe,GAAIW,cAAatU,KAAKvB,GAE1CuB,KAAKwU,WAAazO,KAAKsO,MAAM,GAAGrU,KAAKvB,EAAE,IACvCuB,KAAKyU,UAAYzU,KAAKvB,EAAEuB,KAAKwU,WAAa,EAC1CxU,KAAK0U,MAAQ,GAAIJ,cAAatU,KAAKwU,YACnCxU,KAAK2U,MAAQ,GAAIL,cAAatU,KAAKwU,YACnCxU,KAAK4U,oBAAsB,GAAIN,cAAatU,KAAKwU,WAAW,GAC5DxU,KAAK6U,oBAAsB,GAAIP,cAAatU,KAAKwU,WAAW,GAC5DxU,KAAK8U,eAAiB,GAAIR,cAAatU,KAAKwU,WAAW,GACvDxU,KAAK+U,aAAe,GAAIT,cAAatU,KAAKwU,YAC1CxU,KAAKgV,MAAQ,GAAIV,cAAatU,KAAKwU,YACnCxU,KAAKiV,iBAAmB,GAAIX,cAAatU,KAAKwU,WAC9C,KAAK,GAAIxV,GAAE,EAAGA,EAAEgB,KAAKwU,WAAYxV,IACjC,CACI,GAAImT,GACA+C,EAAOlW,EAAEgB,KAAKwU,WAAV,CACCrC,GAAL+C,EAAE,EAAc,GAAI,IAAIA,EACZ,GAAI,KAAK,EAAEA,GAC3B/C,EAAWpM,KAAK7E,IAAIiR,EAAU,KAC9BnS,KAAK+U,aAAa/V,GAAKmT,EAE3BnS,KAAKmV,kBAAoBnV,KAAKoV,mBAAqBpV,KAAKqV,kBAAoB,EAC5ErV,KAAKsV,uBACLtV,KAAKuV,2BACLvV,KAAK+U,aAAa,GAAK/U,KAAKoU,iDAGnBoB,GAGT,IAAK,GAFDC,GAASD,EAAYxV,KAAKkU,cAC1BwB,GAAsB,EACjB1W,EAAE,EAAGA,EAAEgB,KAAKvB,EAAGO,IACxB,CACI,GAAImT,GAAWnS,KAAKmS,SAASnT,GACzBoT,EAAiBpS,KAAKoS,eAAepT,EACrCmT,IAAY,IAAGuD,EAAqB1W,EACxC,IAAI2W,EACkBA,GAAlB3W,EAAEgB,KAAKyU,UAAwB,GAC1BzV,GAAKgB,KAAKyS,SAAuB,EACxB,GAAI,IAAKzT,EAAEgB,KAAKyU,YAAYzU,KAAKyS,SAASzS,KAAKyU,WACjEzU,KAAKmS,SAASnT,GAAK+G,KAAK6P,YAAYzD,EAAUC,EAAgBuD,EAAWF,EAAQ,EAAEA,GAEnFzV,KAAKgU,iBAAiB,IAA4B,GAAvB0B,GAA4B1V,KAAKgV,MAAM,GAAG,KAErEhV,KAAK6V,aAAa7V,KAAKgU,iBAE3BhU,KAAKgU,gBAAkB0B,EAEvBD,EAASD,EAAYxV,KAAKkU,cAC1BlU,KAAK+U,aAAa,GAAKhP,KAAK6P,YAAY5V,KAAK+U,aAAa,GAAI/U,KAAKoU,YACpD,IAAPqB,EAAoB,GAAPA,GACrBzV,KAAKgV,MAAM,GAAKhV,KAAK+U,aAAa,GAAG/U,KAAK+U,aAAa,kDAIvD,IAAK,GAAI/V,GAAE,EAAGA,EAAEgB,KAAKvB,EAAGO,IAEpBgB,KAAK6T,EAAE7U,GAAKgB,KAAKmS,SAASnT,GAAGgB,KAAKmS,SAASnT,EAE/C,KAAK,GAAIA,GAAE,EAAGA,EAAEgB,KAAKvB,EAAGO,IAEpBgB,KAAKwT,WAAWxU,GAAKgB,KAAKuU,cAAcvV,GACvB,GAAbgB,KAAK6T,EAAE7U,GAASgB,KAAKuU,cAAcvV,GAAK,KACvCgB,KAAKuU,cAAcvV,IAAMgB,KAAK6T,EAAE7U,EAAE,GAAGgB,KAAK6T,EAAE7U,KAAOgB,KAAK6T,EAAE7U,EAAE,GAAGgB,KAAK6T,EAAE7U,GAK/EgB,MAAK8V,eAAiB9V,KAAKmV,kBAC3BnV,KAAK+V,gBAAkB/V,KAAKoV,mBAC5BpV,KAAKgW,eAAiBhW,KAAKqV,iBAC3B,IAAIY,GAAMjW,KAAK6T,EAAE7T,KAAKyU,WAAWzU,KAAK6T,EAAE7T,KAAKyU,UAAU,GAAGzU,KAAKgV,MAAM,EACrEhV,MAAKmV,mBAAqB,EAAEnV,KAAK6T,EAAE7T,KAAKyU,WAAWwB,GAAKA,EACxDjW,KAAKoV,oBAAsB,EAAEpV,KAAK6T,EAAE7T,KAAKyU,UAAU,GAAGwB,GAAKA,EAC3DjW,KAAKqV,mBAAqB,EAAErV,KAAKgV,MAAM,GAAGiB,GAAKA,qDAI/C,IAAK,GAAIjX,GAAE,EAAGA,EAAEgB,KAAKwU,WAAYxV,IAE7BgB,KAAKgV,MAAMhW,GAAKgB,KAAK+U,aAAa/V,GAAGgB,KAAK+U,aAAa/V,EAE3D,KAAK,GAAIA,GAAE,EAAGA,EAAEgB,KAAKwU,WAAYxV,IAE7BgB,KAAK8U,eAAe9V,IAAMgB,KAAKgV,MAAMhW,EAAE,GAAGgB,KAAKgV,MAAMhW,KAAOgB,KAAKgV,MAAMhW,EAAE,GAAGgB,KAAKgV,MAAMhW,oCAIvF6N,EAAeqJ,EAAiB9G,GACpC,GAAI+G,GAAoBpQ,KAAK+F,SAAS,EAGtC9L,MAAKoW,oBACLpW,KAAKqW,mBAAmBH,GAGxBlW,KAAKyT,gBAAgB,GAAKzT,KAAKuT,EAAE,GAAKvT,KAAK8T,kBAAoBjH,EAC/D7M,KAAK0T,gBAAgB1T,KAAKvB,GAAKuB,KAAKsT,EAAEtT,KAAKvB,EAAE,GAAKuB,KAAK+T,aAEvD,KAAK,GAAI/U,GAAE,EAAGA,EAAEgB,KAAKvB,EAAGO,IACxB,CACI,GAAIN,GAAIsB,KAAKwT,WAAWxU,IAAM,EAAEoQ,GAAUpP,KAAKuU,cAAcvV,GAAGoQ,EAC5DkH,EAAI5X,GAAKsB,KAAKsT,EAAEtU,EAAE,GAAKgB,KAAKuT,EAAEvU,GAClCgB,MAAKyT,gBAAgBzU,GAAKgB,KAAKsT,EAAEtU,EAAE,GAAKsX,EACxCtW,KAAK0T,gBAAgB1U,GAAKgB,KAAKuT,EAAEvU,GAAKsX,EAI1C,GAAItX,GAAIgB,KAAKyU,UACT/V,EAAIsB,KAAKmV,mBAAqB,EAAE/F,GAAUpP,KAAK8V,eAAe1G,CAClEpP,MAAK0T,gBAAgB1U,GAAKN,EAAEsB,KAAKsT,EAAEtU,EAAE,IAAI,EAAEN,IAAIsB,KAAK2U,MAAM,GAAG3U,KAAKuT,EAAEvU,IACpEN,EAAIsB,KAAKoV,oBAAsB,EAAEhG,GAAUpP,KAAK+V,gBAAgB3G,EAChEpP,KAAKyT,gBAAgBzU,GAAKN,EAAEsB,KAAKuT,EAAEvU,IAAI,EAAEN,IAAIsB,KAAKsT,EAAEtU,EAAE,GAAGgB,KAAK2U,MAAM,IACpEjW,EAAIsB,KAAKqV,mBAAqB,EAAEjG,GAAUpP,KAAKgW,eAAe5G,EAC9DpP,KAAK4U,oBAAoB,GAAKlW,EAAEsB,KAAK2U,MAAM,IAAI,EAAEjW,IAAIsB,KAAKuT,EAAEvU,GAAGgB,KAAKsT,EAAEtU,EAAE,GAExE,KAAK,GAAIA,GAAE,EAAGA,EAAEgB,KAAKvB,EAAGO,IAQpB,GANAgB,KAAKsT,EAAEtU,GAA6B,KAAxBgB,KAAKyT,gBAAgBzU,GACjCgB,KAAKuT,EAAEvU,GAA+B,KAA1BgB,KAAK0T,gBAAgB1U,EAAE,GAK/BmX,EACJ,CACI,GAAII,GAAYxQ,KAAKyQ,IAAIxW,KAAKsT,EAAEtU,GAAGgB,KAAKuT,EAAEvU,GACtCuX,GAAYvW,KAAK2T,aAAa3U,GAAIgB,KAAK2T,aAAa3U,GAAKuX,EACxDvW,KAAK2T,aAAa3U,IAAM,KAIrCgB,KAAKgN,UAAYhN,KAAKsT,EAAEtT,KAAKvB,EAAE,GAG/BuB,KAAK6U,oBAAoB7U,KAAKwU,YAAcxU,KAAK0U,MAAM1U,KAAKwU,WAAW,GAAKxU,KAAK+T,aAEjF,KAAK,GAAI/U,GAAE,EAAGA,EAAEgB,KAAKwU,WAAYxV,IACjC,CACI,GAAIsX,GAAItW,KAAK8U,eAAe9V,IAAMgB,KAAK0U,MAAM1V,EAAE,GAAKgB,KAAK2U,MAAM3V,GAC/DgB,MAAK4U,oBAAoB5V,GAAKgB,KAAK0U,MAAM1V,EAAE,GAAKsX,EAChDtW,KAAK6U,oBAAoB7V,GAAKgB,KAAK2U,MAAM3V,GAAKsX,EAGlD,IAAK,GAAItX,GAAE,EAAGA,EAAEgB,KAAKwU,WAAYxV,IAQ7B,GANAgB,KAAK0U,MAAM1V,GAAKgB,KAAK4U,oBAAoB5V,GAAKgB,KAAKiU,KACnDjU,KAAK2U,MAAM3V,GAAKgB,KAAK6U,oBAAoB7V,EAAE,GAAKgB,KAAKiU,KAKjDkC,EACJ,CACI,GAAII,GAAYxQ,KAAKyQ,IAAIxW,KAAK0U,MAAM1V,GAAGgB,KAAK2U,MAAM3V,GAC9CuX,GAAYvW,KAAKiV,iBAAiBjW,GAAIgB,KAAKiV,iBAAiBjW,GAAKuX,EAChEvW,KAAKiV,iBAAiBjW,IAAM,KAIzCgB,KAAKiN,WAAajN,KAAK0U,MAAM1U,KAAKwU,WAAW,yCAK7CxU,KAAKyW,aAAazW,KAAKa,SAASsJ,YAAYE,WAC5CrK,KAAKsV,4DAGI5S,GACT,GAAIgU,KACJA,GAAMhU,SAAWA,EACjBgU,EAAMC,UAAY,EAClBD,EAAME,SAAW,GACjBF,EAAMG,SAAW,GACjBH,EAAMI,SAAW,IACjB9W,KAAKmU,WAAW4C,KAAKL,+CAIrB,IAAK,GAAI1X,GAAI,EAAGA,EAAIgB,KAAKmU,WAAW5U,OAAQP,IAC5C,CACI,GAAI0X,GAAQ1W,KAAKmU,WAAWnV,GACxBuX,EAAYG,EAAMG,SAAW9Q,KAAK4D,IAAI,GAAI+M,EAAMI,SAAWJ,EAAMC,UACrE3W,MAAKsT,EAAEoD,EAAMhU,WAAa6T,EAAU,EACpCvW,KAAKuT,EAAEmD,EAAMhU,WAAa6T,EAAU,EACpCG,EAAMC,WAAa,GAA8B,EAAzB3W,KAAKa,SAAS6J,YAE1C,IAAK,GAAI1L,GAAEgB,KAAKmU,WAAW5U,OAAO,EAAGP,GAAG,EAAGA,IAC3C,CACI,GAAI0X,GAAQ1W,KAAKmU,WAAWnV,EACxB0X,GAAMC,UAAYD,EAAME,UAExB5W,KAAKmU,WAAW6C,OAAOhY,EAAE,+CAKlBkX,sDAYOA,EAAiBjE,EAAOE,GAC9C,GAAInT,GAAI+G,KAAKsO,MAAMpC,GACfgF,EAAQhF,EAAQjT,CACpBkX,IAAmBlW,KAAKa,SAASQ,QAAQuO,mBACzC,IAAIsH,GAAYnR,KAAKiJ,MAAM,GAAG,GAAImD,GAAU,EAAE,GAC1CgF,EAAWpR,KAAKiJ,MAAM,IAAImD,EAAS,IAAM,EAAG,GAC5CiF,EAASlB,GAAiB,EAAEe,GAAOC,EAAUC,EAC7CE,EAASnB,EAAgBe,EAAMC,EAAUC,CAC7CnX,MAAKsT,EAAEtU,EAAE,IAAMoY,EAAO,EACtBpX,KAAKuT,EAAEvU,EAAE,IAAMoY,EAAO,EACtBpX,KAAKsT,EAAEtU,EAAE,IAAMqY,EAAO,EACtBrX,KAAKuT,EAAEvU,EAAE,IAAMqY,EAAO,aAIrB9V,MAAAA,sCCtRTwE,MAAKiJ,MAAQ,SAASsI,EAAQpW,EAAKC,GAC/B,MAAImW,GAAOpW,EAAYA,EACdoW,EAAOnW,EAAYA,EAChBmW,GAGhBvR,KAAK6P,YAAc,SAAS2B,EAASvS,EAAQyQ,GACzC,MAAI8B,GAAQvS,EAAee,KAAK7E,IAAIqW,EAAQ9B,EAAQzQ,GACxCe,KAAK5E,IAAIoW,EAAQ9B,EAAQzQ,IAGzCe,KAAK6P,YAAc,SAAS2B,EAASvS,EAAQwS,EAAUC,GACnD,MAAIF,GAAQvS,EAAee,KAAK7E,IAAIqW,EAAQC,EAAUxS,GAC1Ce,KAAK5E,IAAIoW,EAAQE,EAAYzS,IAG7Ce,KAAK2R,SAAW,WAEZ,IAAK,GADD/Y,GAAI,EACCgZ,EAAE,EAAGA,EAAE,GAAIA,IAAKhZ,GAAGoH,KAAK+F,QACjC,QAAQnN,EAAE,GAAG,GAGjBoH,KAAKsN,KAAO,SAASvU,EAAG8Y,EAAGpZ,GACvB,MAAOM,IAAK8Y,EAAI9Y,GAAKN,ibCPnBqZ,aACF,QAAAA,GAAY5J,EAAGnI,EAAGS,GAAE/D,EAAAxC,KAAA6X,GAChB7X,KAAKiO,EAAIA,EACTjO,KAAK8F,EAAIA,EACT9F,KAAKuG,EAAIA,yCAGR0H,EAAGnI,GACJ,MAAO9F,MAAKiO,EAAEA,EAAIjO,KAAK8F,EAAEA,+BAGxBmI,EAAGnI,EAAGS,GACP,MAAOvG,MAAKiO,EAAEA,EAAIjO,KAAK8F,EAAEA,EAAI9F,KAAKuG,EAAEA,WAItCuR,aACF,QAAAA,KAActV,EAAAxC,KAAA8X,GACV9X,KAAK+X,OAAS,GAAIF,GAAK,EAAE,EAAE,GAAG,GAAIA,IAAM,EAAE,EAAE,GAAG,GAAIA,GAAK,GAAG,EAAE,GAAG,GAAIA,IAAM,GAAG,EAAE,GACjE,GAAIA,GAAK,EAAE,EAAE,GAAG,GAAIA,IAAM,EAAE,EAAE,GAAG,GAAIA,GAAK,EAAE,GAAG,GAAG,GAAIA,IAAM,EAAE,GAAG,GACjE,GAAIA,GAAK,EAAE,EAAE,GAAG,GAAIA,GAAK,GAAG,EAAE,GAAG,GAAIA,GAAK,EAAE,GAAG,GAAG,GAAIA,GAAK,GAAG,GAAG,IAC/E7X,KAAKgY,GAAK,IAAI,IAAI,IAAI,GAAG,GAAG,GACxB,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,GAAG,GAAG,GACzE,IAAK,EAAE,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GACzE,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IACxE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IACxE,IAAI,IAAI,GAAI,GAAG,GAAG,GAAG,IAAK,EAAE,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAK,GAAG,GAAG,IAAI,IAAI,IACxE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IACxE,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GACzE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,EAAE,GAAG,IAAI,IAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAK,GAAG,IAAI,EAC1E,IAAI,GAAG,GAAG,IAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAK,IAAI,IAAI,IAAI,IAAI,GAAG,IACxE,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAK,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IACxE,GAAG,IAAI,IAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAK,EAAE,IAAI,IACxE,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAGxEhY,KAAKiY,KAAO,GAAIC,OAAM,KACtBlY,KAAKmY,MAAQ,GAAID,OAAM,KAEvBlY,KAAKoY,KAAKC,KAAKC,8CAGdC,GACEA,EAAO,GAAKA,EAAO,IAElBA,GAAQ,QAGZA,EAAOxS,KAAKsO,MAAMkE,IACR,MACNA,GAAQA,GAAQ,EAGpB,KAAI,GAAIvZ,GAAI,EAAGA,EAAI,IAAKA,IAAK,CACzB,GAAIwZ,EAEAA,GADI,EAAJxZ,EACIgB,KAAKgY,EAAEhZ,GAAa,IAAPuZ,EAEbvY,KAAKgY,EAAEhZ,GAAOuZ,GAAM,EAAK,IAGjCvY,KAAKiY,KAAKjZ,GAAKgB,KAAKiY,KAAKjZ,EAAI,KAAOwZ,EACpCxY,KAAKmY,MAAMnZ,GAAKgB,KAAKmY,MAAMnZ,EAAI,KAAOgB,KAAK+X,MAAMS,EAAI,sCAKpDC,EAAKC,GAEV,GAMIC,GAAIC,EAAIC,EAURC,EAAIC,EAhBJC,EAAK,IAAKjT,KAAK4J,KAAK,GAAG,GACvBsJ,GAAM,EAAElT,KAAK4J,KAAK,IAAI,EAOtBhR,GAAK8Z,EAAIC,GAAKM,EACdha,EAAI+G,KAAKsO,MAAMoE,EAAI9Z,GACnB8N,EAAI1G,KAAKsO,MAAMqE,EAAI/Z,GACnBH,GAAKQ,EAAEyN,GAAGwM,EACVC,EAAKT,EAAIzZ,EAAER,EACX2a,EAAKT,EAAIjM,EAAEjO,CAIZ0a,GAAGC,GACFL,EAAG,EAAGC,EAAG,IAETD,EAAG,EAAGC,EAAG,EAKb,IAAIK,GAAKF,EAAKJ,EAAKG,EACfI,EAAKF,EAAKJ,EAAKE,EACfK,EAAKJ,EAAK,EAAI,EAAID,EAClBM,EAAKJ,EAAK,EAAI,EAAIF,CAEtBja,IAAK,IACLyN,GAAK,GACL,IAAI+M,GAAMxZ,KAAKmY,MAAMnZ,EAAEgB,KAAKiY,KAAKxL,IAC7BgN,EAAMzZ,KAAKmY,MAAMnZ,EAAE8Z,EAAG9Y,KAAKiY,KAAKxL,EAAEsM,IAClCW,EAAM1Z,KAAKmY,MAAMnZ,EAAE,EAAEgB,KAAKiY,KAAKxL,EAAE,IAEjCkN,EAAK,GAAMT,EAAGA,EAAGC,EAAGA,CACrBQ,GAAG,EACFhB,EAAK,GAELgB,GAAMA,EACNhB,EAAKgB,EAAKA,EAAKH,EAAII,KAAKV,EAAIC,GAEhC,IAAIU,GAAK,GAAMT,EAAGA,EAAGC,EAAGA,CACrBQ,GAAG,EACFjB,EAAK,GAELiB,GAAMA,EACNjB,EAAKiB,EAAKA,EAAKJ,EAAIG,KAAKR,EAAIC,GAEhC,IAAIS,GAAK,GAAMR,EAAGA,EAAGC,EAAGA,CASxB,OARGO,GAAG,EACFjB,EAAK,GAELiB,GAAMA,EACNjB,EAAKiB,EAAKA,EAAKJ,EAAIE,KAAKN,EAAIC,IAIzB,IAAMZ,EAAKC,EAAKC,oCAGlB5K,GACL,MAAOjO,MAAK+Z,SAAW,IAAF9L,EAAU,IAAFA,YAK/B+L,EAAY,GAAIlC,EACtBmC,QAAOC,OAAOF,aAECA,qcC5Jfjb,GAAA,uBAEA,IAAAob,GAAApb,EAAA,gCACAqb,EAAArb,EAAA,2BACAsb,EAAAtb,EAAA,yBACAub,EAAAvb,EAAA,4BAEMiF,aACF,QAAAA,GAAYsE,GAAW9F,EAAAxC,KAAAgE,GACnBhE,KAAKsI,WAAaA,EAElBtI,KAAK0K,WAAa,EAClB1K,KAAKuH,KAAO,EACZvH,KAAKkQ,aAAc,EACnBlQ,KAAK+J,YAAa,EAClB/J,KAAKua,UAAY,IACjBva,KAAKwa,OAAS,GAEdxa,KAAKmK,YAAc,GAAAgQ,GAAAhQ,YAAgBnK,MACnCA,KAAKmK,YAAYsQ,OAEjBza,KAAKqB,QAAU,GAAA+Y,GAAA/Y,QAAYrB,MAC3BA,KAAKqB,QAAQoZ,OAEbza,KAAKuB,MAAQ,GAAA8Y,GAAA9Y,MAAUvB,MACvBA,KAAKuB,MAAMkZ,OAEXza,KAAKwB,QAAU,GAAA8Y,GAAA9Y,QAAYxB,MAC3BA,KAAKwB,QAAQiZ,OAKbza,KAAK0a,OAAQ,iDAIb1a,KAAK0a,OAAQ,EACb1a,KAAKmK,YAAYwQ,6CAGbC,GACJA,EAAS5a,KAAKmK,YAAY0Q,OAAS7a,KAAKmK,YAAY2Q,SACpD9a,KAAK0a,MAAQE,uCAIb5a,KAAKiB,SAASjB,KAAK0a,kBAKlB1W,aAAAA,qUClDI+W,cACT,QAAAA,KAAavY,EAAAxC,KAAA+a;oQCHXpV,mFAcaqV,EAAWC,GAEtB,GAAIC,GAAa,SAAUC,GACvB,GAAKA,EAAIC,iBAAmB,CACxB,GAAIC,GAAkBF,EAAIG,OAASH,EAAII,MAAQ,GAC/Czb,SAAQC,IAAKgG,KAAKyV,MAAOH,EAAiB,GAAM,kBAGpDI,EAAU,SAAUN,KAGpBO,EAAY,GAAI7Y,OAAM8Y,SAC1BD,GAAUE,QAASZ,EAAUvS,MAE7BiT,EAAU/S,KAAMqS,EAAUa,QAAS,SAAEC,GACjCA,EAAUC,SACV,IAAIC,GAAY,GAAInZ,OAAMoZ,SAC1BD,GAAUE,aAAcJ,GACxBE,EAAUJ,QAASZ,EAAUvS,MAC7BuT,EAAUrT,KAAMqS,EAAUmB,QAAS,SAAEvb,GACjCqa,EAAera,IAChBsa,EAAYO,sCAMPhT,EAAMwS,GAElB,GAAIC,GAAa,SAAUC,GACvB,GAAKA,EAAIC,iBAAmB,CACxB,GAAIC,GAAkBF,EAAIG,OAASH,EAAII,MAAQ,GAC/Czb,SAAQC,IAAKgG,KAAKyV,MAAOH,EAAiB,GAAM,kBAGpDI,EAAU,SAAUN,MAGX,GAAItY,OAAMuZ,YAChBzT,KAAMF,EAAM,SAAE4T,EAAUP,GAAe,GAAAQ,IAAA,EAAAC,GAAA,EAAAC,MAAA3X,EAAA,KAE1C,IAAA,GAAA4X,GAAAC,EAAeZ,EAAfa,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyBG,EAAAnR,MACjByR,UAAW,EAHuB,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,QAAA,KAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,QAAA,GAAAV,EAAA,KAAAC,IAK1C,GAAIU,GAAO,GAAIra,OAAMsa,YAAad,EAAU,GAAIxZ,OAAMua,cAAetB,GACrEoB,GAAK3X,KAAO,MACZ0V,EAAeiC,IAChBhC,EAAYO,mCAGJhT,EAAMwS,GACjB,GAAIoC,GAAU,GAAIxa,OAAMya,cACxBD,GAAQnC,WAAa,SAAUhS,EAAMoS,EAAQC,GACzCzb,QAAQC,IAAKmJ,EAAMoS,EAAQC,GAG/B,IAAIL,GAAa,SAAUC,GACvB,GAAKA,EAAIC,iBAAmB,CACxB,GAAIC,GAAkBF,EAAIG,OAASH,EAAII,MAAQ,GAC/Czb,SAAQC,IAAKgG,KAAKyV,MAAOH,EAAiB,GAAM,kBAGpDI,EAAU,SAAUN,IAGX,IAAItY,OAAM0a,UAAWF,GAC3B1U,KAAMF,EAAM,SAAE7H,GACjBqa,EAAera,IAChBsa,EAAYO,cAKd9V,YAAAA,gbCvFHqC,sFAIE,GAAM/E,OAAOua,sBAAuB,CAKhC,IAAI,GAJAC,GAAS3V,SAAS4V,cAAc,UAC5BC,GAAS,QAAS,qBAAsB,YAAa,aACzDC,GAAU,EAEN5e,EAAE,EAAEA,EAAE,EAAEA,IACZ,IAEI,IADA4e,EAAUH,EAAOI,WAAWF,EAAM3e,MACY,kBAAxB4e,GAAQE,aAE1B,OAAO,EAEb,MAAMvf,IAIZ,OAAO,EAGX,OAAO,yCAGwB,GAAfwf,GAAehV,UAAAxJ,OAAA,OAAAsF,KAAAkE,UAAA,GAAAA,UAAA,GAAL,IAM1B,OALc,OAAXgV,IACCA,EAAA,0PAIJ,oFAEiCA,EAFjC,4CASC/V,SAAAA,4BCzCT,SAAAxJ,EAAAD,GAAA,gBAAAc,IAAA,gBAAAI,GAAAA,EAAAJ,QAAAd,IAAA,kBAAAyf,SAAAA,OAAAC,IAAAD,UAAAzf,GAAA,gBAAAc,GAAAA,EAAAgJ,YAAA9J,IAAAC,EAAA6J,YAAA9J,KAAAyB,KAAA,WAAA,MAAA,UAAAxB,GAAA,QAAAD,GAAAG,GAAA,GAAAD,EAAAC,GAAA,MAAAD,GAAAC,GAAAW,OAAA,IAAAL,GAAAP,EAAAC,IAAAW,WAAA6e,GAAAxf,EAAA4c,QAAA,EAAA,OAAA9c,GAAAE,GAAAY,KAAAN,EAAAK,QAAAL,EAAAA,EAAAK,QAAAd,GAAAS,EAAAsc,QAAA,EAAAtc,EAAAK,QAAA,GAAAZ,KAAA,OAAAF,GAAA4f,EAAA3f,EAAAD,EAAAoZ,EAAAlZ,EAAAF,EAAAyZ,EAAA,GAAAzZ,EAAA,KAAA,SAAAC,EAAAD,EAAAE,GAAA,YAAAwb,QAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,GAAA,IAAA5M,GAAAD,EAAA,GAAAO,EAAAP,EAAA,GAAAK,GAAAuf,oBAAArf,EAAAqf,oBAAAC,qBAAAtf,EAAAsf,qBAAAzV,MAAA,SAAArK,GAAA,OAAA,GAAAE,GAAA6f,MAAAC,OAAAhgB,IAAAmK,KAAA,SAAAnK,EAAAD,GAAA,GAAAE,IAAA,GAAAC,GAAA6f,MAAA5V,KAAAnK,EAAA,OAAAD,IAAAE,EAAAggB,KAAAlgB,GAAAE,GAAAigB,OAAA,WAAA,MAAA,IAAAhgB,GAAA6f,MAAAhgB,GAAA,QAAAO,EAAAN,EAAAa,QAAAP,GAAA,SAAAN,EAAAD,GAAA,YAAA,SAAAE,GAAAD,GAAA,MAAAA,GAAAmgB,QAAA,UAAA,IAAA,QAAAjgB,GAAAF,EAAAD,GAAA,MAAA,IAAAA,EAAAqgB,KAAApgB,EAAAD,EAAAsgB,KAAA,QAAA7f,GAAAR,GAAA,MAAA,gBAAAA,GAAA,QAAAM,GAAAN,GAAA,MAAA,gBAAAA,GAAA,QAAAI,GAAAJ,GAAA,OAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,KAAAA,EAAA,KAAAuH,KAAAsO,MAAA7V,EAAA,IAAA,GAAA,GAAAG,GAAA,WAAA,GAAAH,GAAA,qCAAA,OAAA,UAAAD,GAAA,MAAAO,GAAAP,IAAAC,EAAAsgB,KAAAvgB,OAAAM,EAAA,WAAA,GAAAL,GAAA,sCAAAD,GAAAwgB,KAAA,EAAAC,IAAA,EAAArH,EAAA,EAAAsH,KAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAlK,EAAA,EAAAmK,KAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAjhB,EAAA,EAAAkhB,KAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,GAAA,EAAA3gB,EAAA,EAAA4gB,KAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,EAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAvhB,EAAA,EAAAwhB,KAAA,GAAAC,GAAA,GAAAC,IAAA,EAAAC,GAAA,GAAA7I,EAAA,GAAA8I,KAAA,GAAAC,GAAA,GAAA,OAAA,UAAAliB,GAAA,GAAAC,GAAAF,EAAAoiB,KAAAniB,GAAAO,EAAAN,EAAA,GAAAI,EAAAJ,EAAA,EAAA,OAAAH,GAAAS,EAAA6hB,eAAA,IAAAC,SAAAhiB,GAAA,MAAAN,GAAAa,SAAA0hB,UAAAtiB,EAAAuiB,eAAAtiB,EAAAuiB,SAAAniB,EAAAoiB,SAAAliB,EAAAmiB,QAAAxiB,EAAAyiB,YAAAxiB,EAAAyiB,YAAAxiB,IAAA,SAAAL,EAAAD,GAAA,YAAA0b,QAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,IAAA/M,EAAA8f,qBAAA,uBAAA,wBAAA,uBAAA,mBAAA,mBAAA,mBAAA,cAAA,QAAA,UAAA,eAAA,YAAA,aAAA,UAAA,YAAA,gBAAA,WAAA,gBAAA,mBAAA,aAAA,eAAA,aAAA,YAAA,YAAA,kBAAA,0BAAA,0BAAA,yBAAA,0BAAA,0BAAA,oBAAA,oBAAA,mBAAA,gBAAA,yBAAA,uBAAA,gBAAA,cAAA,cAAA,eAAA,eAAA,SAAA,QAAA,QAAA,aAAA,kBAAA,oBAAA,kBAAA,UAAA,oBAAA,oBAAA,iBAAA,iBAAA,aAAA,aAAA,cAAA,gBAAA,UAAA,WAAA,OAAA,gBAAA,cAAA,gBAAA,eAAA,eAAA,cAAA,WAAA,YAAA,eAAA,OAAA,eAAA,UAAA,WAAA,UAAA,QAAA,WAAA,YAAA,eAAA,aAAA,UAAA,UAAA,kBAAA,oBAAA,oBAAA,iBAAA,mBAAA,iBAAA,kBAAA,uBAAA,kBAAA,eAAA,oBAAA,gBAAA,gBAAA,mBAAA,eAAA,gBAAA,cAAA,oBAAA,iBAAA,oBAAA,oBAAA,iBAAA,gBAAA,gBAAA,QAAA,QAAA,WAAA,OAAA,UAAA,WAAA,SAAA,SAAA,cAAA,QAAA,cAAA,YAAA,aAAA,cAAA,aAAA,iBAAA,oBAAA,eAAA,WAAA,aAAA,iBAAA,aAAA,WAAA,WAAA9f,EAAA+f,sBAAA,QAAA,uBAAA,QAAA,SAAA,OAAA,UAAA,WAAA,QAAA,OAAA,OAAA,aAAA,YAAA,gBAAA,SAAA,aAAA,kBAAA,SAAA9f,EAAAD,GAAA,YAAA,SAAAE,GAAAD,EAAAD,GAAA,GAAAE,GAAA,EAAAC,EAAAF,EAAAe,OAAAP,EAAAN,CAAA,IAAAA,EAAA,GAAAF,EAAAE,EAAA,GAAA6I,MAAAhJ,EAAA,MAAAG,GAAA,CAAA,MAAAM,EAAAP,GAAA,CAAA,GAAAK,GAAAiH,KAAAsO,MAAA5V,GAAAO,EAAAP,GAAA,GAAAG,EAAAJ,EAAAM,GAAAH,EAAAH,EAAAM,EAAA,EAAA,IAAAF,EAAA2I,OAAAhJ,EAAA,CAAA,IAAA,GAAAM,GAAAC,EAAAD,EAAAL,EAAAe,OAAAV,IAAA,CAAAL,EAAAK,GAAA0I,OAAAhJ,IAAAO,EAAAD,GAAA,MAAAC,GAAA,GAAAF,EAAA2I,KAAAhJ,GAAAI,EAAA4I,KAAAhJ,EAAA,MAAAO,EAAAF,GAAA2I,KAAAhJ,EAAAS,EAAAF,EAAAF,EAAA2I,KAAAhJ,IAAAE,EAAAK,EAAA,GAAA,OAAA,EAAA,QAAAJ,GAAAF,EAAAD,GAAA,GAAAC,EAAAe,OAAA,CAAA,GAAAb,GAAAD,EAAAD,EAAAD,EAAAgJ,KAAA/I,GAAAwY,OAAAtY,EAAA,EAAA,EAAAH,OAAAC,GAAAuY,KAAAxY,GAAA0b,OAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,IAAA/M,EAAA+iB,aAAA5iB,GAAA,SAAAF,EAAAD,GAAA,YAAA,SAAAE,GAAAD,EAAAD,GAAA,KAAAC,YAAAD,IAAA,KAAA,IAAAgjB,WAAA,qCAAAtH,OAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,GAAA,IAAA5M,GAAA,WAAA,QAAAF,GAAAA,EAAAD,GAAA,IAAA,GAAAE,GAAA,EAAAA,EAAAF,EAAAgB,OAAAd,IAAA,CAAA,GAAAC,GAAAH,EAAAE,EAAAC,GAAA8iB,WAAA9iB,EAAA8iB,aAAA,EAAA9iB,EAAA+iB,cAAA,EAAA,SAAA/iB,KAAAA,EAAAgjB,UAAA,GAAAzH,OAAAmE,eAAA5f,EAAAE,EAAAijB,IAAAjjB,IAAA,MAAA,UAAAH,EAAAE,EAAAC,GAAA,MAAAD,IAAAD,EAAAD,EAAAqjB,UAAAnjB,GAAAC,GAAAF,EAAAD,EAAAG,GAAAH,MAAAS,GAAAQ,EAAA,kBAAAqiB,EAAA,SAAAC,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,SAAAC,EAAA,UAAAC,GAAA,MAAAC,GAAA,UAAAC,GAAA,iBAAAC,GAAA,YAAAC,GAAA,YAAAC,GAAA,mBAAAC,GAAA,oBAAA1jB,EAAA,WAAA,QAAAN,GAAAD,EAAAG,EAAAM,GAAAP,EAAAuB,KAAAxB,GAAAwB,KAAAsX,OAAA/Y,EAAAyB,KAAAuH,KAAA7I,EAAAsB,KAAAsL,MAAAtM,EAAA,MAAAN,GAAAF,IAAAmjB,IAAA,OAAAc,IAAA,WAAA,MAAAzjB,GAAA0jB,eAAA1iB,KAAAsX,QAAAtY,EAAAgB,KAAAsX,YAAA,OAAA9Y,IAAAD,GAAAokB,QAAA7jB,GAAA,SAAAN,EAAAD,GAAA,YAAA,SAAAE,GAAAD,GAAA,IAAA,GAAAD,IAAAsgB,IAAArgB,EAAAokB,OAAAC,cAAApkB,EAAA,EAAAA,EAAAD,EAAAyK,OAAA1J,OAAAd,IAAA,IAAA,GAAAC,GAAAF,EAAAyK,OAAAxK,GAAAO,EAAA,EAAAA,EAAAN,EAAAa,OAAAP,IAAA,CAAA,GAAAF,GAAAJ,EAAAM,EAAA,UAAAF,EAAA4B,OAAA,kBAAA5B,EAAAgkB,QAAAvkB,EAAAwkB,eAAAjkB,EAAAkkB,UAAAlkB,EAAAmkB,aAAA,aAAAnkB,EAAAgkB,UAAAvkB,EAAAqgB,MAAArgB,EAAAqgB,IAAA,IAAA9f,EAAAokB,uBAAA,MAAA3kB,GAAAqgB,IAAArgB,EAAAqgB,KAAA,IAAArgB,EAAA0b,OAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,IAAA/M,EAAA4kB,YAAA1kB,GAAA,SAAAD,EAAAD,GAAA,YAAA,SAAAE,GAAAD,EAAAD,GAAA,IAAA,GAAAE,GAAA,EAAAA,EAAAD,EAAAe,OAAAd,IAAA,CAAA,GAAAC,GAAAF,EAAAC,GAAAO,EAAAT,EAAAE,EAAA,IAAAC,EAAAa,OAAAP,EAAA,OAAA,EAAA,OAAA,EAAA,QAAAN,GAAAF,EAAAD,EAAAE,GAAA,IAAA,GAAAC,GAAA,EAAAM,EAAA,EAAA,EAAAF,EAAA,EAAAA,EAAAN,EAAAe,OAAAT,IAAA,CAAA,GAAAF,GAAAJ,EAAAM,GAAAH,EAAAJ,EAAAO,EAAAF,GAAAD,IAAAC,EAAAD,GAAA4I,KAAAvI,IAAAN,EAAAI,EAAAE,EAAAJ,EAAAD,GAAA4I,MAAA9I,EAAAC,GAAAF,EAAAE,GAAAH,EAAAG,KAAAH,EAAAG,IAAA,EAAA,QAAAM,KAAA,IAAA,GAAAR,GAAAuK,UAAAxJ,OAAAhB,EAAA2Z,MAAA1Z,GAAAQ,EAAA,EAAAR,EAAAQ,EAAAA,IAAAT,EAAAS,GAAA+J,UAAA/J,EAAA,KAAA,GAAAF,GAAAP,EAAA8K,OAAA,SAAA7K,EAAAD,GAAA,MAAAA,GAAA,GAAA,IAAAK,EAAA,GAAAwkB,aAAAtkB,EAAAS,QAAAZ,EAAAJ,EAAA8K,OAAA,SAAA7K,EAAAD,GAAA,MAAAA,GAAA,GAAA,IAAAE,EAAAK,EAAAF,IAAAF,EAAAI,EAAAF,EAAAD,GAAAsb,OAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,IAAA/M,EAAA8kB,MAAArkB,GAAA,SAAAR,EAAAD,EAAAE,GAAA,YAAA,SAAAC,GAAAF,GAAA,MAAAA,IAAAA,EAAA8kB,WAAA9kB,GAAAsR,QAAAtR,GAAA,QAAAQ,GAAAR,EAAAD,GAAA,KAAAC,YAAAD,IAAA,KAAA,IAAAgjB,WAAA,qCAAAtH,OAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,IAAA/M,EAAAggB,SAAA,EAAA,IAAAzf,GAAA,WAAA,QAAAN,GAAAA,EAAAD,GAAA,IAAA,GAAAE,GAAA,EAAAA,EAAAF,EAAAgB,OAAAd,IAAA,CAAA,GAAAC,GAAAH,EAAAE,EAAAC,GAAA8iB,WAAA9iB,EAAA8iB,aAAA,EAAA9iB,EAAA+iB,cAAA,EAAA,SAAA/iB,KAAAA,EAAAgjB,UAAA,GAAAzH,OAAAmE,eAAA5f,EAAAE,EAAAijB,IAAAjjB,IAAA,MAAA,UAAAH,EAAAE,EAAAC,GAAA,MAAAD,IAAAD,EAAAD,EAAAqjB,UAAAnjB,GAAAC,GAAAF,EAAAD,EAAAG,GAAAH,MAAAK,EAAAH,EAAA,IAAAE,EAAAD,EAAAE,GAAAC,EAAAJ,EAAA,IAAAkZ,EAAAjZ,EAAAG,GAAA0kB,EAAA9kB,EAAA,GAAAQ,EAAAP,EAAA6kB,GAAArO,EAAAzW,EAAA,GAAAW,EAAAX,EAAA,GAAAuZ,EAAA,WAAA,QAAAxZ,KAAAQ,EAAAgB,KAAAxB,GAAAwB,KAAA4iB,QAAAhE,IAAA,IAAAmE,eAAA,EAAA,GAAAlE,IAAA,KAAA7e,KAAAiJ,UAAA,MAAAnK,GAAAN,IAAAmjB,IAAA,OAAArW,MAAA,SAAA9M,GAAA,GAAAD,GAAAyB,KAAAvB,EAAAsK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,KAAArK,EAAAqK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,KAAA,OAAA,IAAAya,SAAA,SAAAxkB,EAAAF,GAAA,GAAAF,GAAA,GAAA6kB,eAAA7kB,GAAA8kB,KAAAhlB,EAAAF,GAAAI,EAAA+kB,aAAA,cAAA/kB,EAAAglB,iBAAA,OAAA,WAAA,IAAAhlB,EAAAilB,YAAA,MAAAjlB,EAAAklB,OAAA9kB,EAAAT,EAAAigB,OAAA5f,EAAAmlB,WAAAjlB,EAAAF,EAAAklB,UAAAllB,EAAAglB,iBAAA,QAAA9kB,GAAAF,EAAAolB,KAAAvlB,QAAAkjB,IAAA,SAAArW,MAAA,SAAA9M,GAAA,GAAAD,GAAAyB,IAAA,IAAAxB,YAAAylB,aAAA,CAAA,GAAAxlB,GAAA,GAAAylB,YAAA1lB,EAAAA,GAAA2lB,OAAAC,aAAAC,MAAA,KAAA5lB,GAAA,GAAAC,IAAA,EAAAC,EAAA,SAAAH,EAAA,OAAAwB,MAAA4iB,QAAA,EAAAxjB,EAAA+jB,aAAAzkB,GAAAsB,KAAAiJ,UAAAvK,EAAAuK,OAAAqb,QAAA,SAAA9lB,GAAA,GAAAC,GAAA,GAAAyW,GAAAqP,KAAAhmB,GAAA0K,OAAA8N,KAAAtY,EAAA,IAAAC,GAAA,CAAAF,GAAA8lB,QAAA,SAAA9lB,GAAAE,GAAAO,EAAA,QAAA+hB,eAAAxiB,EAAAgX,UAAAjX,EAAAqkB,QAAA,SAAApkB,EAAAkC,MAAA,cAAAlC,EAAAskB,QAAArkB,EAAA8G,KAAAtG,EAAA,QAAA8hB,UAAAviB,EAAAgmB,MAAA,WAAAhmB,EAAAskB,QAAArkB,EAAA0K,OAAA3K,EAAAimB,WAAA/lB,EAAAF,EAAA6I,SAAA,KAAA,YAAA7I,EAAAskB,QAAArkB,EAAA2K,QAAA5K,EAAAimB,WAAA/lB,GAAA,eAAAF,EAAAskB,SAAAtkB,EAAAkmB,eAAAjmB,EAAAkmB,GAAAnmB,EAAAkmB,eAAAhmB,EAAAF,EAAA8M,MAAA,KAAA,SAAA9M,EAAAkC,MAAA,mBAAAlC,EAAAskB,QAAArkB,EAAAmmB,WAAApmB,EAAAgmB,KAAA,YAAAhmB,EAAAkC,MAAA,kBAAAlC,EAAAskB,SAAArkB,EAAAomB,MAAArmB,EAAAsmB,mBAAA9kB,QAAA2hB,IAAA,SAAArW,MAAA,WAAA,GAAA9M,GAAAwB,KAAAzB,EAAA,GAAAoZ,GAAA,QAAAoN,MAAAC,MAAAhlB,KAAA4iB,OAAA/D,KAAA,OAAA7e,MAAAiJ,OAAAqb,QAAA,SAAA7lB,EAAAC,GAAA,GAAAM,GAAAT,EAAA0mB,UAAAjmB,GAAAkmB,SAAA1mB,EAAAogB,KAAAngB,EAAA0mB,OAAAnmB,EAAAR,EAAAokB,UAAArkB,EAAA6mB,aAAAzD,IAAA,UAAArW,MAAA,WAAA,IAAA,GAAA9M,GAAAwB,KAAAmlB,SAAA5mB,EAAA,GAAA2Z,OAAA1Z,EAAAe,QAAAd,EAAA,EAAAA,EAAAD,EAAAe,OAAAd,IAAAF,EAAAE,GAAAD,EAAA6mB,WAAA5mB,EAAA,OAAAF,MAAAojB,IAAA,QAAArW,MAAA,SAAA9M,GAAA,GAAAD,GAAA,GAAA2W,GAAAqP,MAAA/lB,EAAA,OAAAwB,MAAAiJ,OAAA8N,KAAAxY,GAAAA,KAAAojB,IAAA,MAAArW,MAAA,SAAA9M,GAAA,MAAAS,GAAA,QAAAiiB,SAAA1iB,GAAAwB,KAAAiJ,OAAAzK,GAAAwB,KAAAiJ,OAAA7C,KAAA,SAAA7H,GAAA,MAAAA,GAAAgH,OAAA/G,OAAAmjB,IAAA,QAAArW,MAAA,WAAA,GAAA/M,GAAAwK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,EAAAtK,EAAAsK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA/I,KAAAslB,SAAA5mB,EAAA,GAAAF,EAAA,OAAAE,GAAAkkB,OAAA5iB,KAAA4iB,OAAAlkB,EAAAuK,OAAAjJ,KAAAiJ,OAAAsc,IAAA,SAAA/mB,GAAA,MAAAA,GAAAgnB,MAAAjnB,EAAAE,KAAAC,KAAAijB,IAAA,YAAAc,IAAA,WAAA,GAAAjkB,GAAAwB,KAAAiJ,OAAAsc,IAAA,SAAA/mB,GAAA,MAAAA,GAAAinB,WAAA,OAAA1f,MAAA7E,IAAAmjB,MAAAte,KAAAvH,MAAAmjB,IAAA,MAAAc,IAAA,WAAA,MAAAziB,MAAA4iB,OAAAhE,KAAA3Z,IAAA,SAAAzG,GAAA,GAAAD,GAAAyB,KAAA4iB,OAAAhE,GAAA5e,MAAA4iB,OAAAhE,IAAApgB,CAAA,IAAAC,GAAAF,EAAAC,CAAAwB,MAAAiJ,OAAAqb,QAAA,SAAA9lB,GAAA,MAAAA,GAAA+S,MAAA9S,QAAAkjB,IAAA,gBAAAc,IAAA,WAAA,MAAAziB,MAAA4iB,OAAAG,eAAA9d,IAAA,SAAAzG,GAAAwB,KAAA4iB,OAAAG,cAAAA,iBAAApB,IAAA,WAAAc,IAAA,WAAA,GAAAjkB,GAAAwB,KAAAiJ,OAAAsc,IAAA,SAAA/mB,GAAA,MAAAA,GAAA8mB,UAAA,OAAAvf,MAAA5E,IAAAkjB,MAAAte,KAAAvH,OAAAA,IAAAD,GAAAggB,KAAAvG,GAAA,SAAAxZ,EAAAD,EAAAE,GAAA,YAAA,SAAAO,GAAAR,EAAAD,GAAA,KAAAC,YAAAD,IAAA,KAAA,IAAAgjB,WAAA,qCAAAtH,OAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,IAAA/M,EAAAmnB,SAAA,EAAA,IAAA5mB,GAAA,WAAA,QAAAN,GAAAA,EAAAD,GAAA,IAAA,GAAAE,GAAA,EAAAA,EAAAF,EAAAgB,OAAAd,IAAA,CAAA,GAAAC,GAAAH,EAAAE,EAAAC,GAAA8iB,WAAA9iB,EAAA8iB,aAAA,EAAA9iB,EAAA+iB,cAAA,EAAA,SAAA/iB,KAAAA,EAAAgjB,UAAA,GAAAzH,OAAAmE,eAAA5f,EAAAE,EAAAijB,IAAAjjB,IAAA,MAAA,UAAAH,EAAAE,EAAAC,GAAA,MAAAD,IAAAD,EAAAD,EAAAqjB,UAAAnjB,GAAAC,GAAAF,EAAAD,EAAAG,GAAAH,MAAAK,EAAAH,EAAA,GAAAE,EAAA,SAAAH,GAAA,MAAAA,IAAAA,EAAA8kB,WAAA9kB,GAAAsR,QAAAtR,IAAAI,GAAAC,EAAA,WAAA,QAAAL,GAAAD,EAAAE,GAAA,GAAAC,GAAAqK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,EAAAjK,EAAAiK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,CAAA,IAAA/J,EAAAgB,KAAAxB,GAAAwB,KAAAkH,KAAAvI,EAAA,QAAAuiB,SAAA3iB,GAAAyB,KAAAkH,KAAA3I,MAAA,CAAA,IAAAI,EAAA,QAAAwiB,QAAA5iB,GAAA,KAAA,IAAAW,OAAA,6EAAAc,MAAAuF,KAAAhH,EAAAyB,KAAAuH,KAAA9I,EAAAuB,KAAAslB,SAAA5mB,EAAAsB,KAAAqH,SAAAvI,EAAA,MAAAA,GAAAN,IAAAmjB,IAAA,QAAArW,MAAA,SAAA9M,GAAA,MAAAG,GAAA,QAAAuiB,SAAA1iB,GAAAwB,KAAAkH,OAAA1I,EAAAG,EAAA,QAAAwiB,QAAA3iB,GAAAwB,KAAAuF,KAAAsb,gBAAAriB,EAAAqiB,kBAAA,MAAAc,IAAA,SAAArW,MAAA,WAAA,OAAA/F,KAAAvF,KAAAuF,KAAA2B,KAAAlH,KAAAkH,KAAAK,KAAAvH,KAAAuH,KAAAF,SAAArH,KAAAqH,SAAAie,SAAAtlB,KAAAslB,aAAA3D,IAAA,OAAAc,IAAA,WAAA,MAAA9jB,GAAA,QAAAyiB,YAAAphB,KAAAkH,OAAAjC,IAAA,SAAAzG,GAAAwB,KAAAkH,KAAAvI,EAAA,QAAA0iB,YAAA7iB,MAAAmjB,IAAA,SAAAc,IAAA,WAAA,MAAAziB,MAAAuH,MAAAtC,IAAA,SAAAzG,GAAAwB,KAAAuH,KAAA/I,KAAAmjB,IAAA,UAAAc,IAAA,WAAA,MAAAziB,MAAAuH,KAAAvH,KAAAslB,UAAArgB,IAAA,SAAAzG,GAAAwB,KAAAslB,SAAA9mB,EAAAwB,KAAAuH,SAAA/I,IAAAD,GAAAmnB,KAAA7mB,GAAA,SAAAL,EAAAD,EAAAE,GAAA,YAAA,SAAAC,GAAAF,EAAAD,GAAA,KAAAC,YAAAD,IAAA,KAAA,IAAAgjB,WAAA,qCAAAtH,OAAAmE,eAAA7f,EAAA,cAAA+M,OAAA,IAAA/M,EAAAgmB,UAAA,EAAA,IAAAvlB,GAAA,WAAA,QAAAR,GAAAA,EAAAD,GAAA,IAAA,GAAAE,GAAA,EAAAA,EAAAF,EAAAgB,OAAAd,IAAA,CAAA,GAAAC,GAAAH,EAAAE,EAAAC,GAAA8iB,WAAA9iB,EAAA8iB,aAAA,EAAA9iB,EAAA+iB,cAAA,EAAA,SAAA/iB,KAAAA,EAAAgjB,UAAA,GAAAzH,OAAAmE,eAAA5f,EAAAE,EAAAijB,IAAAjjB,IAAA,MAAA,UAAAH,EAAAE,EAAAC,GAAA,MAAAD,IAAAD,EAAAD,EAAAqjB,UAAAnjB,GAAAC,GAAAF,EAAAD,EAAAG,GAAAH,MAAAO,EAAAL,EAAA,GAAAG,EAAAH,EAAA,GAAAE,EAAAF,EAAA,GAAAI,EAAAJ,EAAA,GAAAkZ,EAAAlZ,EAAA,GAAA8kB,EAAA,WAAA,QAAA/kB,KAAA,GAAAD,GAAAwK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,GAAAtK,EAAAsK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,IAAA,CAAArK,GAAAsB,KAAAxB,GAAAwB,KAAAuF,KAAAhH,EAAAyB,KAAA4G,SAAA5G,KAAA2lB,kBAAA3lB,KAAA4lB,iBAAAnnB,EAAA,MAAAO,GAAAR,IAAAmjB,IAAA,OAAArW,MAAA,SAAA9M,EAAAC,GAAA,GAAAC,GAAAqK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,EAAA/J,EAAA+J,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,EAAAxK,EAAA,GAAAM,GAAA6mB,KAAAlnB,EAAAC,EAAAC,EAAAM,EAAA,QAAA,EAAAF,EAAAwiB,cAAAthB,KAAA4G,MAAArI,GAAAyB,QAAA2hB,IAAA,SAAArW,MAAA,SAAA9M,EAAAD,GAAA,GAAAE,GAAAsK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,EAAArK,EAAA,GAAAG,GAAA6mB,KAAAlnB,EAAAD,EAAA,EAAAE,EAAA,QAAA,EAAAK,EAAAwiB,cAAAthB,KAAA4G,MAAAlI,GAAAsB,QAAA2hB,IAAA,UAAArW,MAAA,SAAA9M,EAAAD,GAAA,IAAA,GAAAE,GAAA,EAAAA,EAAAuB,KAAA4G,MAAArH,OAAAd,IAAA,CAAA,GAAAC,GAAAsB,KAAA4G,MAAAnI,EAAA,IAAAC,EAAAmnB,MAAArnB,IAAA,IAAAE,EAAA4mB,SAAA,CAAA5mB,EAAA0K,QAAA7K,CAAA,QAAA,MAAAyB,SAAA2hB,IAAA,KAAArW,MAAA,SAAA9M,EAAAD,EAAAG,GAAAsB,KAAA2lB,eAAAjD,eAAAlkB,KAAAwB,KAAA2lB,eAAAnnB,MAAA,IAAAC,GAAA,GAAAG,GAAA+jB,QAAAnkB,EAAAD,EAAAG,EAAA,QAAA,EAAAI,EAAAwiB,cAAAthB,KAAA2lB,eAAAnnB,GAAAC,GAAAuB,QAAA2hB,IAAA,QAAArW,MAAA,SAAA9M,GAAA,MAAAwB,MAAA4lB,iBAAApnB,EAAAwB,QAAA2hB,IAAA,QAAArW,MAAA,SAAA9M,GAAA,MAAAwB,MAAA4G,MAAA0d,QAAA,SAAA/lB,GAAAA,EAAAgJ,MAAA/I,EAAAD,EAAA+mB,UAAA9mB,IAAAwB,QAAA2hB,IAAA,QAAArW,MAAA,WAAA,GAAA/M,GAAAwK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA,EAAAtK,EAAAsK,UAAAxJ,OAAA,OAAA,KAAAwJ,UAAA,GAAAA,UAAA,GAAA/I,KAAAslB,SAAA5mB,EAAAqH,KAAA5E,IAAAnB,KAAA4G,MAAAkf,UAAA,SAAAtnB,GAAA,MAAAA,GAAA+I,MAAAhJ,IAAA,GAAAS,EAAAgB,KAAA4G,MAAAkf,UAAA,SAAAtnB,GAAA,MAAAA,GAAA4K,SAAA3K,IAAA,EAAAK,EAAA,GAAAN,GAAAwB,KAAAuF,KAAA,OAAAzG,GAAA8H,MAAA5G,KAAA4G,MAAA4e,MAAA9mB,EAAAM,GAAAF,EAAA8H,MAAA0d,QAAA,SAAA9lB,GAAA,MAAAA,GAAA+I,KAAA/I,EAAA+I,KAAAhJ,IAAAO,KAAA6iB,IAAA,SAAArW,MAAA,SAAA9M,EAAAD,GAAA,QAAAE,GAAAD,GAAA,GAAAD,GAAAwH,KAAAsO,MAAA3V,EAAAF,GAAAC,EAAAsH,KAAA5E,IAAA5C,EAAAS,EAAA,EAAA,OAAAA,GAAAT,EAAAE,EAAA,GAAAC,GAAAH,EAAAsgB,KAAA,GAAAtgB,EAAAqgB,KAAA5f,EAAA,GAAA,IAAAgB,KAAA4lB,kBAAApnB,EAAAomB,WAAA,EAAA5kB,KAAA4lB,mBAAA,EAAAjnB,EAAA0kB,OAAArjB,KAAA+lB,QAAA,SAAAxnB,GAAAC,EAAAwnB,UAAA,EAAAznB,EAAAgH,KAAA9G,EAAAF,EAAAgJ,MAAAxB,KAAAsO,MAAA,IAAA9V,EAAA8I,YAAArH,KAAAimB,SAAA,SAAA1nB,GAAAC,EAAA0nB,WAAA,EAAA3nB,EAAAgH,KAAA9G,EAAAF,EAAAgJ,YAAAoa,IAAA,UAAAc,IAAA,WAAA,GAAAjkB,KAAA,OAAAwB,MAAA4G,MAAA0d,QAAA,SAAA/lB,GAAAC,EAAAuY,MAAAxP,KAAAhJ,EAAA4K,OAAAjC,KAAA3I,EAAA2I,KAAA3B,KAAAhH,EAAAgH,KAAA8B,SAAA9I,EAAA8I,aAAA7I,KAAAmjB,IAAA,WAAAc,IAAA,WAAA,GAAAjkB,KAAA,OAAAwB,MAAA4G,MAAA0d,QAAA,SAAA/lB,GAAAC,EAAAuY,MAAAxP,KAAAhJ,EAAA6K,QAAAlC,KAAA3I,EAAA2I,KAAA3B,KAAAhH,EAAAgH,SAAA/G,KAAAmjB,IAAA,SAAAc,IAAA,WAAA,MAAAziB,MAAA4G,MAAArH,UAAAoiB,IAAA,YAAAc,IAAA,WAAA,GAAAziB,KAAA4G,MAAArH,OAAA,CAAA,MAAAS,MAAA4G,MAAA,GAAAuC,OAAA,MAAA,MAAAwY,IAAA,WAAAc,IAAA,WAAA,GAAAziB,KAAA4G,MAAArH,OAAA,CAAA,MAAAS,MAAA4G,MAAA5G,KAAA4G,MAAArH,OAAA,GAAA6J,QAAA,MAAA,MAAAuY,IAAA,aAAAc,IAAA,WAAA,MAAA9K,GAAA0G,oBAAAre,KAAA4lB,mBAAA3gB,IAAA,SAAAzG,GAAA,GAAAD,GAAAoZ,EAAA0G,oBAAA8H,QAAA3nB,IAAA,IAAAD,IAAAyB,KAAA4lB,iBAAArnB,MAAAojB,IAAA,mBAAAc,IAAA,WAAA,MAAA9K,GAAA2G,qBAAAvY,KAAAsO,MAAArU,KAAA4lB,iBAAA,QAAApnB,IAAAD,GAAAgmB,MAAAhB,GAAA,SAAA/kB,EAAAD,EAAAE,IAAA,SAAAD,GAAA,GAAAC,OAAA,SAAAD,GAAA,GAAAD,GAAAC,EAAA4nB,eAAA,GAAA3nB,GAAAD,EAAA6nB,iBAAA,IAAA7nB,EAAA8nB,gBAAA,GAAAC,qBAAAznB,EAAA,GAAA8Y,EAAA,GAAAD,EAAA,GAAAzC,EAAA,GAAA3W,EAAA,GAAAU,EAAA,GAAAghB,EAAA,IAAAuG,kBAAA,SAAAhoB,GAAA,GAAAD,GAAA,4BAAAqiB,KAAApiB,GAAAE,EAAAH,EAAA,GAAAsiB,cAAA7hB,EAAAT,EAAA,IAAA,EAAA,OAAA,IAAAuiB,SAAAviB,EAAA,GAAA,IAAAE,EAAA8nB,oBAAA7nB,IAAA,KAAAM,EAAAynB,OAAA,EAAA,GAAA,GAAA,GAAAznB,EAAAO,QAAAmnB,gBAAA,SAAAloB,GAAA,MAAA,gBAAAA,IAAA,SAAAsgB,KAAAtgB,GAAAC,EAAA+nB,kBAAAhoB,GAAAsiB,SAAAtiB,EAAA,KAAAmoB,qBAAAC,GAAA,IAAAC,GAAA,KAAAC,GAAA,IAAAC,GAAA,KAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,KAAAC,GAAA,IAAAC,GAAA,KAAAC,GAAA,IAAAC,GAAA,KAAAC,GAAA,KAAAC,sBAAAlH,KAAA,KAAArB,KAAA,KAAAI,KAAA,KAAAQ,KAAA,KAAAK,KAAA,MAAAuH,kBAAA,SAAAjpB,EAAAD,GAAA,GAAAG,GAAAM,EAAA,EAAAF,EAAAN,EAAAD,EAAAA,IAAA,CAAA,OAAAC,GAAA,KAAAQ,EAAA+G,KAAAsO,MAAA7V,EAAA,IAAA,EAAAM,EAAAN,EAAA,GAAAQ,GAAAN,EAAAD,EAAAkoB,oBAAA7nB,GAAAP,GAAAG,EAAAynB,QAAA,KAAA,IAAAznB,EAAAD,EAAA+oB,qBAAA9oB,IAAAA,EAAAM,GAAA0oB,YAAA,SAAAlpB,GAAA,GAAAD,GAAAwH,KAAAsO,MAAA,IAAA7V,GAAAC,IAAA,IAAAA,EAAAkpB,QAAA,IAAAppB,GAAAA,IAAA,QAAAA,EAAA,MAAAE,EAAAc,OAAA,GAAAd,EAAAsY,KAAA,EAAA,OAAAtY,IAAAmpB,YAAA,SAAAppB,GAAA,GAAAD,GAAAC,CAAA,QAAA,KAAAA,EAAA,GAAA,CAAAD,EAAA,CAAA,KAAA,GAAAE,GAAA,EAAAC,EAAAF,EAAAe,OAAA,EAAAb,GAAA,IAAAD,IAAAC,EAAAH,GAAAC,EAAAC,IAAAC,EAAA,MAAAqH,MAAAsO,MAAA,IAAA7V,IAAAqpB,UAAA,SAAArpB,GAAA,MAAA2lB,QAAAC,aAAAC,MAAA,KAAA7lB,IAAAspB,UAAA,SAAAtpB,EAAAD,GAAA,GAAAA,EAAA,KAAAC,EAAAe,OAAA,EAAAhB,GAAAC,EAAA,IAAAA,CAAA,KAAA,GAAAC,MAAAC,EAAAF,EAAAe,OAAA,EAAAb,GAAA,EAAAA,GAAA,EAAA,CAAA,GAAAM,GAAA,IAAAN,EAAAF,EAAAE,GAAAF,EAAAE,EAAA,GAAAF,EAAAE,EAAAD,GAAAkpB,QAAA7G,SAAA9hB,EAAA,KAAA,MAAAP,IAAAspB,kBAAA,SAAAvpB,GAAA,IAAA,GAAAD,GAAA,IAAAC,EAAAA,IAAA,GAAAD,IAAA,EAAAA,GAAA,IAAAC,EAAA,GAAA,KAAA,GAAAC,MAAAA,EAAAsY,KAAA,IAAAxY,GAAA,IAAAA,GAAAA,IAAA,CAAA,OAAAE,MAAAC,EAAA,SAAAF,GAAA,MAAAwB,YAAAxB,GAAA,OAAAA,EAAAkC,UAAA,KAAAlC,EAAAkC,MAAA,OAAAlC,EAAAwpB,aAAA,KAAAxpB,EAAAwpB,SAAA,OAAAxpB,EAAAypB,YAAA,KAAAzpB,EAAAypB,SAAAjoB,KAAAkoB,QAAA1pB,EAAA+I,MAAAvH,KAAAmoB,QAAA3pB,EAAAkC,MAAAV,KAAAooB,WAAA5pB,EAAAwpB,SAAAhoB,KAAAqoB,UAAA7pB,EAAAypB,QAAAjoB,KAAAsoB,UAAA9pB,EAAA+pB,UAAA,GAAA7pB,GAAAF,GAAAE,GAAA8pB,SAAA,IAAA9pB,EAAA+pB,QAAA,IAAA/pB,EAAAgqB,YAAA,IAAAhqB,EAAAiqB,WAAA,IAAAjqB,EAAAkqB,eAAA,IAAAlqB,EAAAmqB,mBAAA,IAAAnqB,EAAAoqB,WAAA,IAAApqB,EAAAkjB,UAAAsG,QAAA,SAAA1pB,GAAAwB,KAAAuH,KAAA9I,EAAAspB,kBAAAvpB,GAAA,IAAAE,EAAAkjB,UAAAuG,QAAA,SAAA3pB,GAAA,GAAAA,EAAAE,EAAA8pB,UAAAhqB,EAAAE,EAAAoqB,WAAA,KAAA,IAAA5pB,OAAA,mCAAAV,EAAAwB,MAAAU,KAAAlC,GAAAE,EAAAkjB,UAAAwG,WAAA,SAAA5pB,GAAA,GAAA,EAAAA,GAAAA,EAAA,GAAA,KAAA,IAAAU,OAAA,4BAAAc,MAAAgoB,QAAAxpB,GAAAE,EAAAkjB,UAAAyG,UAAA,SAAA7pB,GAAAwB,KAAAioB,OAAAzpB,GAAAE,EAAAkjB,UAAA0G,UAAA,SAAA9pB,GAAAwB,KAAAuoB,OAAA/pB,GAAAE,EAAAkjB,UAAAwD,QAAA,WAAA,GAAA5mB,MAAAD,EAAAyB,KAAAU,KAAA,GAAAV,KAAAgoB,OAAA,OAAAxpB,GAAAuY,KAAAsN,MAAA7lB,EAAAwB,KAAAuH,MAAA/I,EAAAuY,KAAAxY,GAAAC,EAAAuY,KAAA/W,KAAAioB,YAAA,KAAAjoB,KAAAuoB,QAAA,OAAAvoB,KAAAuoB,QAAA/pB,EAAAuY,KAAA/W,KAAAuoB,QAAA/pB,EAAA,IAAAQ,GAAA,SAAAR,GAAA,IAAAwB,KAAA,MAAA,IAAAhB,GAAAR,EAAAwB,MAAAkoB,QAAA1pB,EAAA+I,MAAAvH,KAAAmoB,QAAA3pB,EAAAkC,MAAAV,KAAA+oB,QAAAvqB,EAAAwC,MAAAhC,GAAAgqB,SAAA,EAAAhqB,EAAAiqB,KAAA,EAAAjqB,EAAAkqB,UAAA,EAAAlqB,EAAAmqB,WAAA,EAAAnqB,EAAAoqB,WAAA,EAAApqB,EAAAqqB,MAAA,EAAArqB,EAAAsqB,OAAA,EAAAtqB,EAAAuqB,UAAA,EAAAvqB,EAAAwqB,eAAA,GAAAxqB,EAAAyqB,aAAA,GAAAzqB,EAAA0qB,MAAA,GAAA1qB,EAAA2qB,MAAA,GAAA3qB,EAAA4qB,SAAA,GAAA5qB,EAAA6qB,QAAA,GAAA7qB,EAAA8qB,UAAA,IAAA9qB,EAAA4iB,UAAAsG,QAAA,SAAA1pB,GAAAwB,KAAAuH,KAAA9I,EAAAspB,kBAAAvpB,GAAA,IAAAQ,EAAA4iB,UAAAuG,QAAA,SAAA3pB,GAAAwB,KAAAU,KAAAlC,GAAAQ,EAAA4iB,UAAAmH,QAAA,SAAAvqB,GAAAwB,KAAAgB,KAAAxC,GAAAQ,EAAA4iB,UAAAwD,QAAA,WAAA,IAAAplB,KAAAU,KAAA,KAAA,IAAAxB,OAAA,qCAAA,IAAAV,KAAA,IAAAA,EAAAuY,KAAAsN,MAAA7lB,EAAAwB,KAAAuH,MAAA/I,EAAAuY,KAAA,IAAA/W,KAAAU,MAAAwX,MAAA6R,QAAA/pB,KAAAgB,MAAAxC,EAAAuY,KAAA/W,KAAAgB,KAAAzB,QAAAf,EAAAuY,KAAAsN,MAAA7lB,EAAAwB,KAAAgB,UAAA,IAAA,gBAAAhB,MAAAgB,KAAAxC,EAAAuY,KAAA,EAAA/W,KAAAgB,UAAA,IAAA,OAAAhB,KAAAgB,UAAA,KAAAhB,KAAAgB,KAAA,CAAAxC,EAAAuY,KAAA/W,KAAAgB,KAAAzB,OAAA,IAAAhB,GAAAyB,KAAAgB,KAAAgpB,MAAA,IAAAzE,IAAA,SAAA/mB,GAAA,MAAAA,GAAA6mB,WAAA,IAAA7mB,GAAAuY,KAAAsN,MAAA7lB,EAAAD,OAAAC,GAAAuY,KAAA,EAAA,OAAAvY,GAAA,IAAAM,GAAA,SAAAN,GAAA,IAAAwB,KAAA,MAAA,IAAAlB,GAAAN,EAAA,IAAAD,GAAAC,KAAAwB,MAAAiqB,OAAA1rB,EAAA0rB,WAAAnrB,GAAAorB,aAAA,GAAA,GAAA,IAAA,KAAAprB,EAAAqrB,WAAA,EAAA,IAAA,GAAA,GAAArrB,EAAA8iB,UAAAwI,SAAA,SAAA5rB,GAAA,MAAAwB,MAAAiqB,OAAAlT,KAAAvY,GAAAwB,MAAAlB,EAAA8iB,UAAAoE,UAAAlnB,EAAA8iB,UAAAzY,OAAA,SAAA3K,EAAAQ,EAAAF,EAAAF,GAAA,MAAAoB,MAAAiqB,OAAAlT,KAAA,GAAArY,IAAAgC,KAAAhC,EAAA+pB,QAAAT,QAAAxpB,EAAAypB,OAAAxpB,EAAAioB,gBAAA1nB,GAAAupB,OAAA3pB,GAAAL,EAAAgJ,KAAAzI,GAAA,KAAAkB,MAAAlB,EAAA8iB,UAAAsE,WAAApnB,EAAA8iB,UAAAxY,QAAA,SAAA5K,EAAAQ,EAAAF,EAAAF,GAAA,MAAAoB,MAAAiqB,OAAAlT,KAAA,GAAArY,IAAAgC,KAAAhC,EAAA8pB,SAAAR,QAAAxpB,EAAAypB,OAAAxpB,EAAAioB,gBAAA1nB,GAAAupB,OAAA3pB,GAAAL,EAAAgJ,KAAAzI,GAAA,KAAAkB,MAAAlB,EAAA8iB,UAAAyI,QAAAvrB,EAAA8iB,UAAA7a,KAAA,SAAAvI,EAAAD,EAAAE,EAAAC,EAAAM,GAAA,MAAAgB,MAAAmJ,OAAA3K,EAAAD,EAAAG,EAAAM,GAAAP,GAAAuB,KAAAoJ,QAAA5K,EAAAD,EAAAE,EAAAO,GAAAgB,MAAAlB,EAAA8iB,UAAA0I,SAAAxrB,EAAA8iB,UAAA2I,MAAA,SAAA/rB,EAAAD,EAAAE,EAAAC,GAAA,IAAAwZ,MAAA6R,QAAAxrB,KAAAA,EAAAgB,OAAA,KAAA,IAAAL,OAAA,oCAAA,OAAAX,GAAA+lB,QAAA,SAAA/lB,GAAAyB,KAAAmJ,OAAA3K,EAAAD,EAAA,EAAAG,IAAAsB,MAAAzB,EAAA+lB,QAAA,SAAA/lB,EAAAG,GAAA,IAAAA,EAAAsB,KAAAoJ,QAAA5K,EAAAD,EAAAE,GAAAuB,KAAAoJ,QAAA5K,EAAAD,IAAAyB,MAAAA,MAAAlB,EAAA8iB,UAAA4I,cAAA1rB,EAAA8iB,UAAAgD,WAAA,SAAApmB,EAAAD,EAAAE,GAAA,MAAAuB,MAAAiqB,OAAAlT,KAAA,GAAArY,IAAAgC,KAAAhC,EAAAkqB,eAAAZ,QAAAxpB,EAAAypB,OAAA1pB,EAAAgJ,KAAA9I,GAAA,KAAAuB,MAAAlB,EAAA8iB,UAAAsD,SAAApmB,EAAA8iB,UAAA6I,MAAA,SAAAjsB,EAAAD,GAAA,MAAAyB,MAAAiqB,OAAAlT,KAAA,GAAA/X,IAAA0B,KAAA1B,EAAA0qB,MAAA1oB,KAAAvC,EAAAipB,YAAAlpB,GAAA+I,KAAAhJ,GAAA,KAAAyB,MAAAlB,EAAA8iB,UAAAwD,QAAA,WAAA,GAAA5mB,GAAA,EAAAD,KAAAG,EAAAI,EAAAorB,YAAAlrB,EAAAF,EAAAqrB,UAAAvrB,EAAA,SAAAH,GAAA,GAAAC,GAAAD,EAAA2mB,SAAA5mB,IAAAE,EAAAa,OAAAhB,EAAAwY,KAAAsN,MAAA9lB,EAAAG,GAAAsB,MAAAiqB,OAAA3F,QAAA1lB,GAAAJ,GAAAQ,EAAAO,MAAA,IAAAZ,GAAAF,EAAAqpB,UAAAtpB,EAAAksB,SAAA,IAAA,EAAA,OAAAhsB,GAAAisB,OAAAhsB,EAAAJ,EAAAS,GAAA,IAAAJ,GAAA,SAAAJ,GAAA,IAAAwB,KAAA,MAAA,IAAApB,GAAAJ,EAAA,IAAAD,GAAAC,KAAA,IAAAD,EAAAymB,MAAA,CAAA,GAAA,gBAAAzmB,GAAAymB,MAAA,KAAA,IAAA9lB,OAAA,mCAAA,IAAAX,EAAAymB,OAAA,GAAAzmB,EAAAymB,OAAA,OAAAzmB,EAAAymB,MAAA,GAAA,EAAA,KAAA,IAAA9lB,OAAA,0DAAAc,KAAAglB,MAAAzmB,EAAAymB,OAAA,IAAAhlB,KAAAiJ,OAAA1K,EAAA0K,WAAArK,GAAAgsB,YAAA,OAAAhsB,EAAAisB,eAAA,UAAAjsB,EAAAksB,UAAA,OAAAlsB,EAAAmsB,UAAA,MAAAnsB,EAAAgjB,UAAAqD,SAAA,SAAAzmB,GAAA,MAAAA,IAAAwB,KAAAiJ,OAAA8N,KAAAvY,GAAAwB,OAAAxB,EAAA,GAAAM,GAAAkB,KAAAiJ,OAAA8N,KAAAvY,GAAAA,IAAAI,EAAAgjB,UAAAwD,QAAA,WAAA,GAAA5mB,GAAAwB,KAAAiJ,OAAA1J,OAAAmrB,SAAA,IAAAnsB,EAAAK,EAAAgsB,YAAAhsB,EAAAisB,cAAA,OAAAtsB,IAAAuiB,SAAAtiB,EAAA,IAAA,EAAAI,EAAAmsB,UAAAnsB,EAAAksB,UAAAvsB,GAAAE,EAAAopB,UAAAppB,EAAAqpB,UAAAtpB,EAAA,IAAAD,GAAA4lB,OAAAC,aAAApkB,KAAAglB,MAAA,IAAAhlB,KAAAglB,MAAA,KAAAhlB,KAAAiJ,OAAAqb,QAAA,SAAA9lB,GAAAD,GAAAE,EAAAopB,UAAArpB,EAAA4mB,aAAA7mB,GAAAC,EAAAwsB,KAAAvsB,EAAAD,EAAAumB,KAAAnmB,EAAAJ,EAAA+lB,MAAAzlB,EAAAN,EAAAysB,MAAAvsB,EAAAF,EAAA0sB,UAAAlsB,GAAAP,OAAA,KAAAD,GAAA,OAAAA,EAAAA,EAAAa,QAAAZ,MAAA,KAAAF,GAAA,OAAAA,EAAAA,EAAAE,EAAAuB,KAAAue,KAAA9f,IAAAa,KAAAf,EAAAE,EAAA,IAAAD,KAAA,SAAAA,EAAAD,GAAA,QAAAE,GAAAD,GAAA,QAAAD,GAAAC,GAAA,GAAAD,GAAAC,EAAA2sB,KAAA,GAAA1sB,EAAAD,EAAA4sB,WAAA,QAAAlN,GAAA3f,EAAAgB,OAAAd,EAAAuC,KAAAxC,EAAA2sB,KAAA1sB,IAAA,GAAAO,EAAAqsB,QAAA3sB,EAAAF,EAAA,IAAAM,GAAAP,EAAA8sB,OAAA,IAAA,QAAAvsB,EAAAof,IAAA,GAAApf,EAAAS,OAAA,KAAA,kCAAA,IAAAX,GAAAF,EAAAI,EAAAkC,MAAArC,EAAAC,EAAA0sB,YAAAzsB,EAAAD,EAAA0sB,YAAA3T,EAAA/Y,EAAA0sB,WAAA,IAAA,MAAA3T,EAAA,KAAA,+DAAAkL,cAAAlL,CAAA,KAAA,GAAA4L,IAAAgI,WAAA5sB,EAAA6sB,WAAA3sB,EAAAgkB,aAAAA,cAAA5jB,KAAAiW,EAAA,EAAAA,EAAAqO,EAAAiI,WAAAtW,IAAA,CAAAjW,EAAAiW,KAAA,IAAA9V,GAAAb,EAAA8sB,OAAA,IAAA,QAAAjsB,EAAA8e,GAAA,KAAA,yCAAA9e,EAAA8e,EAAA,KAAA,GAAAlG,GAAAtZ,EAAAU,EAAA4B,OAAAgX,EAAAyT,OAAA,CAAA,GAAAtN,GAAA,SAAA3f,GAAA,GAAAD,KAAAA,GAAAiX,UAAAhX,EAAAktB,YAAA,IAAAjtB,GAAAD,EAAAmtB,UAAA,IAAA,MAAA,IAAAltB,GAAA,CAAA,GAAA,KAAAA,EAAA,CAAAF,EAAAmC,KAAA,MAAA,IAAAhC,GAAAF,EAAAmtB,WAAA7sB,EAAAN,EAAAktB,YAAA,QAAAhtB,GAAA,IAAA,GAAA,GAAAH,EAAAukB,QAAA,iBAAA,GAAAhkB,EAAA,KAAA,sDAAAA,CAAA,OAAAP,GAAA+Y,OAAA9Y,EAAA8sB,YAAA/sB,CAAA,KAAA,GAAA,MAAAA,GAAAukB,QAAA,OAAAvkB,EAAAimB,KAAAhmB,EAAA2sB,KAAArsB,GAAAP,CAAA,KAAA,GAAA,MAAAA,GAAAukB,QAAA,kBAAAvkB,EAAAimB,KAAAhmB,EAAA2sB,KAAArsB,GAAAP,CAAA,KAAA,GAAA,MAAAA,GAAAukB,QAAA,YAAAvkB,EAAAimB,KAAAhmB,EAAA2sB,KAAArsB,GAAAP,CAAA,KAAA,GAAA,MAAAA,GAAAukB,QAAA,iBAAAvkB,EAAAimB,KAAAhmB,EAAA2sB,KAAArsB,GAAAP,CAAA,KAAA,GAAA,MAAAA,GAAAukB,QAAA,SAAAvkB,EAAAimB,KAAAhmB,EAAA2sB,KAAArsB,GAAAP,CAAA,KAAA,GAAA,MAAAA,GAAAukB,QAAA,SAAAvkB,EAAAimB,KAAAhmB,EAAA2sB,KAAArsB,GAAAP,CAAA,KAAA,GAAA,MAAAA,GAAAukB,QAAA,WAAAvkB,EAAAimB,KAAAhmB,EAAA2sB,KAAArsB,GAAAP,CAAA,KAAA,IAAA,GAAAA,EAAAukB,QAAA,oBAAA,GAAAhkB,EAAA,KAAA,yDAAAA,CAAA,OAAAP,GAAAypB,QAAAxpB,EAAAmtB,WAAAptB,CAAA,KAAA,IAAA,GAAAA,EAAAukB,QAAA,aAAA,GAAAhkB,EAAA,KAAA,kDAAAA,CAAA,OAAAP,EAAA,KAAA,IAAA,GAAAA,EAAAukB,QAAA,WAAA,GAAAhkB,EAAA,KAAA,gDAAAA,CAAA,OAAAP,GAAA2kB,qBAAA1kB,EAAAmtB,YAAA,KAAAntB,EAAAmtB,YAAA,GAAAntB,EAAAmtB,WAAAptB,CAAA,KAAA,IAAA,GAAAA,EAAAukB,QAAA,cAAA,GAAAhkB,EAAA,KAAA,mDAAAA,CAAA,IAAAF,GAAAJ,EAAAmtB,UAAA,OAAAptB,GAAAqtB,WAAAC,EAAA,GAAAC,GAAA,GAAA3J,GAAA,GAAA4J,GAAA,IAAA,GAAAntB,GAAAL,EAAAytB,KAAA,GAAAptB,EAAAL,EAAA2C,IAAA1C,EAAAmtB,WAAAptB,EAAA0tB,IAAAztB,EAAAmtB,WAAAptB,EAAA2tB,MAAA1tB,EAAAmtB,WAAAptB,EAAA4tB,SAAA3tB,EAAAmtB,WAAAptB,CAAA,KAAA,IAAA,GAAAA,EAAAukB,QAAA,gBAAA,GAAAhkB,EAAA,KAAA,qDAAAA,CAAA,OAAAP,GAAAykB,UAAAxkB,EAAAmtB,WAAAptB,EAAA0kB,YAAAld,KAAA4D,IAAA,EAAAnL,EAAAmtB,YAAAptB,EAAA6tB,UAAA5tB,EAAAmtB,WAAAptB,EAAA8tB,cAAA7tB,EAAAmtB,WAAAptB,CAAA,KAAA,IAAA,GAAAA,EAAAukB,QAAA,eAAA,GAAAhkB,EAAA,KAAA,oDAAAA,CAAA,OAAAP,GAAAojB,IAAAnjB,EAAAmtB,UAAA,GAAAptB,EAAAgT,MAAA/S,EAAAmtB,WAAAptB,CAAA,KAAA,KAAA,MAAAA,GAAAukB,QAAA,oBAAAvkB,EAAAyC,KAAAxC,EAAA2sB,KAAArsB,GAAAP,CAAA,SAAA,MAAAA,GAAAukB,QAAA,UAAAvkB,EAAAyC,KAAAxC,EAAA2sB,KAAArsB,GAAAP,EAAA,MAAAA,GAAAyC,KAAAxC,EAAA2sB,KAAArsB,GAAAP,EAAA,GAAA,KAAAE,EAAA,CAAAF,EAAAmC,KAAA,OAAA,IAAA5B,GAAAN,EAAAktB,YAAA,OAAAntB,GAAAyC,KAAAxC,EAAA2sB,KAAArsB,GAAAP,EAAA,GAAA,KAAAE,EAAA,CAAAF,EAAAmC,KAAA,cAAA,IAAA5B,GAAAN,EAAAktB,YAAA,OAAAntB,GAAAyC,KAAAxC,EAAA2sB,KAAArsB,GAAAP,EAAA,KAAA,sCAAAE,EAAA,GAAAE,EAAA,KAAA,IAAAF,IAAAE,EAAAF,EAAAA,EAAAO,IAAAL,EAAAH,EAAAmtB,WAAA3sB,EAAAP,EAAA,IAAAI,GAAAJ,GAAA,CAAA,QAAAF,EAAAypB,QAAA,GAAAvpB,EAAAF,EAAAmC,KAAA,UAAA7B,GAAA,IAAA,GAAA,MAAAN,GAAAukB,QAAA,UAAAvkB,EAAAkmB,WAAA9lB,EAAAJ,EAAA8I,SAAA7I,EAAAmtB,WAAAptB,CAAA,KAAA,GAAA,MAAAA,GAAAkmB,WAAA9lB,EAAAJ,EAAA8I,SAAA7I,EAAAmtB,WAAA,GAAAptB,EAAA8I,SAAA9I,EAAAukB,QAAA,UAAAvkB,EAAAukB,QAAA,SAAAvkB,CAAA,KAAA,IAAA,MAAAA,GAAAukB,QAAA,iBAAAvkB,EAAAkmB,WAAA9lB,EAAAJ,EAAAkX,OAAAjX,EAAAmtB,WAAAptB,CAAA,KAAA,IAAA,MAAAA,GAAAukB,QAAA,aAAAvkB,EAAAmmB,eAAA/lB,EAAAJ,EAAA+M,MAAA9M,EAAAmtB,WAAAptB,CAAA,KAAA,IAAA,MAAAA,GAAAukB,QAAA,gBAAAvkB,EAAAumB,cAAAnmB,EAAAJ,CAAA,KAAA,IAAA,MAAAA,GAAAukB,QAAA,oBAAAvkB,EAAAkX,OAAA9W,EAAAJ,CAAA,KAAA,IAAA,MAAAA,GAAAukB,QAAA,YAAAvkB,EAAA+M,MAAA3M,GAAAH,EAAAmtB,YAAA,GAAAptB,CAAA,SAAA,KAAA,iCAAAM,IAAAmZ,EAAA/Y,GAAAiW,GAAA6B,KAAAoH,IAAA,OAAAyE,OAAAW,EAAAta,OAAAhK,GAAA,QAAAP,GAAAF,GAAA,QAAAD,GAAAA,GAAA,GAAAE,GAAAD,EAAAioB,OAAA9nB,EAAAJ,EAAA,OAAAI,IAAAJ,EAAAE,EAAA,QAAAA,KAAA,GAAAF,IAAAC,EAAA6mB,WAAA1mB,IAAA,KAAAH,EAAA6mB,WAAA1mB,EAAA,IAAA,KAAAH,EAAA6mB,WAAA1mB,EAAA,IAAA,GAAAH,EAAA6mB,WAAA1mB,EAAA,EAAA,OAAAA,IAAA,EAAAJ,EAAA,QAAAG,KAAA,GAAAH,IAAAC,EAAA6mB,WAAA1mB,IAAA,GAAAH,EAAA6mB,WAAA1mB,EAAA,EAAA,OAAAA,IAAA,EAAAJ,EAAA,QAAAS,GAAAT,GAAA,GAAAE,GAAAD,EAAA6mB,WAAA1mB,EAAA,OAAAJ,IAAAE,EAAA,MAAAA,GAAA,KAAAE,GAAA,EAAAF,EAAA,QAAAK,KAAA,MAAAH,IAAAH,EAAAe,OAAA,QAAAX,KAAA,IAAA,GAAAJ,GAAA,IAAA,CAAA,GAAAD,GAAAS,GAAA,MAAA,IAAAT,GAAA,MAAAC,GAAAD,CAAAC,IAAA,IAAAD,EAAAC,IAAA,GAAA,GAAAG,GAAA,CAAA,QAAA8sB,IAAA3sB,EAAAqsB,KAAA5sB,EAAA6sB,UAAA3sB,EAAA6sB,UAAA5sB,EAAAitB,SAAA3sB,EAAA0sB,WAAA9sB,GAAAJ,EAAAa,QAAA,SAAAb,GAAA,MAAAC,GAAAD,KAAA,SAAAA,EAAAD,GAAAC,EAAAa,QAAA,SAAAb,GAAA,MAAAA,GAAA8tB,kBAAA9tB,EAAA+tB,UAAA,aAAA/tB,EAAAguB,SAAAhuB,EAAAiuB,YAAAjuB,EAAA8tB,gBAAA,GAAA9tB","file":"jon-trombone.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class GUI {\n\n    Init(jon, container){\n\n        if(!guify) {\n            console.log(\"Guify was not found! Add it to your page to enable a GUI for this program.\");\n            return;\n        }\n\n        this.panel = new guify.GUI({\n            title: \"Jon-Trombone\", \n            theme: \"dark\", \n            root: container,\n            width: \"80%\",\n            barMode: \"above\",\n            align: \"right\",\n            opacity: \"0.95\"\n        });\n\n        this.panel.Register({ \n            type: \"checkbox\", label: \"Mute\", \n            object: jon.trombone, property: \"muted\", \n            onChange: (data) => {\n                jon.trombone.SetMute(data);\n            } \n        });\n\n        // Jon folder\n        this.panel.Register({ type: \"folder\", label: \"Jon\" });\n        this.panel.Register([\n            { type: \"checkbox\", label: \"Move Jaw\", object: jon, property: \"moveJaw\" },\n            { type: \"range\", label: \"Jaw Speed\", object: jon, property: \"jawFlapSpeed\", min: 0, max: 100 },\n            { type: \"range\", label: \"Jaw Range\", object: jon, property: \"jawOpenOffset\", min: 0, max: 1 },\n        ], { folder: \"Jon\" });\n\n        // Voice folder\n        this.panel.Register({ type: \"folder\", label: \"Voice\" });\n        this.panel.Register([\n            { type: \"checkbox\", label: \"Wobble\", object: jon.trombone, property: \"autoWobble\" },\n            { type: \"checkbox\", label: \"Pitch Variance\", object: jon.trombone.Glottis, property: \"addPitchVariance\" },\n            { type: \"checkbox\", label: \"Tenseness Variance\", object: jon.trombone.Glottis, property: \"addTensenessVariance\" },\n            { type: \"range\", label: \"Tenseness\", object: jon.trombone.Glottis, property: \"UITenseness\", min: 0, max: 1 },\n            { type: \"range\", label: \"Vibrato\", object: jon.trombone.Glottis, property: \"vibratoAmount\", min: 0, max: 0.5 },\n            { type: \"range\", label: \"Frequency\", object: jon.trombone.Glottis, property: \"UIFrequency\", min: 1, max: 1000, step: 1 },\n            { type: \"range\", label: \"Loudness\", object: jon.trombone.Glottis, property: \"loudness\", min: 0, max: 1 },\n        ], { folder: \"Voice\" });\n\n        // Tract folder\n        this.panel.Register({ type: \"folder\", label: \"Tract\" });\n        this.panel.Register([\n            { type: \"range\", label: \"Move Speed\", object: jon.trombone.Tract, property: \"movementSpeed\", min: 1, max: 30, step: 1 },\n            { type: \"range\", label: \"Velum Target\", object: jon.trombone.Tract, property: \"velumTarget\", min: 0.001, max: 2 },\n            { type: \"range\", label: \"Target\", object: jon.trombone.TractUI, property: \"target\", min: 0.001, max: 1 },\n            { type: \"range\", label: \"Index\", object: jon.trombone.TractUI, property: \"index\", min: 0, max: 43, step: 1 },\n            { type: \"range\", label: \"Radius\", object: jon.trombone.TractUI, property: \"radius\", min: 0, max: 5, step: 1 },\n        ], { folder: \"Tract\" });\n\n        // MIDI folder\n        this.panel.Register({ type: \"folder\", label: \"MIDI\" });\n        this.panel.Register([\n            { type: \"file\", label: \"MIDI File\", fileReadFunc: \"readAsBinaryString\",\n                onChange: (data) => {\n                    jon.midiController.LoadSongDirect(data);\n                }\n            },\n            { type: \"title\", label: \"Controls\" },\n            { type: \"button\", label: \"Play\", action: () => jon.midiController.PlaySong() },\n            { type: \"button\", label: \"Stop\", action: () => jon.midiController.Stop() },\n            { type: \"button\", label: \"Restart\", action: () => jon.midiController.Restart() },\n            { type: \"title\", label: \"Options\" },\n            { type: \"range\", label: \"Track\", object: jon.midiController, property: \"currentTrack\", min: 1, max: 20, step: 1 },\n            { type: \"range\", label: \"Base Frequency\", object: jon.midiController, property: \"baseFreq\", min: 1, max: 2000, step: 1 },\n            { type: \"checkbox\", label: \"Extreme Vibrato\", object: jon, property: \"flapWhileSinging\" },\n            { type: \"checkbox\", label: \"Legato\", object: jon, property: \"legato\" },\n        ], { folder: \"MIDI\" });\n\n    }\n\n}\n\nexport let gui = new GUI();","import { ModelLoader } from \"./utils/model-loader.js\";\nimport { PinkTrombone } from \"./pink-trombone/pink-trombone.js\";\nimport { MidiController } from \"./midi/midi-controller.js\";\nimport { TTSController } from \"./tts/tts-controller.js\";\nimport { gui } from \"./gui.js\";\n\nclass JonTrombone {\n\n    constructor(container, finishedCallback) {\n        this.container = container;\n        this.container.style.position = \"relative\";\n        this.container.style.cursor = \"default\";\n\n        // Set up renderer and embed in container\n        this.renderer = new THREE.WebGLRenderer( { alpha: true } );\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n        this.renderer.setClearColor(0x000000, 0);\n        this.container.appendChild(this.renderer.domElement);\n\n        // Set up scene and view\n        let aspect = this.container.offsetWidth / this.container.offsetHeight;\n        this.camera = new THREE.PerspectiveCamera( 45, aspect, 0.1, 100 );\n        this.scene = new THREE.Scene();\n\n        // Export scene for three js inspector\n        //window.scene = this.scene;\n\n        // Set up clock for timing\n        this.clock = new THREE.Clock();\n\n        let startDelayMS = 1000;\n        this.trombone = new PinkTrombone(this);\n        setTimeout(()=> {\n            this.trombone.StartAudio();\n            //this.trombone.SetMute(true);\n            this.moveJaw = true;\n        }, startDelayMS);\n\n        // Mute button for trombone\n        // let button = document.createElement(\"button\");\n        // button.innerHTML = \"Mute\";\n        // button.style.cssText = \"position: absolute; display: block; top: 0; left: 0;\";\n        // this.container.appendChild(button);\n        // button.addEventListener (\"click\", () => {\n        //     this.trombone.ToggleMute();\n        //     button.innerHTML = this.trombone.muted ? \"Unmute\" : \"Mute\";\n        // });\n\n        this.jawFlapSpeed = 20.0;\n        this.jawOpenOffset = 0.19;\n        this.moveJaw = false;\n        this.legato = false;\n        this.flapWhileSinging = false;\n\n        this.midiController = new MidiController(this);\n\n        // let tts = new TTSController();\n        // console.log(tts.GetGraphemes(\"Testing one two three 1 2 3\"));\n\n        this.SetUpThree();\n        this.SetUpScene();\n\n        // Start the update loop\n        this.OnUpdate();\n\n        gui.Init(this, this.container);\n    }\n\n    /**\n     * Set up non-scene config for Three.js\n     */\n    SetUpThree() {\n        if(THREE.OrbitControls !== undefined){\n            // Add orbit controls\n            this.controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n            this.controls.target.set( 0, 0, 0 );\n            this.controls.update();\n        } else {\n            console.warn(\"No THREE.OrbitControls detected. Include to allow interaction with the model.\");\n        }\n    }\n\n    /**\n     * Populates and configures objects within the scene.\n     */\n    SetUpScene() {\n\n        // Set camera position\n        this.camera.position.set( 0, 0, 0.5 );\n\n        // Lights\n        let light1 = new THREE.HemisphereLight(0xffffff, 0x444444, 1.0);\n        light1.name = \"Hemisphere Light\";\n        light1.position.set(0, 1, 0);\n        this.scene.add(light1);\n\n        let light2 = new THREE.DirectionalLight(0xffffff, 1.0);\n        light2.name = \"Directional Light\";\n        light2.position.set(0, 1, 0);\n        this.scene.add(light2);\n\n        // Load the Jon model and place it in the scene\n        ModelLoader.LoadJSON(\"../resources/jon/three/jon.json\", (object) => {\n            this.jon = object;\n            this.scene.add( this.jon );\n            this.jon.rotation.y = (THREE.Math.degToRad(15));\n\n            this.jaw = this.jon.skeleton.bones.find((obj) => {\n                return obj.name == \"Bone.006\";\n            });\n            if(this.jaw){\n                this.jawShutZ = this.jaw.position.z;\n            }\n        });\n\n\n    }\n\n    /**\n     * Called every frame. Continues indefinitely after being called once.\n     */\n    OnUpdate() {\n        let deltaTime = this.clock.getDelta();\n        requestAnimationFrame( this.OnUpdate.bind(this) );\n\n        if(this.midiController.playing){\n\n            this.notes = this.midiController.GetPitches();\n            if(this.notes != this.lastNotes){\n                // Do the note\n                if(this.notes !== undefined && this.notes.length != 0){ \n                    // Note on\n                    // Play frequency\n                    let note = this.notes[0];\n                    if(this.notes.length > 1){\n                        //console.log (\"chord\");\n                    }\n                    let freq = this.midiController.MIDIToFrequency(note.midi);\n                    //console.log(freq);\n                    this.trombone.Glottis.UIFrequency = freq;\n                    this.trombone.Glottis.loudness = note.velocity;\n                    // Open jaw\n                    this.jaw.position.z = this.jawShutZ + this.jawOpenOffset;\n                    this.trombone.TractUI.SetLipsClosed(0);\n\n                } else { \n                    // Note off\n                    if (!this.legato) this.trombone.Glottis.loudness = 0;\n                    // Close jaw\n                    this.jaw.position.z = this.jawShutZ;\n                    this.trombone.TractUI.SetLipsClosed(1);\n\n                }\n\n                this.lastNotes = this.notes;\n            }\n\n        }\n\n        if(this.jaw && this.moveJaw && (!this.midiController.playing || this.flapWhileSinging)){\n            let time = this.clock.getElapsedTime();// % 60;\n\n            // Move the jaw\n            let percent = (Math.sin(time * this.jawFlapSpeed) + 1.0) / 2.0;\n            this.jaw.position.z = this.jawShutZ + (percent * this.jawOpenOffset);\n\n            // Make the audio match the jaw position\n            this.trombone.TractUI.SetLipsClosed(1.0 - percent);\n\n        }\n\n        // Render\n        this.renderer.render(this.scene, this.camera);\n\n    }\n\n}\n\nexport { JonTrombone };","import { Detector } from \"./utils/webgl-detect.js\";\nimport { JonTrombone } from \"./jon-trombone.js\";\n\n// Optionally bundle three.js as part of the project\n//import THREELib from \"three-js\";\n//var THREE = THREELib(); // return THREE JS\n\nlet container = document.getElementById(\"jon-trombone-container\");\n\nif ( !Detector.HasWebGL() ) {\n    //exit(\"WebGL is not supported on this browser.\");\n    console.log(\"WebGL is not supported on this browser.\");\n    container.innerHTML = Detector.GetErrorHTML();\n    container.classList.add(\"no-webgl\");\n}\nelse{\n    let jonTrombone = new JonTrombone(container);\n}","let MidiConvert = require('midiconvert');\n\n/**\n * Simple class for MIDI playback.\n * The paradigm here's a bit weird; it's up to an external\n * source to actually produce audio. This class just manages\n * a timer, which GetPitch() reads to produce the \"current\"\n * note information. \n * \n * As an example of usage, jon-trombone calls PlaySong() to\n * begin, and then every frame uses GetPitch() to figure out\n * what the current frequency to produce is.\n */\nclass MidiController {\n\n    constructor(controller) {\n        this.controller = controller;\n\n        this.midi = null;\n\n        this.playing = false;\n        this.currentTrack = 5;\n\n        this.baseFreq = 440; //110 is A4\n\n        this.clock = new THREE.Clock(false);\n    }\n\n    /**\n     * Loads and parses a MIDI file.\n     */\n    LoadSong(path, callback){\n        this.Stop();\n        this.midi = null;\n        MidiConvert.load(path, (midi) => {\n            console.log(\"MIDI loaded.\");\n            this.midi = midi;\n            console.log(this.midi);\n            if(callback) callback(midi);\n        });\n    }\n\n    LoadSongDirect(file){\n        this.Stop();\n        this.midi = MidiConvert.parse(file);\n        console.log(\"MIDI loaded.\");\n        console.log(this.midi);\n    }\n\n    /**\n     * Gets the pitch for the specified track at the current time in the song.\n     */\n    GetPitch(trackIndex = this.currentTrack){\n        let time = this.GetSongProgress();\n\n        // Constrain track specified to valid range\n        trackIndex = Math.min(trackIndex, this.midi.tracks.length - 1);\n        trackIndex = Math.max(trackIndex, 0);\n\n        return this.midi.tracks[trackIndex].notes.find((item) => {\n            return item.noteOn <= time && time <= item.noteOff;\n        });\n    }\n\n    GetPitches(trackIndex = this.currentTrack){\n        let time = this.GetSongProgress();\n\n        // Constrain track specified to valid range\n        trackIndex = Math.min(trackIndex, this.midi.tracks.length - 1);\n        trackIndex = Math.max(trackIndex, 0);\n\n        return this.midi.tracks[trackIndex].notes.filter(item => \n            item.noteOn <= time && time <= item.noteOff);\n    }\n\n    PlaySong(track = 5){\n        if(this.playing){\n            return;\n        }\n\n        // If no song is specified, load a song\n        if(!this.midi){\n            console.log(\"No MIDI is loaded. Loading an example...\");\n            this.LoadSong('../resources/midi/un-owen-was-her.mid', () => {\n                this.PlaySong();\n            });\n            return;\n        }\n\n        // Turn off some stuff so the singing kind of sounds okay\n        this.EnterSingMode();\n\n        this.currentTrack = track;\n        this.clock.start();\n        this.playing = true;\n\n        console.log(\"Playback started.\");\n\n    }\n\n    GetSongProgress(){\n        return this.clock.getElapsedTime();\n    }\n\n    /**\n     * Converts from a MIDI note code to its corresponding frequency.\n     * @param {*} midiCode \n     */\n    MIDIToFrequency(midiCode){\n        return this.baseFreq * Math.pow(2, (midiCode - 69) / 12);\n    }\n\n    /**\n     * Restarts the playback.\n     */\n    Restart(){\n        console.log(\"Playback moved to beginning.\");\n        this.clock = new THREE.Clock();\n    }\n\n    /**\n     * Stops playback.\n     */\n    Stop() {\n        if(!this.playing){\n            return;\n        }\n        console.log(\"Playback stopped.\");\n        this.clock.stop();\n        this.playing = false;\n        this.ExitSingMode();\n    }\n\n    /**\n     * Sets up the trombone for singing.\n     */\n    EnterSingMode(){\n        if(this.backup_settings){\n            return;\n        }\n\n        this.backup_settings = {};\n\n        this.backup_settings[\"autoWobble\"] = this.controller.trombone.autoWobble;\n        this.controller.trombone.autoWobble = false;\n\n        this.backup_settings[\"addPitchVariance\"] = this.controller.trombone.Glottis.addPitchVariance;\n        this.controller.trombone.Glottis.addPitchVariance = false;\n\n        this.backup_settings[\"addTensenessVariance\"] = this.controller.trombone.Glottis.addTensenessVariance;\n        this.controller.trombone.Glottis.addTensenessVariance = false;\n\n        this.backup_settings[\"vibratoFrequency\"] = this.controller.trombone.Glottis.vibratoFrequency;\n        this.controller.trombone.Glottis.vibratoFrequency = 0;\n\n        this.backup_settings[\"frequency\"] = this.controller.trombone.Glottis.UIFrequency;\n\n        this.backup_settings[\"loudness\"] = this.controller.trombone.Glottis.loudness;\n    }\n\n    /**\n     * Restores the trombone to the state it was in before singing.\n     */\n    ExitSingMode(){\n        if(!this.backup_settings) {\n            return;\n        }\n        \n        this.controller.trombone.autoWobble = this.backup_settings[\"autoWobble\"];\n        this.controller.trombone.Glottis.addPitchVariance = this.backup_settings[\"addPitchVariance\"];\n        this.controller.trombone.Glottis.addTensenessVariance = this.backup_settings[\"addTensenessVariance\"];\n        this.controller.trombone.Glottis.vibratoFrequency = this.backup_settings[\"vibratoFrequency\"];\n        this.controller.trombone.Glottis.UIFrequency = this.backup_settings[\"frequency\"];\n        this.controller.trombone.Glottis.loudness = this.backup_settings[\"loudness\"];\n\n        this.backup_settings = null;\n    }\n\n}\n\nexport { MidiController };","class AudioSystem {  \n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.blockLength = 512;\n        this.blockTime = 1;\n        this.soundOn = false;\n\n    }\n\n    init() {\n        window.AudioContext = window.AudioContext||window.webkitAudioContext;\n        this.audioContext = new window.AudioContext();\n        this.trombone.sampleRate = this.audioContext.sampleRate;\n        \n        this.blockTime = this.blockLength/this.trombone.sampleRate;\n    }\n    \n    startSound() {\n        //scriptProcessor may need a dummy input channel on iOS\n        this.scriptProcessor = this.audioContext.createScriptProcessor(this.blockLength, 2, 1);\n        this.scriptProcessor.connect(this.audioContext.destination); \n        this.scriptProcessor.onaudioprocess = this.doScriptProcessor.bind(this);\n    \n        var whiteNoise = this.createWhiteNoiseNode(2 * this.trombone.sampleRate); // 2 seconds of noise\n        \n        var aspirateFilter = this.audioContext.createBiquadFilter();\n        aspirateFilter.type = \"bandpass\";\n        aspirateFilter.frequency.value = 500;\n        aspirateFilter.Q.value = 0.5;\n        whiteNoise.connect(aspirateFilter);  // Use white noise as input for filter\n        aspirateFilter.connect(this.scriptProcessor);  // Use this as input 0 for script processor\n        \n        var fricativeFilter = this.audioContext.createBiquadFilter();\n        fricativeFilter.type = \"bandpass\";\n        fricativeFilter.frequency.value = 1000;\n        fricativeFilter.Q.value = 0.5;\n        whiteNoise.connect(fricativeFilter);  // Use white noise as input\n        fricativeFilter.connect(this.scriptProcessor);  // Use this as input 1 for script processor\n        \n        whiteNoise.start(0);\n\n        // Generate just white noise (test)\n        // var wn = this.createWhiteNoiseNode(2*this.trombone.sampleRate);\n        // wn.connect(this.audioContext.destination);\n        // wn.start(0);\n    }\n    \n    createWhiteNoiseNode(frameCount) {\n        var myArrayBuffer = this.audioContext.createBuffer(1, frameCount, this.trombone.sampleRate);\n\n        var nowBuffering = myArrayBuffer.getChannelData(0);\n        for (var i = 0; i < frameCount; i++) \n        {\n            nowBuffering[i] = Math.random();// gaussian();\n        }\n\n        var source = this.audioContext.createBufferSource();\n        source.buffer = myArrayBuffer;\n        source.loop = true;\n\n        return source;\n    }\n\n    // createNode() {\n    //     let buffer = this.audioContext.createBuffer(1, frameCount, this.trombone.sampleRate);\n\n        \n\n    //     var source = this.audioContext.createBufferSource();\n    //     source.buffer = buffer;\n    //     source.loop = true;\n\n    //     return source;\n    // }\n    \n    \n    doScriptProcessor(event) {\n        var inputArray1 = event.inputBuffer.getChannelData(0);  // Glottis input\n        var inputArray2 = event.inputBuffer.getChannelData(1);  // Tract input\n        var outArray = event.outputBuffer.getChannelData(0);  // Output (mono)\n        for (var j = 0, N = outArray.length; j < N; j++)\n        {\n            var lambda1 = j/N;\n            var lambda2 = (j+0.5)/N;\n            var glottalOutput = this.trombone.Glottis.runStep(lambda1, inputArray1[j]); \n            \n            var vocalOutput = 0;\n            //Tract runs at twice the sample rate \n            this.trombone.Tract.runStep(glottalOutput, inputArray2[j], lambda1);\n            vocalOutput += this.trombone.Tract.lipOutput + this.trombone.Tract.noseOutput;\n            this.trombone.Tract.runStep(glottalOutput, inputArray2[j], lambda2);\n            vocalOutput += this.trombone.Tract.lipOutput + this.trombone.Tract.noseOutput;\n            outArray[j] = vocalOutput * 0.125;\n        }\n        // if(this.trombone.controller.notes !== undefined){\n        //     for (var noteIndex = 1; noteIndex < this.trombone.controller.notes.length; noteIndex++){\n        //         if(noteIndex > this.numVoices - 1) return;\n        //         let note = this.trombone.controller.notes[noteIndex];\n        //         //console.log(note);\n\n        //     }\n        // }\n        this.trombone.Glottis.finishBlock();\n        this.trombone.Tract.finishBlock();\n    }\n    \n    mute() {\n        this.scriptProcessor.disconnect();\n    }\n    \n    unmute() {\n        this.scriptProcessor.connect(this.audioContext.destination); \n    }\n    \n}\n\nexports.AudioSystem = AudioSystem;","import noise from \"../noise.js\";\n\nclass Glottis {\n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.timeInWaveform = 0;\n        this.oldFrequency = 140;\n        this.newFrequency = 140;\n        this.UIFrequency = 140;\n        this.smoothFrequency = 140;\n        this.oldTenseness = 0.6;\n        this.newTenseness = 0.6;\n        this.UITenseness = 0.6;\n        this.totalTime = 0;\n        this.vibratoAmount = 0.005;\n        this.vibratoFrequency = 6;\n        this.intensity = 0;\n        this.loudness = 1;\n        this.isTouched = false;\n        this.touch = 0;\n        this.x = 240;\n        this.y = 530;\n\n        this.keyboardTop = 500;\n        this.keyboardLeft = 0;\n        this.keyboardWidth = 600;\n        this.keyboardHeight = 100;\n        this.semitones = 20;\n        this.marks = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0];\n        this.baseNote = 87.3071; //F\n\n        this.output;\n\n        /// Allow pitch to wobble over time\n        this.addPitchVariance = true;\n        /// Allow tenseness to wobble over time\n        this.addTensenessVariance = true;\n\n    }\n    \n    init() {\n        this.setupWaveform(0);\n    }\n    \n    handleTouches() {\n        if (this.touch != 0 && !this.touch.alive) this.touch = 0;\n        \n        if (this.touch == 0)\n        {        \n            for (var j=0; j<UI.touchesWithMouse.length; j++)  \n            {\n                var touch = UI.touchesWithMouse[j];\n                if (!touch.alive) continue;\n                if (touch.y<this.keyboardTop) continue;\n                this.touch = touch;\n            }    \n        }\n        \n        if (this.touch != 0)\n        {\n            var local_y = this.touch.y -  this.keyboardTop-10;\n            var local_x = this.touch.x - this.keyboardLeft;\n            local_y = Math.clamp(local_y, 0, this.keyboardHeight-26);\n            var semitone = this.semitones * local_x / this.keyboardWidth + 0.5;\n            Glottis.UIFrequency = this.baseNote * Math.pow(2, semitone/12);\n            if (Glottis.intensity == 0) Glottis.smoothFrequency = Glottis.UIFrequency;\n            //Glottis.UIRd = 3*local_y / (this.keyboardHeight-20);\n            var t = Math.clamp(1-local_y / (this.keyboardHeight-28), 0, 1);\n            Glottis.UITenseness = 1-Math.cos(t*Math.PI*0.5);\n            Glottis.loudness = Math.pow(Glottis.UITenseness, 0.25);\n            this.x = this.touch.x;\n            this.y = local_y + this.keyboardTop+10;\n        }\n        Glottis.isTouched = (this.touch != 0);\n    }\n        \n    runStep(lambda, noiseSource) {\n        var timeStep = 1.0 / this.trombone.sampleRate;\n        this.timeInWaveform += timeStep;\n        this.totalTime += timeStep;\n        if (this.timeInWaveform > this.waveformLength) \n        {\n            this.timeInWaveform -= this.waveformLength;\n            this.setupWaveform(lambda);\n        }\n        var out = this.normalizedLFWaveform(this.timeInWaveform/this.waveformLength);\n        var aspiration = this.intensity*(1.0-Math.sqrt(this.UITenseness))*this.getNoiseModulator()*noiseSource;\n        aspiration *= 0.2 + 0.02 * noise.simplex1(this.totalTime * 1.99);\n        out += aspiration;\n        return out;\n    }\n    \n    getNoiseModulator() {\n        var voiced = 0.1+0.2*Math.max(0,Math.sin(Math.PI*2*this.timeInWaveform/this.waveformLength));\n        //return 0.3;\n        return this.UITenseness* this.intensity * voiced + (1-this.UITenseness* this.intensity ) * 0.3;\n    }\n    \n    finishBlock() {\n        var vibrato = 0;\n        if (this.addPitchVariance) {\n            // Add small imperfections to the vocal output\n            vibrato += this.vibratoAmount * Math.sin(2*Math.PI * this.totalTime *this.vibratoFrequency);          \n            vibrato += 0.02 * noise.simplex1(this.totalTime * 4.07);\n            vibrato += 0.04 * noise.simplex1(this.totalTime * 2.15);\n        }\n        \n        if (this.trombone.autoWobble)\n        {\n            vibrato += 0.2 * noise.simplex1(this.totalTime * 0.98);\n            vibrato += 0.4 * noise.simplex1(this.totalTime * 0.5);\n        }\n\n        if (this.UIFrequency>this.smoothFrequency) \n            this.smoothFrequency = Math.min(this.smoothFrequency * 1.1, this.UIFrequency);\n        if (this.UIFrequency<this.smoothFrequency) \n            this.smoothFrequency = Math.max(this.smoothFrequency / 1.1, this.UIFrequency);\n        this.oldFrequency = this.newFrequency;\n        this.newFrequency = this.smoothFrequency * (1+vibrato);\n        this.oldTenseness = this.newTenseness;\n\n        if (this.addTensenessVariance)\n            this.newTenseness = this.UITenseness + 0.1*noise.simplex1(this.totalTime*0.46)+0.05*noise.simplex1(this.totalTime*0.36);\n        else\n            this.newTenseness = this.UITenseness;\n\n        if (!this.isTouched && this.trombone.alwaysVoice) this.newTenseness += (3-this.UITenseness)*(1-this.intensity);\n        \n        if (this.isTouched || this.trombone.alwaysVoice)\n            this.intensity += 0.13;\n        this.intensity = Math.clamp(this.intensity, 0, 1);\n    }\n    \n    setupWaveform(lambda) {\n        this.frequency = this.oldFrequency*(1-lambda) + this.newFrequency*lambda;\n        var tenseness = this.oldTenseness*(1-lambda) + this.newTenseness*lambda;\n        this.Rd = 3*(1-tenseness);\n        this.waveformLength = 1.0/this.frequency;\n        \n        var Rd = this.Rd;\n        if (Rd<0.5) Rd = 0.5;\n        if (Rd>2.7) Rd = 2.7;\n        // normalized to time = 1, Ee = 1\n        var Ra = -0.01 + 0.048*Rd;\n        var Rk = 0.224 + 0.118*Rd;\n        var Rg = (Rk/4)*(0.5+1.2*Rk)/(0.11*Rd-Ra*(0.5+1.2*Rk));\n        \n        var Ta = Ra;\n        var Tp = 1 / (2*Rg);\n        var Te = Tp + Tp*Rk; //\n        \n        var epsilon = 1/Ta;\n        var shift = Math.exp(-epsilon * (1-Te));\n        var Delta = 1 - shift; //divide by this to scale RHS\n           \n        var RHSIntegral = (1/epsilon)*(shift - 1) + (1-Te)*shift;\n        RHSIntegral = RHSIntegral/Delta;\n        \n        var totalLowerIntegral = - (Te-Tp)/2 + RHSIntegral;\n        var totalUpperIntegral = -totalLowerIntegral;\n        \n        var omega = Math.PI/Tp;\n        var s = Math.sin(omega*Te);\n        var y = -Math.PI*s*totalUpperIntegral / (Tp*2);\n        var z = Math.log(y);\n        var alpha = z/(Tp/2 - Te);\n        var E0 = -1 / (s*Math.exp(alpha*Te));\n        this.alpha = alpha;\n        this.E0 = E0;\n        this.epsilon = epsilon;\n        this.shift = shift;\n        this.Delta = Delta;\n        this.Te=Te;\n        this.omega = omega;\n    }\n    \n \n    normalizedLFWaveform(t) {     \n        if (t>this.Te) this.output = (-Math.exp(-this.epsilon * (t-this.Te)) + this.shift)/this.Delta;\n        else this.output = this.E0 * Math.exp(this.alpha*t) * Math.sin(this.omega * t);\n     \n        return this.output * this.intensity * this.loudness;\n    }\n}\n\nexport { Glottis };","class TractUI\n{\n\n    constructor(trombone) {\n        this.trombone = trombone;\n        \n        this.originX = 340; \n        this.originY = 449; \n        this.radius = 298; \n        this.scale = 60;\n        this.tongueIndex = 12.9;\n        this.tongueDiameter = 2.43;\n        this.innerTongueControlRadius = 2.05;\n        this.outerTongueControlRadius = 3.5;\n        this.tongueTouch = 0;\n        this.angleScale = 0.64;\n        this.angleOffset = -0.24;\n        this.noseOffset = 0.8;\n        this.gridOffset = 1.7;\n\n        /// Final openness of the mouth (closer to 0 is more closed)\n        this.target = 0.1;\n        /// Index in the throat array to move to target\n        this.index = 42;\n        /// Number of throat segments to close around the index\n        this.radius = 0;\n    }\n    \n    init() {\n        let Tract = this.trombone.Tract;\n\n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) \n        {\n            Tract.diameter[i] = Tract.targetDiameter[i] = Tract.restDiameter[i];\n        }\n\n        this.tongueLowerIndexBound = Tract.bladeStart+2;\n        this.tongueUpperIndexBound = Tract.tipStart-3;\n        this.tongueIndexCentre = 0.5*(this.tongueLowerIndexBound+this.tongueUpperIndexBound);\n    }\n        \n    getIndex(x,y) {\n        let Tract = this.trombone.Tract;\n\n        var xx = x-this.originX; var yy = y-this.originY;\n        var angle = Math.atan2(yy, xx);\n        while (angle> 0) angle -= 2*Math.PI;\n        return (Math.PI + angle - this.angleOffset)*(Tract.lipStart-1) / (this.angleScale*Math.PI);\n    }\n\n    getDiameter(x,y) {\n        var xx = x-this.originX; var yy = y-this.originY;\n        return (this.radius-Math.sqrt(xx*xx + yy*yy))/this.scale;\n    }\n    \n    setRestDiameter() {\n        let Tract = this.trombone.Tract;\n\n        for (var i=Tract.bladeStart; i<Tract.lipStart; i++)\n        {\n            var t = 1.1 * Math.PI*(this.tongueIndex - i)/(Tract.tipStart - Tract.bladeStart);\n            var fixedTongueDiameter = 2+(this.tongueDiameter-2)/1.5;\n            var curve = (1.5-fixedTongueDiameter+this.gridOffset)*Math.cos(t);\n            if (i == Tract.bladeStart-2 || i == Tract.lipStart-1) curve *= 0.8;\n            if (i == Tract.bladeStart || i == Tract.lipStart-2) curve *= 0.94;               \n            Tract.restDiameter[i] = 1.5 - curve;\n        }\n    }\n\n    /**\n     * Sets the lips of the modeled tract to be closed by the specified amount.\n     * @param {number} progress Percentage closed (number between 0 and 1)\n     */\n    SetLipsClosed(progress) {\n\n        let Tract = this.trombone.Tract;\n        \n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) Tract.targetDiameter[i] = Tract.restDiameter[i];    \n\n        // Disable this behavior if the mouth is closed a certain amount\n        //if (progress > 0.8 || progress < 0.1) return;\n        \n        for(let i= this.index - this.radius; i <= this.index + this.radius; i++){\n            if (i > Tract.targetDiameter.length || i < 0) continue;\n            let interp = Math.lerp(Tract.restDiameter[i], this.target, progress);\n            Tract.targetDiameter[i] = interp;\n        }\n    }\n\n\n}\n\nexport { TractUI };","class Tract {\n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.n = 44;\n        this.bladeStart = 10;\n        this.tipStart = 32;\n        this.lipStart = 39;\n        this.R = []; //component going right\n        this.L = []; //component going left\n        this.reflection = [];\n        this.junctionOutputR = [];\n        this.junctionOutputL = [];\n        this.maxAmplitude = [];\n        this.diameter = [];\n        this.restDiameter = [];\n        this.targetDiameter = [];\n        this.newDiameter = [];\n        this.A = [];\n        this.glottalReflection = 0.75;\n        this.lipReflection = -0.85;\n        this.lastObstruction = -1;\n        this.fade = 1.0; //0.9999,\n        this.movementSpeed = 15; //cm per second\n        this.transients = [];\n        this.lipOutput = 0;\n        this.noseOutput = 0;\n        this.velumTarget = 0.01;\n    }\n\n    init() {\n        this.bladeStart = Math.floor(this.bladeStart*this.n/44);\n        this.tipStart = Math.floor(this.tipStart*this.n/44);\n        this.lipStart = Math.floor(this.lipStart*this.n/44);        \n        this.diameter = new Float64Array(this.n);\n        this.restDiameter = new Float64Array(this.n);\n        this.targetDiameter = new Float64Array(this.n);\n        this.newDiameter = new Float64Array(this.n);\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = 0;\n            if (i<7*this.n/44-0.5) diameter = 0.6;\n            else if (i<12*this.n/44) diameter = 1.1;\n            else diameter = 1.5;\n            this.diameter[i] = this.restDiameter[i] = this.targetDiameter[i] = this.newDiameter[i] = diameter;\n        }\n        this.R = new Float64Array(this.n);\n        this.L = new Float64Array(this.n);\n        this.reflection = new Float64Array(this.n+1);\n        this.newReflection = new Float64Array(this.n+1);\n        this.junctionOutputR = new Float64Array(this.n+1);\n        this.junctionOutputL = new Float64Array(this.n+1);\n        this.A =new Float64Array(this.n);\n        this.maxAmplitude = new Float64Array(this.n);\n        \n        this.noseLength = Math.floor(28*this.n/44)\n        this.noseStart = this.n-this.noseLength + 1;\n        this.noseR = new Float64Array(this.noseLength);\n        this.noseL = new Float64Array(this.noseLength);\n        this.noseJunctionOutputR = new Float64Array(this.noseLength+1);\n        this.noseJunctionOutputL = new Float64Array(this.noseLength+1);        \n        this.noseReflection = new Float64Array(this.noseLength+1);\n        this.noseDiameter = new Float64Array(this.noseLength);\n        this.noseA = new Float64Array(this.noseLength);\n        this.noseMaxAmplitude = new Float64Array(this.noseLength);\n        for (var i=0; i<this.noseLength; i++)\n        {\n            var diameter;\n            var d = 2*(i/this.noseLength);\n            if (d<1) diameter = 0.4+1.6*d;\n            else diameter = 0.5+1.5*(2-d);\n            diameter = Math.min(diameter, 1.9);\n            this.noseDiameter[i] = diameter;\n        }       \n        this.newReflectionLeft = this.newReflectionRight = this.newReflectionNose = 0;\n        this.calculateReflections();        \n        this.calculateNoseReflections();\n        this.noseDiameter[0] = this.velumTarget;\n    }\n    \n    reshapeTract(deltaTime) {\n        var amount = deltaTime * this.movementSpeed; ;    \n        var newLastObstruction = -1;\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = this.diameter[i];\n            var targetDiameter = this.targetDiameter[i];\n            if (diameter <= 0) newLastObstruction = i;\n            var slowReturn; \n            if (i<this.noseStart) slowReturn = 0.6;\n            else if (i >= this.tipStart) slowReturn = 1.0; \n            else slowReturn = 0.6+0.4*(i-this.noseStart)/(this.tipStart-this.noseStart);\n            this.diameter[i] = Math.moveTowards(diameter, targetDiameter, slowReturn*amount, 2*amount);\n        }\n        if (this.lastObstruction>-1 && newLastObstruction == -1 && this.noseA[0]<0.05)\n        {\n            this.addTransient(this.lastObstruction);\n        }\n        this.lastObstruction = newLastObstruction;\n        \n        amount = deltaTime * this.movementSpeed; \n        this.noseDiameter[0] = Math.moveTowards(this.noseDiameter[0], this.velumTarget, \n                amount*0.25, amount*0.1);\n        this.noseA[0] = this.noseDiameter[0]*this.noseDiameter[0];        \n    }\n    \n    calculateReflections() {\n        for (var i=0; i<this.n; i++) \n        {\n            this.A[i] = this.diameter[i]*this.diameter[i]; //ignoring PI etc.\n        }\n        for (var i=1; i<this.n; i++)\n        {\n            this.reflection[i] = this.newReflection[i];\n            if (this.A[i] == 0) this.newReflection[i] = 0.999; //to prevent some bad behaviour if 0\n            else this.newReflection[i] = (this.A[i-1]-this.A[i]) / (this.A[i-1]+this.A[i]); \n        }\n        \n        //now at junction with nose\n\n        this.reflectionLeft = this.newReflectionLeft;\n        this.reflectionRight = this.newReflectionRight;\n        this.reflectionNose = this.newReflectionNose;\n        var sum = this.A[this.noseStart]+this.A[this.noseStart+1]+this.noseA[0];\n        this.newReflectionLeft = (2*this.A[this.noseStart]-sum)/sum;\n        this.newReflectionRight = (2*this.A[this.noseStart+1]-sum)/sum;   \n        this.newReflectionNose = (2*this.noseA[0]-sum)/sum;      \n    }\n\n    calculateNoseReflections() {\n        for (var i=0; i<this.noseLength; i++) \n        {\n            this.noseA[i] = this.noseDiameter[i]*this.noseDiameter[i]; \n        }\n        for (var i=1; i<this.noseLength; i++)\n        {\n            this.noseReflection[i] = (this.noseA[i-1]-this.noseA[i]) / (this.noseA[i-1]+this.noseA[i]); \n        }\n    }\n    \n    runStep(glottalOutput, turbulenceNoise, lambda) {\n        var updateAmplitudes = (Math.random()<0.1);\n    \n        //mouth\n        this.processTransients();\n        this.addTurbulenceNoise(turbulenceNoise);\n        \n        //this.glottalReflection = -0.8 + 1.6 * Glottis.newTenseness;\n        this.junctionOutputR[0] = this.L[0] * this.glottalReflection + glottalOutput;\n        this.junctionOutputL[this.n] = this.R[this.n-1] * this.lipReflection; \n        \n        for (var i=1; i<this.n; i++)\n        {\n            var r = this.reflection[i] * (1-lambda) + this.newReflection[i]*lambda;\n            var w = r * (this.R[i-1] + this.L[i]);\n            this.junctionOutputR[i] = this.R[i-1] - w;\n            this.junctionOutputL[i] = this.L[i] + w;\n        }    \n        \n        //now at junction with nose\n        var i = this.noseStart;\n        var r = this.newReflectionLeft * (1-lambda) + this.reflectionLeft*lambda;\n        this.junctionOutputL[i] = r*this.R[i-1]+(1+r)*(this.noseL[0]+this.L[i]);\n        r = this.newReflectionRight * (1-lambda) + this.reflectionRight*lambda;\n        this.junctionOutputR[i] = r*this.L[i]+(1+r)*(this.R[i-1]+this.noseL[0]);     \n        r = this.newReflectionNose * (1-lambda) + this.reflectionNose*lambda;\n        this.noseJunctionOutputR[0] = r*this.noseL[0]+(1+r)*(this.L[i]+this.R[i-1]);\n         \n        for (var i=0; i<this.n; i++)\n        {          \n            this.R[i] = this.junctionOutputR[i]*0.999;\n            this.L[i] = this.junctionOutputL[i+1]*0.999; \n            \n            //this.R[i] = Math.clamp(this.junctionOutputR[i] * this.fade, -1, 1);\n            //this.L[i] = Math.clamp(this.junctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {   \n                var amplitude = Math.abs(this.R[i]+this.L[i]);\n                if (amplitude > this.maxAmplitude[i]) this.maxAmplitude[i] = amplitude;\n                else this.maxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.lipOutput = this.R[this.n-1];\n        \n        //nose     \n        this.noseJunctionOutputL[this.noseLength] = this.noseR[this.noseLength-1] * this.lipReflection; \n        \n        for (var i=1; i<this.noseLength; i++)\n        {\n            var w = this.noseReflection[i] * (this.noseR[i-1] + this.noseL[i]);\n            this.noseJunctionOutputR[i] = this.noseR[i-1] - w;\n            this.noseJunctionOutputL[i] = this.noseL[i] + w;\n        }\n        \n        for (var i=0; i<this.noseLength; i++)\n        {\n            this.noseR[i] = this.noseJunctionOutputR[i] * this.fade;\n            this.noseL[i] = this.noseJunctionOutputL[i+1] * this.fade;   \n            \n            //this.noseR[i] = Math.clamp(this.noseJunctionOutputR[i] * this.fade, -1, 1);\n            //this.noseL[i] = Math.clamp(this.noseJunctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {\n                var amplitude = Math.abs(this.noseR[i]+this.noseL[i]);\n                if (amplitude > this.noseMaxAmplitude[i]) this.noseMaxAmplitude[i] = amplitude;\n                else this.noseMaxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.noseOutput = this.noseR[this.noseLength-1];\n       \n    }\n    \n    finishBlock() {         \n        this.reshapeTract(this.trombone.AudioSystem.blockTime);\n        this.calculateReflections();\n    }\n    \n    addTransient(position) {\n        var trans = {}\n        trans.position = position;\n        trans.timeAlive = 0;\n        trans.lifeTime = 0.2;\n        trans.strength = 0.3;\n        trans.exponent = 200;\n        this.transients.push(trans);\n    }\n    \n    processTransients() {\n        for (var i = 0; i < this.transients.length; i++)  \n        {\n            var trans = this.transients[i];\n            var amplitude = trans.strength * Math.pow(2, -trans.exponent * trans.timeAlive);\n            this.R[trans.position] += amplitude/2;\n            this.L[trans.position] += amplitude/2;\n            trans.timeAlive += 1.0/(this.trombone.sampleRate*2);\n        }\n        for (var i=this.transients.length-1; i>=0; i--)\n        {\n            var trans = this.transients[i];\n            if (trans.timeAlive > trans.lifeTime)\n            {\n                this.transients.splice(i,1);\n            }\n        }\n    }\n    \n    addTurbulenceNoise(turbulenceNoise) {\n        // for (var j=0; j<UI.touchesWithMouse.length; j++)\n        // {\n        //     var touch = UI.touchesWithMouse[j];\n        //     if (touch.index<2 || touch.index>Tract.n) continue;\n        //     if (touch.diameter<=0) continue;            \n        //     var intensity = touch.fricative_intensity;\n        //     if (intensity == 0) continue;\n        //     this.addTurbulenceNoiseAtIndex(0.66*turbulenceNoise*intensity, touch.index, touch.diameter);\n        // }\n    }\n    \n    addTurbulenceNoiseAtIndex(turbulenceNoise, index, diameter) {   \n        var i = Math.floor(index);\n        var delta = index - i;\n        turbulenceNoise *= this.trombone.Glottis.getNoiseModulator();\n        var thinness0 = Math.clamp(8*(0.7-diameter),0,1);\n        var openness = Math.clamp(30*(diameter-0.3), 0, 1);\n        var noise0 = turbulenceNoise*(1-delta)*thinness0*openness;\n        var noise1 = turbulenceNoise*delta*thinness0*openness;\n        this.R[i+1] += noise0/2;\n        this.L[i+1] += noise0/2;\n        this.R[i+2] += noise1/2;\n        this.L[i+2] += noise1/2;\n    }\n};\n\nexport { Tract };","Math.clamp = function(number, min, max) {\n    if (number<min) return min;\n    else if (number>max) return max;\n    else return number;\n}\n\nMath.moveTowards = function(current, target, amount) {\n    if (current<target) return Math.min(current+amount, target);\n    else return Math.max(current-amount, target);\n}\n\nMath.moveTowards = function(current, target, amountUp, amountDown) {\n    if (current<target) return Math.min(current+amountUp, target);\n    else return Math.max(current-amountDown, target);\n}\n\nMath.gaussian = function() {\n    var s = 0;\n    for (var c=0; c<16; c++) s+=Math.random();\n    return (s-8)/4;\n}\n\nMath.lerp = function(a, b, t) {\n    return a + (b - a) * t;\n}","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nclass Grad {\n    constructor(x, y, z){\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    dot2(x, y){\n        return this.x*x + this.y*y;\n    }\n\n    dot3(x, y, z) {\n        return this.x*x + this.y*y + this.z*z;\n    };\n}\n\nclass Noise {\n    constructor() {\n        this.grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n                      new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n                      new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n        this.p = [151,160,137,91,90,15,\n            131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n            190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n            88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n            77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n            102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n            135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n            5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n            223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n            129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n            251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n            49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n            138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n\n        // To remove the need for index wrapping, double the permutation table length\n        this.perm = new Array(512);\n        this.gradP = new Array(512);\n\n        this.seed(Date.now());\n    }\n\n    seed(seed) {\n        if(seed > 0 && seed < 1) {\n            // Scale the seed out\n            seed *= 65536;\n        }\n\n        seed = Math.floor(seed);\n        if(seed < 256) {\n            seed |= seed << 8;\n        }\n\n        for(var i = 0; i < 256; i++) {\n            var v;\n            if (i & 1) {\n                v = this.p[i] ^ (seed & 255);\n            } else {\n                v = this.p[i] ^ ((seed>>8) & 255);\n            }\n\n            this.perm[i] = this.perm[i + 256] = v;\n            this.gradP[i] = this.gradP[i + 256] = this.grad3[v % 12];\n        }\n    };\n\n    // 2D simplex noise\n    simplex2(xin, yin) {\n        // Skewing and unskewing factors for 2, 3, and 4 dimensions\n        var F2 = 0.5*(Math.sqrt(3)-1);\n        var G2 = (3-Math.sqrt(3))/6;\n\n        var F3 = 1/3;\n        var G3 = 1/6;\n\n        var n0, n1, n2; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        var s = (xin+yin)*F2; // Hairy factor for 2D\n        var i = Math.floor(xin+s);\n        var j = Math.floor(yin+s);\n        var t = (i+j)*G2;\n        var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n        var y0 = yin-j+t;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1=1; j1=0;\n        } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n            i1=0; j1=1;\n        }\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        var y1 = y0 - j1 + G2;\n        var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        var y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        i &= 255;\n        j &= 255;\n        var gi0 = this.gradP[i+this.perm[j]];\n        var gi1 = this.gradP[i+i1+this.perm[j+j1]];\n        var gi2 = this.gradP[i+1+this.perm[j+1]];\n        // Calculate the contribution from the three corners\n        var t0 = 0.5 - x0*x0-y0*y0;\n        if(t0<0) {\n            n0 = 0;\n        } else {\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n        }\n        var t1 = 0.5 - x1*x1-y1*y1;\n        if(t1<0) {\n            n1 = 0;\n        } else {\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot2(x1, y1);\n        }\n        var t2 = 0.5 - x2*x2-y2*y2;\n        if(t2<0) {\n            n2 = 0;\n        } else {\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot2(x2, y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n    \n    simplex1(x){\n        return this.simplex2(x*1.2, -x*0.7);\n    }\n\n}\n\nconst singleton = new Noise();\nObject.freeze(singleton);\n\nexport default singleton;","import \"./math-extensions.js\";\n\nimport { AudioSystem } from \"./components/audio-system.js\";\nimport { Glottis } from \"./components/glottis.js\";\nimport { Tract } from \"./components/tract.js\";\nimport { TractUI } from \"./components/tract-ui.js\";\n\nclass PinkTrombone {\n    constructor(controller){\n        this.controller = controller;\n        \n        this.sampleRate = 0;\n        this.time = 0;\n        this.alwaysVoice = true;\n        this.autoWobble = true;\n        this.noiseFreq = 500;\n        this.noiseQ = 0.7;\n\n        this.AudioSystem = new AudioSystem(this);\n        this.AudioSystem.init();\n        \n        this.Glottis = new Glottis(this);\n        this.Glottis.init();\n\n        this.Tract = new Tract(this);\n        this.Tract.init();\n\n        this.TractUI = new TractUI(this);\n        this.TractUI.init();\n\n        //this.StartAudio();\n        //this.SetMute(true);\n\n        this.muted = false;\n    }\n\n    StartAudio() {\n        this.muted = false;\n        this.AudioSystem.startSound();\n    }\n\n    SetMute(doMute) {\n        doMute ? this.AudioSystem.mute() : this.AudioSystem.unmute();\n        this.muted = doMute;\n    }\n\n    ToggleMute() {\n        this.SetMute(!this.muted);\n    }\n\n}\n\nexport { PinkTrombone };","// const words = require('cmu-pronouncing-dictionary');\n\nexport class TTSController {\n    constructor(){\n        \n    }\n\n    // GetGraphemes(str){\n    //     let zeroPunctuation = str.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\n    //     let wordBank = []\n    //     for(let word of zeroPunctuation.split(' ')){\n    //         wordBank.push(this.GetPronunciationForWord(word));\n    //     }\n    //     return wordBank;\n    // }\n\n    // GetPronunciationForWord(rawWord){\n    //     let word = rawWord.toLowerCase();\n    //     if (words[word]){\n    //         return words[word];\n    //     } else {\n    //         // If the word isn't in the dict, ignore it for now\n    //         return \"None\";\n    //     }\n    // }\n\n\n\n}","class ModelLoader {\n\n    /**\n     * Loads a model asynchronously. Expects an object containing\n     * the path to the object, the relative path of the OBJ file,\n     * and the relative path of the MTL file.\n     * \n     * An example:\n     * let modelInfo = {\n     *      path: \"../resources/obj/\",\n     *      objFile: \"test.obj\",\n     *      mtlFile: \"test.mtl\"\n     * }\n     */\n    static LoadOBJ(modelInfo, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var mtlLoader = new THREE.MTLLoader();\n        mtlLoader.setPath( modelInfo.path );\n\n        mtlLoader.load( modelInfo.mtlFile, ( materials ) => {\n            materials.preload();\n            var objLoader = new THREE.OBJLoader();\n            objLoader.setMaterials( materials );\n            objLoader.setPath( modelInfo.path );\n            objLoader.load( modelInfo.objFile, ( object ) => {\n                loadedCallback(object);\n            }, onProgress, onError );\n            \n        });\n\n    }\n\n    static LoadJSON(path, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.JSONLoader();\n        loader.load( path, ( geometry, materials ) => {\n            // Apply skinning to each material so the verts are affected by bone movement\n            for(let mat of materials){\n                mat.skinning = true;\n            }\n            let mesh = new THREE.SkinnedMesh( geometry, new THREE.MultiMaterial( materials ) );\n            mesh.name = \"Jon\";\n            loadedCallback(mesh);\n        }, onProgress, onError);\n    }\n\n    static LoadFBX(path, loadedCallback) {\n        let manager = new THREE.LoadingManager();\n        manager.onProgress = function( item, loaded, total ) {\n            console.log( item, loaded, total );\n        };\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.FBXLoader( manager );\n        loader.load( path, ( object ) => {\n            loadedCallback(object);\n        }, onProgress, onError );\n    }\n\n}\n\nexport { ModelLoader };","class Detector {\n\n    //http://stackoverflow.com/questions/11871077/proper-way-to-detect-webgl-support\n    static HasWebGL() {\n        if (!!window.WebGLRenderingContext) {\n            var canvas = document.createElement(\"canvas\"),\n                    names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\n                context = false;\n\n            for(var i=0;i<4;i++) {\n                try {\n                    context = canvas.getContext(names[i]);\n                    if (context && typeof context.getParameter == \"function\") {\n                        // WebGL is enabled\n                        return true;\n                    }\n                } catch(e) {}\n            }\n\n            // WebGL is supported, but disabled\n            return false;\n        }\n        // WebGL not supported\n        return false;\n    }\n\n    static GetErrorHTML(message = null){\n        if(message == null){\n            message = `Your graphics card does not seem to support \n                        <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>. <br>\n                        Find out how to get it <a href=\"http://get.webgl.org/\">here</a>.`;\n        }\n        return `\n        <div class=\"no-webgl-support\">\n        <p style=\"text-align: center;\">${message}</p>\n        </div>\n        `\n    }\n\n}\n\nexport { Detector };","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.MidiConvert=e():t.MidiConvert=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var r=n(7),i=n(2),a={instrumentByPatchID:i.instrumentByPatchID,instrumentFamilyByID:i.instrumentFamilyByID,parse:function(t){return(new r.Midi).decode(t)},load:function(t,e){var n=(new r.Midi).load(t);return e&&n.then(e),n},create:function(){return new r.Midi}};e[\"default\"]=a,t.exports=a},function(t,e){\"use strict\";function n(t){return t.replace(/\\u0000/g,\"\")}function r(t,e){return 60/e.bpm*(t/e.PPQ)}function i(t){return\"number\"==typeof t}function a(t){return\"string\"==typeof t}function o(t){var e=[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"],n=Math.floor(t/12)-1,r=t%12;return e[r]+n}var s=function(){var t=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;return function(e){return a(e)&&t.test(e)}}(),u=function(){var t=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,e={cbb:-2,cb:-1,c:0,\"c#\":1,cx:2,dbb:0,db:1,d:2,\"d#\":3,dx:4,ebb:2,eb:3,e:4,\"e#\":5,ex:6,fbb:3,fb:4,f:5,\"f#\":6,fx:7,gbb:5,gb:6,g:7,\"g#\":8,gx:9,abb:7,ab:8,a:9,\"a#\":10,ax:11,bbb:9,bb:10,b:11,\"b#\":12,bx:13};return function(n){var r=t.exec(n),i=r[1],a=r[2],o=e[i.toLowerCase()];return o+12*(parseInt(a)+1)}}();t.exports={cleanName:n,ticksToSeconds:r,isString:a,isNumber:i,isPitch:s,midiToPitch:o,pitchToMidi:u}},function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});e.instrumentByPatchID=[\"acoustic grand piano\",\"bright acoustic piano\",\"electric grand piano\",\"honky-tonk piano\",\"electric piano 1\",\"electric piano 2\",\"harpsichord\",\"clavi\",\"celesta\",\"glockenspiel\",\"music box\",\"vibraphone\",\"marimba\",\"xylophone\",\"tubular bells\",\"dulcimer\",\"drawbar organ\",\"percussive organ\",\"rock organ\",\"church organ\",\"reed organ\",\"accordion\",\"harmonica\",\"tango accordion\",\"acoustic guitar (nylon)\",\"acoustic guitar (steel)\",\"electric guitar (jazz)\",\"electric guitar (clean)\",\"electric guitar (muted)\",\"overdriven guitar\",\"distortion guitar\",\"guitar harmonics\",\"acoustic bass\",\"electric bass (finger)\",\"electric bass (pick)\",\"fretless bass\",\"slap bass 1\",\"slap bass 2\",\"synth bass 1\",\"synth bass 2\",\"violin\",\"viola\",\"cello\",\"contrabass\",\"tremolo strings\",\"pizzicato strings\",\"orchestral harp\",\"timpani\",\"string ensemble 1\",\"string ensemble 2\",\"synthstrings 1\",\"synthstrings 2\",\"choir aahs\",\"voice oohs\",\"synth voice\",\"orchestra hit\",\"trumpet\",\"trombone\",\"tuba\",\"muted trumpet\",\"french horn\",\"brass section\",\"synthbrass 1\",\"synthbrass 2\",\"soprano sax\",\"alto sax\",\"tenor sax\",\"baritone sax\",\"oboe\",\"english horn\",\"bassoon\",\"clarinet\",\"piccolo\",\"flute\",\"recorder\",\"pan flute\",\"blown bottle\",\"shakuhachi\",\"whistle\",\"ocarina\",\"lead 1 (square)\",\"lead 2 (sawtooth)\",\"lead 3 (calliope)\",\"lead 4 (chiff)\",\"lead 5 (charang)\",\"lead 6 (voice)\",\"lead 7 (fifths)\",\"lead 8 (bass + lead)\",\"pad 1 (new age)\",\"pad 2 (warm)\",\"pad 3 (polysynth)\",\"pad 4 (choir)\",\"pad 5 (bowed)\",\"pad 6 (metallic)\",\"pad 7 (halo)\",\"pad 8 (sweep)\",\"fx 1 (rain)\",\"fx 2 (soundtrack)\",\"fx 3 (crystal)\",\"fx 4 (atmosphere)\",\"fx 5 (brightness)\",\"fx 6 (goblins)\",\"fx 7 (echoes)\",\"fx 8 (sci-fi)\",\"sitar\",\"banjo\",\"shamisen\",\"koto\",\"kalimba\",\"bag pipe\",\"fiddle\",\"shanai\",\"tinkle bell\",\"agogo\",\"steel drums\",\"woodblock\",\"taiko drum\",\"melodic tom\",\"synth drum\",\"reverse cymbal\",\"guitar fret noise\",\"breath noise\",\"seashore\",\"bird tweet\",\"telephone ring\",\"helicopter\",\"applause\",\"gunshot\"],e.instrumentFamilyByID=[\"piano\",\"chromatic percussion\",\"organ\",\"guitar\",\"bass\",\"strings\",\"ensemble\",\"brass\",\"reed\",\"pipe\",\"synth lead\",\"synth pad\",\"synth effects\",\"ethnic\",\"percussive\",\"sound effects\"]},function(t,e){\"use strict\";function n(t,e){var n=0,r=t.length,i=r;if(r>0&&t[r-1].time<=e)return r-1;for(;i>n;){var a=Math.floor(n+(i-n)/2),o=t[a],s=t[a+1];if(o.time===e){for(var u=a;u<t.length;u++){var c=t[u];c.time===e&&(a=u)}return a}if(o.time<e&&s.time>e)return a;o.time>e?i=a:o.time<e&&(n=a+1)}return-1}function r(t,e){if(t.length){var r=n(t,e.time);t.splice(r+1,0,e)}else t.push(e)}Object.defineProperty(e,\"__esModule\",{value:!0}),e.BinaryInsert=r},function(t,e){\"use strict\";function n(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i={1:\"modulationWheel\",2:\"breath\",4:\"footController\",5:\"portamentoTime\",7:\"volume\",8:\"balance\",10:\"pan\",64:\"sustain\",65:\"portamentoTime\",66:\"sostenuto\",67:\"softPedal\",68:\"legatoFootswitch\",84:\"portamentoContro\"},a=function(){function t(e,r,i){n(this,t),this.number=e,this.time=r,this.value=i}return r(t,[{key:\"name\",get:function(){return i.hasOwnProperty(this.number)?i[this.number]:void 0}}]),t}();e.Control=a},function(t,e){\"use strict\";function n(t){for(var e={PPQ:t.header.ticksPerBeat},n=0;n<t.tracks.length;n++)for(var r=t.tracks[n],i=0;i<r.length;i++){var a=r[i];\"meta\"===a.type&&(\"timeSignature\"===a.subtype?e.timeSignature=[a.numerator,a.denominator]:\"setTempo\"===a.subtype&&(e.bpm||(e.bpm=6e7/a.microsecondsPerBeat)))}return e.bpm=e.bpm||120,e}Object.defineProperty(e,\"__esModule\",{value:!0}),e.parseHeader=n},function(t,e){\"use strict\";function n(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=e[n];if(r.length>i)return!0}return!1}function r(t,e,n){for(var r=0,i=1/0,a=0;a<t.length;a++){var o=t[a],s=e[a];o[s]&&o[s].time<i&&(r=a,i=o[s].time)}n[r](t[r][e[r]]),e[r]+=1}function i(){for(var t=arguments.length,e=Array(t),i=0;t>i;i++)e[i]=arguments[i];for(var a=e.filter(function(t,e){return e%2===0}),o=new Uint32Array(a.length),s=e.filter(function(t,e){return e%2===1});n(a,o);)r(a,o,s)}Object.defineProperty(e,\"__esModule\",{value:!0}),e.Merge=i},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0}),e.Midi=void 0;var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),o=n(11),s=r(o),u=n(10),c=r(u),h=n(1),f=r(h),d=n(9),l=n(5),p=function(){function t(){i(this,t),this.header={bpm:120,timeSignature:[4,4],PPQ:480},this.tracks=[]}return a(t,[{key:\"load\",value:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"GET\";return new Promise(function(i,a){var o=new XMLHttpRequest;o.open(r,t),o.responseType=\"arraybuffer\",o.addEventListener(\"load\",function(){4===o.readyState&&200===o.status?i(e.decode(o.response)):a(o.status)}),o.addEventListener(\"error\",a),o.send(n)})}},{key:\"decode\",value:function(t){var e=this;if(t instanceof ArrayBuffer){var n=new Uint8Array(t);t=String.fromCharCode.apply(null,n)}var r=(0,s[\"default\"])(t);return this.header=(0,l.parseHeader)(r),this.tracks=[],r.tracks.forEach(function(t){var n=new d.Track;e.tracks.push(n);var r=0;t.forEach(function(t){r+=f[\"default\"].ticksToSeconds(t.deltaTime,e.header),\"meta\"===t.type&&\"trackName\"===t.subtype?n.name=f[\"default\"].cleanName(t.text):\"noteOn\"===t.subtype?n.noteOn(t.noteNumber,r,t.velocity/127):\"noteOff\"===t.subtype?n.noteOff(t.noteNumber,r):\"controller\"===t.subtype&&t.controllerType?n.cc(t.controllerType,r,t.value/127):\"meta\"===t.type&&\"instrumentName\"===t.subtype?n.instrument=t.text:\"channel\"===t.type&&\"programChange\"===t.subtype&&n.patch(t.programNumber)})}),this}},{key:\"encode\",value:function(){var t=this,e=new c[\"default\"].File({ticks:this.header.PPQ});return this.tracks.forEach(function(n,r){var i=e.addTrack();i.setTempo(t.bpm),n.encode(i,t.header)}),e.toBytes()}},{key:\"toArray\",value:function(){for(var t=this.encode(),e=new Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}},{key:\"track\",value:function e(t){var e=new d.Track(t);return this.tracks.push(e),e}},{key:\"get\",value:function(t){return f[\"default\"].isNumber(t)?this.tracks[t]:this.tracks.find(function(e){return e.name===t})}},{key:\"slice\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.duration,r=new t;return r.header=this.header,r.tracks=this.tracks.map(function(t){return t.slice(e,n)}),r}},{key:\"startTime\",get:function(){var t=this.tracks.map(function(t){return t.startTime});return Math.min.apply(Math,t)}},{key:\"bpm\",get:function(){return this.header.bpm},set:function(t){var e=this.header.bpm;this.header.bpm=t;var n=e/t;this.tracks.forEach(function(t){return t.scale(n)})}},{key:\"timeSignature\",get:function(){return this.header.timeSignature},set:function(t){this.header.timeSignature=timeSignature}},{key:\"duration\",get:function(){var t=this.tracks.map(function(t){return t.duration});return Math.max.apply(Math,t)}}]),t}();e.Midi=p},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0}),e.Note=void 0;var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),o=n(1),s=r(o),u=function(){function t(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(i(this,t),this.midi,s[\"default\"].isNumber(e))this.midi=e;else{if(!s[\"default\"].isPitch(e))throw new Error(\"the midi value must either be in Pitch Notation (e.g. C#4) or a midi value\");this.name=e}this.time=n,this.duration=r,this.velocity=a}return a(t,[{key:\"match\",value:function(t){return s[\"default\"].isNumber(t)?this.midi===t:s[\"default\"].isPitch(t)?this.name.toLowerCase()===t.toLowerCase():void 0}},{key:\"toJSON\",value:function(){return{name:this.name,midi:this.midi,time:this.time,velocity:this.velocity,duration:this.duration}}},{key:\"name\",get:function(){return s[\"default\"].midiToPitch(this.midi)},set:function(t){this.midi=s[\"default\"].pitchToMidi(t)}},{key:\"noteOn\",get:function(){return this.time},set:function(t){this.time=t}},{key:\"noteOff\",get:function(){return this.time+this.duration},set:function(t){this.duration=t-this.time}}]),t}();e.Note=u},function(t,e,n){\"use strict\";function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0}),e.Track=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a=n(3),o=n(4),s=n(6),u=n(8),c=n(2),h=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;r(this,t),this.name=e,this.notes=[],this.controlChanges={},this.instrumentNumber=n}return i(t,[{key:\"note\",value:function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,e=new u.Note(t,n,r,i);return(0,a.BinaryInsert)(this.notes,e),this}},{key:\"noteOn\",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=new u.Note(t,e,0,n);return(0,a.BinaryInsert)(this.notes,r),this}},{key:\"noteOff\",value:function(t,e){for(var n=0;n<this.notes.length;n++){var r=this.notes[n];if(r.match(t)&&0===r.duration){r.noteOff=e;break}}return this}},{key:\"cc\",value:function n(t,e,r){this.controlChanges.hasOwnProperty(t)||(this.controlChanges[t]=[]);var n=new o.Control(t,e,r);return(0,a.BinaryInsert)(this.controlChanges[t],n),this}},{key:\"patch\",value:function(t){return this.instrumentNumber=t,this}},{key:\"scale\",value:function(t){return this.notes.forEach(function(e){e.time*=t,e.duration*=t}),this}},{key:\"slice\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.duration,r=Math.max(this.notes.findIndex(function(t){return t.time>=e}),0),i=this.notes.findIndex(function(t){return t.noteOff>=n})+1,a=new t(this.name);return a.notes=this.notes.slice(r,i),a.notes.forEach(function(t){return t.time=t.time-e}),a}},{key:\"encode\",value:function(t,e){function n(t){var e=Math.floor(r*t),n=Math.max(e-i,0);return i=e,n}var r=e.PPQ/(60/e.bpm),i=0,a=0;-1!==this.instrumentNumber&&t.instrument(a,this.instrumentNumber),(0,s.Merge)(this.noteOns,function(e){t.addNoteOn(a,e.name,n(e.time),Math.floor(127*e.velocity))},this.noteOffs,function(e){t.addNoteOff(a,e.name,n(e.time))})}},{key:\"noteOns\",get:function(){var t=[];return this.notes.forEach(function(e){t.push({time:e.noteOn,midi:e.midi,name:e.name,velocity:e.velocity})}),t}},{key:\"noteOffs\",get:function(){var t=[];return this.notes.forEach(function(e){t.push({time:e.noteOff,midi:e.midi,name:e.name})}),t}},{key:\"length\",get:function(){return this.notes.length}},{key:\"startTime\",get:function(){if(this.notes.length){var t=this.notes[0];return t.noteOn}return 0}},{key:\"duration\",get:function(){if(this.notes.length){var t=this.notes[this.notes.length-1];return t.noteOff}return 0}},{key:\"instrument\",get:function(){return c.instrumentByPatchID[this.instrumentNumber]},set:function(t){var e=c.instrumentByPatchID.indexOf(t);-1!==e&&(this.instrumentNumber=e)}},{key:\"instrumentFamily\",get:function(){return c.instrumentFamilyByID[Math.floor(this.instrumentNumber/8)]}}]),t}();e.Track=h},function(t,e,n){(function(t){var n={};!function(t){var e=t.DEFAULT_VOLUME=90,n=(t.DEFAULT_DURATION=128,t.DEFAULT_CHANNEL=0,{midi_letter_pitches:{a:21,b:23,c:12,d:14,e:16,f:17,g:19},midiPitchFromNote:function(t){var e=/([a-g])(#+|b+)?([0-9]+)$/i.exec(t),r=e[1].toLowerCase(),i=e[2]||\"\",a=parseInt(e[3],10);return 12*a+n.midi_letter_pitches[r]+(\"#\"==i.substr(0,1)?1:-1)*i.length},ensureMidiPitch:function(t){return\"number\"!=typeof t&&/[^0-9]/.test(t)?n.midiPitchFromNote(t):parseInt(t,10)},midi_pitches_letter:{12:\"c\",13:\"c#\",14:\"d\",15:\"d#\",16:\"e\",17:\"f\",18:\"f#\",19:\"g\",20:\"g#\",21:\"a\",22:\"a#\",23:\"b\"},midi_flattened_notes:{\"a#\":\"bb\",\"c#\":\"db\",\"d#\":\"eb\",\"f#\":\"gb\",\"g#\":\"ab\"},noteFromMidiPitch:function(t,e){var r,i=0,a=t,e=e||!1;return t>23&&(i=Math.floor(t/12)-1,a=t-12*i),r=n.midi_pitches_letter[a],e&&r.indexOf(\"#\")>0&&(r=n.midi_flattened_notes[r]),r+i},mpqnFromBpm:function(t){var e=Math.floor(6e7/t),n=[];do n.unshift(255&e),e>>=8;while(e);for(;n.length<3;)n.push(0);return n},bpmFromMpqn:function(t){var e=t;if(\"undefined\"!=typeof t[0]){e=0;for(var n=0,r=t.length-1;r>=0;++n,--r)e|=t[n]<<r}return Math.floor(6e7/t)},codes2Str:function(t){return String.fromCharCode.apply(null,t)},str2Bytes:function(t,e){if(e)for(;t.length/2<e;)t=\"0\"+t;for(var n=[],r=t.length-1;r>=0;r-=2){var i=0===r?t[r]:t[r-1]+t[r];n.unshift(parseInt(i,16))}return n},translateTickTime:function(t){for(var e=127&t;t>>=7;)e<<=8,e|=127&t|128;for(var n=[];;){if(n.push(255&e),!(128&e))break;e>>=8}return n}}),r=function(t){return this?void(!t||null===t.type&&void 0===t.type||null===t.channel&&void 0===t.channel||null===t.param1&&void 0===t.param1||(this.setTime(t.time),this.setType(t.type),this.setChannel(t.channel),this.setParam1(t.param1),this.setParam2(t.param2))):new r(t)};r.NOTE_OFF=128,r.NOTE_ON=144,r.AFTER_TOUCH=160,r.CONTROLLER=176,r.PROGRAM_CHANGE=192,r.CHANNEL_AFTERTOUCH=208,r.PITCH_BEND=224,r.prototype.setTime=function(t){this.time=n.translateTickTime(t||0)},r.prototype.setType=function(t){if(t<r.NOTE_OFF||t>r.PITCH_BEND)throw new Error(\"Trying to set an unknown event: \"+t);this.type=t},r.prototype.setChannel=function(t){if(0>t||t>15)throw new Error(\"Channel is out of bounds.\");this.channel=t},r.prototype.setParam1=function(t){this.param1=t},r.prototype.setParam2=function(t){this.param2=t},r.prototype.toBytes=function(){var t=[],e=this.type|15&this.channel;return t.push.apply(t,this.time),t.push(e),t.push(this.param1),void 0!==this.param2&&null!==this.param2&&t.push(this.param2),t};var i=function(t){if(!this)return new i(t);this.setTime(t.time),this.setType(t.type),this.setData(t.data)};i.SEQUENCE=0,i.TEXT=1,i.COPYRIGHT=2,i.TRACK_NAME=3,i.INSTRUMENT=4,i.LYRIC=5,i.MARKER=6,i.CUE_POINT=7,i.CHANNEL_PREFIX=32,i.END_OF_TRACK=47,i.TEMPO=81,i.SMPTE=84,i.TIME_SIG=88,i.KEY_SIG=89,i.SEQ_EVENT=127,i.prototype.setTime=function(t){this.time=n.translateTickTime(t||0)},i.prototype.setType=function(t){this.type=t},i.prototype.setData=function(t){this.data=t},i.prototype.toBytes=function(){if(!this.type)throw new Error(\"Type for meta-event not specified.\");var t=[];if(t.push.apply(t,this.time),t.push(255,this.type),Array.isArray(this.data))t.push(this.data.length),t.push.apply(t,this.data);else if(\"number\"==typeof this.data)t.push(1,this.data);else if(null!==this.data&&void 0!==this.data){t.push(this.data.length);var e=this.data.split(\"\").map(function(t){return t.charCodeAt(0)});t.push.apply(t,e)}else t.push(0);return t};var a=function(t){if(!this)return new a(t);var e=t||{};this.events=e.events||[]};a.START_BYTES=[77,84,114,107],a.END_BYTES=[0,255,47,0],a.prototype.addEvent=function(t){return this.events.push(t),this},a.prototype.addNoteOn=a.prototype.noteOn=function(t,i,a,o){return this.events.push(new r({type:r.NOTE_ON,channel:t,param1:n.ensureMidiPitch(i),param2:o||e,time:a||0})),this},a.prototype.addNoteOff=a.prototype.noteOff=function(t,i,a,o){return this.events.push(new r({type:r.NOTE_OFF,channel:t,param1:n.ensureMidiPitch(i),param2:o||e,time:a||0})),this},a.prototype.addNote=a.prototype.note=function(t,e,n,r,i){return this.noteOn(t,e,r,i),n&&this.noteOff(t,e,n,i),this},a.prototype.addChord=a.prototype.chord=function(t,e,n,r){if(!Array.isArray(e)&&!e.length)throw new Error(\"Chord must be an array of pitches\");return e.forEach(function(e){this.noteOn(t,e,0,r)},this),e.forEach(function(e,r){0===r?this.noteOff(t,e,n):this.noteOff(t,e)},this),this},a.prototype.setInstrument=a.prototype.instrument=function(t,e,n){return this.events.push(new r({type:r.PROGRAM_CHANGE,channel:t,param1:e,time:n||0})),this},a.prototype.setTempo=a.prototype.tempo=function(t,e){return this.events.push(new i({type:i.TEMPO,data:n.mpqnFromBpm(t),time:e||0})),this},a.prototype.toBytes=function(){var t=0,e=[],r=a.START_BYTES,i=a.END_BYTES,o=function(n){var r=n.toBytes();t+=r.length,e.push.apply(e,r)};this.events.forEach(o),t+=i.length;var s=n.str2Bytes(t.toString(16),4);return r.concat(s,e,i)};var o=function(t){if(!this)return new o(t);var e=t||{};if(e.ticks){if(\"number\"!=typeof e.ticks)throw new Error(\"Ticks per beat must be a number!\");if(e.ticks<=0||e.ticks>=32768||e.ticks%1!==0)throw new Error(\"Ticks per beat must be an integer between 1 and 32767!\")}this.ticks=e.ticks||128,this.tracks=e.tracks||[]};o.HDR_CHUNKID=\"MThd\",o.HDR_CHUNK_SIZE=\"\\x00\\x00\\x00\u0006\",o.HDR_TYPE0=\"\\x00\\x00\",o.HDR_TYPE1=\"\\x00\u0001\",o.prototype.addTrack=function(t){return t?(this.tracks.push(t),this):(t=new a,this.tracks.push(t),t)},o.prototype.toBytes=function(){var t=this.tracks.length.toString(16),e=o.HDR_CHUNKID+o.HDR_CHUNK_SIZE;return e+=parseInt(t,16)>1?o.HDR_TYPE1:o.HDR_TYPE0,e+=n.codes2Str(n.str2Bytes(t,2)),e+=String.fromCharCode(this.ticks/256,this.ticks%256),this.tracks.forEach(function(t){e+=n.codes2Str(t.toBytes())}),e},t.Util=n,t.File=o,t.Track=a,t.Event=r,t.MetaEvent=i}(n),\"undefined\"!=typeof t&&null!==t?t.exports=n:\"undefined\"!=typeof e&&null!==e?e=n:this.Midi=n}).call(e,n(12)(t))},function(t,e){function n(t){function e(t){var e=t.read(4),n=t.readInt32();return{id:e,length:n,data:t.read(n)}}function n(t){var e={};e.deltaTime=t.readVarInt();var n=t.readInt8();if(240==(240&n)){if(255==n){e.type=\"meta\";var r=t.readInt8(),a=t.readVarInt();switch(r){case 0:if(e.subtype=\"sequenceNumber\",2!=a)throw\"Expected length for sequenceNumber event is 2, got \"+a;return e.number=t.readInt16(),e;case 1:return e.subtype=\"text\",e.text=t.read(a),e;case 2:return e.subtype=\"copyrightNotice\",e.text=t.read(a),e;case 3:return e.subtype=\"trackName\",e.text=t.read(a),e;case 4:return e.subtype=\"instrumentName\",e.text=t.read(a),e;case 5:return e.subtype=\"lyrics\",e.text=t.read(a),e;case 6:return e.subtype=\"marker\",e.text=t.read(a),e;case 7:return e.subtype=\"cuePoint\",e.text=t.read(a),e;case 32:if(e.subtype=\"midiChannelPrefix\",1!=a)throw\"Expected length for midiChannelPrefix event is 1, got \"+a;return e.channel=t.readInt8(),e;case 47:if(e.subtype=\"endOfTrack\",0!=a)throw\"Expected length for endOfTrack event is 0, got \"+a;return e;case 81:if(e.subtype=\"setTempo\",3!=a)throw\"Expected length for setTempo event is 3, got \"+a;return e.microsecondsPerBeat=(t.readInt8()<<16)+(t.readInt8()<<8)+t.readInt8(),e;case 84:if(e.subtype=\"smpteOffset\",5!=a)throw\"Expected length for smpteOffset event is 5, got \"+a;var o=t.readInt8();return e.frameRate={0:24,32:25,64:29,96:30}[96&o],e.hour=31&o,e.min=t.readInt8(),e.sec=t.readInt8(),e.frame=t.readInt8(),e.subframe=t.readInt8(),e;case 88:if(e.subtype=\"timeSignature\",4!=a)throw\"Expected length for timeSignature event is 4, got \"+a;return e.numerator=t.readInt8(),e.denominator=Math.pow(2,t.readInt8()),e.metronome=t.readInt8(),e.thirtyseconds=t.readInt8(),e;case 89:if(e.subtype=\"keySignature\",2!=a)throw\"Expected length for keySignature event is 2, got \"+a;return e.key=t.readInt8(!0),e.scale=t.readInt8(),e;case 127:return e.subtype=\"sequencerSpecific\",e.data=t.read(a),e;default:return e.subtype=\"unknown\",e.data=t.read(a),e}return e.data=t.read(a),e}if(240==n){e.type=\"sysEx\";var a=t.readVarInt();return e.data=t.read(a),e}if(247==n){e.type=\"dividedSysEx\";var a=t.readVarInt();return e.data=t.read(a),e}throw\"Unrecognised MIDI event type byte: \"+n}var s;0==(128&n)?(s=n,n=i):(s=t.readInt8(),i=n);var u=n>>4;switch(e.channel=15&n,e.type=\"channel\",u){case 8:return e.subtype=\"noteOff\",e.noteNumber=s,e.velocity=t.readInt8(),e;case 9:return e.noteNumber=s,e.velocity=t.readInt8(),0==e.velocity?e.subtype=\"noteOff\":e.subtype=\"noteOn\",e;case 10:return e.subtype=\"noteAftertouch\",e.noteNumber=s,e.amount=t.readInt8(),e;case 11:return e.subtype=\"controller\",e.controllerType=s,e.value=t.readInt8(),e;case 12:return e.subtype=\"programChange\",e.programNumber=s,e;case 13:return e.subtype=\"channelAftertouch\",e.amount=s,e;case 14:return e.subtype=\"pitchBend\",e.value=s+(t.readInt8()<<7),e;default:throw\"Unrecognised MIDI event type: \"+u}}var i;stream=r(t);var a=e(stream);if(\"MThd\"!=a.id||6!=a.length)throw\"Bad .mid file - header not found\";var o=r(a.data),s=o.readInt16(),u=o.readInt16(),c=o.readInt16();if(32768&c)throw\"Expressing time division in SMTPE frames is not supported yet\";ticksPerBeat=c;for(var h={formatType:s,trackCount:u,ticksPerBeat:ticksPerBeat},f=[],d=0;d<h.trackCount;d++){f[d]=[];var l=e(stream);if(\"MTrk\"!=l.id)throw\"Unexpected chunk - expected MTrk, got \"+l.id;for(var p=r(l.data);!p.eof();){var m=n(p);f[d].push(m)}}return{header:h,tracks:f}}function r(t){function e(e){var n=t.substr(s,e);return s+=e,n}function n(){var e=(t.charCodeAt(s)<<24)+(t.charCodeAt(s+1)<<16)+(t.charCodeAt(s+2)<<8)+t.charCodeAt(s+3);return s+=4,e}function r(){var e=(t.charCodeAt(s)<<8)+t.charCodeAt(s+1);return s+=2,e}function i(e){var n=t.charCodeAt(s);return e&&n>127&&(n-=256),s+=1,n}function a(){return s>=t.length}function o(){for(var t=0;;){var e=i();if(!(128&e))return t+e;t+=127&e,t<<=7}}var s=0;return{eof:a,read:e,readInt32:n,readInt16:r,readInt8:i,readVarInt:o}}t.exports=function(t){return n(t)}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}}])});\n//# sourceMappingURL=MidiConvert.js.map"]}