{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/jon-trombone.js","js/main.js","js/pink-trombone/components/audio-system.js","js/pink-trombone/components/glottis.js","js/pink-trombone/components/tract-ui.js","js/pink-trombone/components/tract.js","js/pink-trombone/math-extensions.js","js/pink-trombone/noise.js","js/pink-trombone/pink-trombone.js","js/utils/model-loader.js","js/utils/webgl-detect.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_modelLoader","_pinkTrombone","JonTrombone","container","_this","this","_classCallCheck","style","position","renderer","THREE","WebGLRenderer","alpha","setPixelRatio","window","devicePixelRatio","setSize","offsetWidth","offsetHeight","setClearColor","appendChild","domElement","aspect","camera","PerspectiveCamera","scene","Scene","clock","Clock","trombone","PinkTrombone","setTimeout","StartAudio","moveJaw","button","document","createElement","innerHTML","cssText","addEventListener","ToggleMute","muted","jawFlapSpeed","jawOpenOffset","SetUpThree","SetUpScene","OnUpdate","controls","OrbitControls","target","set","update","_this2","light1","HemisphereLight","name","add","light2","DirectionalLight","ModelLoader","LoadJSON","object","jon","rotation","y","Math","degToRad","jaw","skeleton","bones","find","obj","jawShutZ","z","getDelta","requestAnimationFrame","bind","time","getElapsedTime","percent","sin","TractUI","Buh","render","_webglDetect","_jonTrombone","getElementById","Detector","HasWebGL","jonTrombone","dat","console","log","gui","GUI","jonGUI","addFolder","min","max","voiceGUI","AudioSystem","Glottis","tractGUI","Tract","step","GetErrorHTML","classList","blockLength","blockTime","soundOn","useWhiteNoise","AudioContext","webkitAudioContext","audioContext","sampleRate","scriptProcessor","createScriptProcessor","connect","destination","onaudioprocess","doScriptProcessor","whiteNoise","createWhiteNoiseNode","aspirateFilter","createBiquadFilter","type","frequency","value","Q","fricativeFilter","start","frameCount","myArrayBuffer","createBuffer","nowBuffering","getChannelData","random","source","createBufferSource","buffer","loop","event","inputArray1","inputBuffer","inputArray2","outArray","outputBuffer","j","N","lambda1","lambda2","glottalOutput","runStep","vocalOutput","lipOutput","noseOutput","finishBlock","disconnect","_noise","timeInWaveform","oldFrequency","newFrequency","UIFrequency","smoothFrequency","oldTenseness","newTenseness","UITenseness","totalTime","vibratoAmount","vibratoFrequency","intensity","loudness","isTouched","touch","x","keyboardTop","keyboardLeft","keyboardWidth","keyboardHeight","semitones","marks","baseNote","output","setupWaveform","alive","UI","touchesWithMouse","local_y","local_x","clamp","semitone","pow","cos","PI","lambda","noiseSource","timeStep","waveformLength","out","normalizedLFWaveform","aspiration","sqrt","getNoiseModulator","_noise2","default","simplex1","voiced","vibrato","autoWobble","alwaysVoice","tenseness","Rd","Ra","Rk","Rg","Ta","Tp","Te","epsilon","shift","exp","Delta","RHSIntegral","totalLowerIntegral","totalUpperIntegral","omega","E0","originX","originY","radius","scale","tongueIndex","tongueDiameter","innerTongueControlRadius","outerTongueControlRadius","tongueTouch","angleScale","angleOffset","noseOffset","gridOffset","index","setRestDiameter","diameter","targetDiameter","restDiameter","tongueLowerIndexBound","bladeStart","tongueUpperIndexBound","tipStart","tongueIndexCentre","xx","yy","angle","atan2","lipStart","fixedTongueDiameter","curve","progress","_i","interp","lerp","R","L","reflection","junctionOutputR","junctionOutputL","maxAmplitude","newDiameter","A","glottalReflection","lipReflection","lastObstruction","fade","movementSpeed","transients","velumTarget","floor","Float64Array","newReflection","noseLength","noseStart","noseR","noseL","noseJunctionOutputR","noseJunctionOutputL","noseReflection","noseDiameter","noseA","noseMaxAmplitude","d","newReflectionLeft","newReflectionRight","newReflectionNose","calculateReflections","calculateNoseReflections","deltaTime","amount","newLastObstruction","slowReturn","moveTowards","addTransient","reflectionLeft","reflectionRight","reflectionNose","sum","turbulenceNoise","updateAmplitudes","processTransients","addTurbulenceNoise","w","amplitude","abs","reshapeTract","trans","timeAlive","lifeTime","strength","exponent","push","splice","delta","thinness0","openness","noise0","noise1","number","current","amountUp","amountDown","gaussian","c","b","Grad","Noise","grad3","p","perm","Array","gradP","seed","Date","now","_seed","v","xin","yin","n0","n1","n2","i1","j1","F2","G2","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","dot2","t1","t2","simplex2","singleton","Object","freeze","_audioSystem","_glottis","_tract","_tractUi","noiseFreq","noiseQ","init","startSound","doMute","mute","unmute","SetMute","modelInfo","loadedCallback","onProgress","xhr","lengthComputable","percentComplete","loaded","total","round","onError","mtlLoader","MTLLoader","setPath","path","load","mtlFile","materials","preload","objLoader","OBJLoader","setMaterials","objFile","JSONLoader","geometry","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","skinning","err","return","mesh","SkinnedMesh","MultiMaterial","manager","LoadingManager","item","FBXLoader","WebGLRenderingContext","canvas","names","context","getContext","getParameter","message","arguments"],"mappings":"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","file":"jon-trombone.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ModelLoader } from \"./utils/model-loader.js\";\nimport { PinkTrombone } from \"./pink-trombone/pink-trombone.js\";\n\nclass JonTrombone {\n    constructor(container) {\n        this.container = container;\n        this.container.style.position = \"relative\";\n\n        // Set up renderer and embed in container\n        this.renderer = new THREE.WebGLRenderer( { alpha: true } );\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n        this.renderer.setClearColor(0x000000, 0);\n        this.container.appendChild(this.renderer.domElement);\n\n        // Set up scene and view\n        let aspect = this.container.offsetWidth / this.container.offsetHeight;\n        this.camera = new THREE.PerspectiveCamera( 45, aspect, 0.1, 100 );\n        this.scene = new THREE.Scene();\n\n        // Set up clock for timing\n        this.clock = new THREE.Clock();\n\n        //window.scene = this.scene;\n\n        let startDelayMS = 1000;\n        this.trombone = new PinkTrombone();\n        setTimeout(()=> {\n            this.trombone.StartAudio();\n            this.moveJaw = true;\n        }, startDelayMS);\n\n        // Mute button for trombone\n        let button = document.createElement(\"button\");\n        button.innerHTML = \"Mute\";\n        button.style.cssText = \"position: absolute; display: block; top: 0; left: 0;\";\n        this.container.appendChild(button);\n        button.addEventListener (\"click\", () => {\n            this.trombone.ToggleMute();\n            button.innerHTML = this.trombone.muted ? \"Unmute\" : \"Mute\";\n        });\n\n        this.jawFlapSpeed = 20.0;\n        this.jawOpenOffset = 0.19;\n        this.moveJaw = false;\n\n        this.SetUpThree();\n        this.SetUpScene();\n\n        // Start the update loop\n        this.OnUpdate();\n    }\n\n    SetUpThree() {\n        // Add orbit controls\n        this.controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n        this.controls.target.set( 0, 0, 0 );\n        this.controls.update();\n    }\n\n    SetUpScene() {\n\n        // Set camera position\n        this.camera.position.set( 0, 0, 0.5 );\n\n        // Lights\n        let light1 = new THREE.HemisphereLight(0xffffff, 0x444444, 1.0);\n        light1.name = \"Hemisphere Light\";\n        light1.position.set(0, 1, 0);\n        this.scene.add(light1);\n\n        let light2 = new THREE.DirectionalLight(0xffffff, 1.0);\n        light2.name = \"Directional Light\";\n        light2.position.set(0, 1, 0);\n        this.scene.add(light2);\n\n        // Load the Jon model and place it in the scene\n        ModelLoader.LoadJSON(\"../resources/jon/three/jon.json\", (object) => {\n            this.jon = object;\n            this.scene.add( this.jon );\n            this.jon.rotation.y = (THREE.Math.degToRad(15));\n\n            this.jaw = this.jon.skeleton.bones.find((obj) => {\n                return obj.name == \"Bone.006\";\n            });\n            if(this.jaw){\n                this.jawShutZ = this.jaw.position.z;\n            }\n        });\n\n\n    }\n\n    OnUpdate() {\n        let deltaTime = this.clock.getDelta();\n        requestAnimationFrame( this.OnUpdate.bind(this) );\n\n        if(this.jaw && this.moveJaw){\n            let time = this.clock.getElapsedTime();// % 60;\n\n            // Move the jaw\n            let percent = (Math.sin(time * this.jawFlapSpeed) + 1.0) / 2.0;\n            this.jaw.position.z = this.jawShutZ + (percent * this.jawOpenOffset);\n\n            // Make the audio match the jaw position\n            this.trombone.TractUI.Buh(1.0 - percent);\n        }\n\n        // Render\n        this.renderer.render(this.scene, this.camera);\n    }\n\n}\n\nexport { JonTrombone };","import { Detector } from \"./utils/webgl-detect.js\";\nimport { JonTrombone } from \"./jon-trombone.js\";\n\n// Optionally bundle three.js as part of the project\n//import THREELib from \"three-js\";\n//var THREE = THREELib(); // return THREE JS\n\nlet container = document.getElementById(\"jon-trombone-container\");\n\n/**\n * Creates and attaches a GUI to the page if DAT.GUI is included.\n */\nvar AttachGUI = function(){\n    if(typeof(dat) === \"undefined\"){\n        console.log(\"No DAT.GUI instance found. Import on the page to use!\");\n        return;\n    }\n\n    var gui = new dat.GUI({\n    });\n\n    var jon = window.jonTrombone;\n\n    gui.add(jon.trombone, 'ToggleMute');\n\n    var jonGUI = gui.addFolder(\"Jon\");\n    jonGUI.add(jon, \"moveJaw\")\n    jonGUI.add(jon, \"jawFlapSpeed\").min(0).max(100);\n    jonGUI.add(jon, \"jawOpenOffset\").min(0).max(1);\n\n    var voiceGUI = gui.addFolder(\"Voice\");\n    voiceGUI.add(jon.trombone, 'autoWobble');\n    voiceGUI.add(jon.trombone.AudioSystem, 'useWhiteNoise');\n    voiceGUI.add(jon.trombone.Glottis, 'UITenseness').min(0).max(1);\n    voiceGUI.add(jon.trombone.Glottis, 'vibratoAmount').min(0).max(0.5);\n    voiceGUI.add(jon.trombone.Glottis, 'UIFrequency').min(1).max(1000);\n    voiceGUI.add(jon.trombone.Glottis, 'loudness').min(0).max(1);\n\n    var tractGUI = gui.addFolder(\"Tract\");\n    tractGUI.add(jon.trombone.Tract, 'movementSpeed').min(1).max(30).step(1);\n    tractGUI.add(jon.trombone.TractUI, 'target').min(0.001).max(1);\n    tractGUI.add(jon.trombone.TractUI, 'index').min(0).max(43).step(1);\n    tractGUI.add(jon.trombone.TractUI, 'radius').min(0).max(5).step(1);\n}\n\nif ( !Detector.HasWebGL() ) {\n    //exit(\"WebGL is not supported on this browser.\");\n    console.log(\"WebGL is not supported on this browser.\");\n    container.innerHTML = Detector.GetErrorHTML();\n    container.classList.add(\"no-webgl\");\n}\nelse{\n    window.jonTrombone = new JonTrombone(container);\n    AttachGUI();\n}","class AudioSystem {  \n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.blockLength = 512;\n        this.blockTime = 1;\n        this.soundOn = false;\n\n        this.useWhiteNoise = true;\n    }\n\n    init() {\n        window.AudioContext = window.AudioContext||window.webkitAudioContext;\n        this.audioContext = new window.AudioContext();      \n        this.trombone.sampleRate = this.audioContext.sampleRate;\n        \n        this.blockTime = this.blockLength/this.trombone.sampleRate;\n    }\n    \n    startSound() {\n        //scriptProcessor may need a dummy input channel on iOS\n        this.scriptProcessor = this.audioContext.createScriptProcessor(this.blockLength, 2, 1);\n        this.scriptProcessor.connect(this.audioContext.destination); \n        this.scriptProcessor.onaudioprocess = this.doScriptProcessor.bind(this);\n    \n        var whiteNoise = this.createWhiteNoiseNode(2 * this.trombone.sampleRate); // 2 seconds of noise\n        \n        var aspirateFilter = this.audioContext.createBiquadFilter();\n        aspirateFilter.type = \"bandpass\";\n        aspirateFilter.frequency.value = 500;\n        aspirateFilter.Q.value = 0.5;\n        whiteNoise.connect(aspirateFilter);\n        aspirateFilter.connect(this.scriptProcessor);  \n        \n        var fricativeFilter = this.audioContext.createBiquadFilter();\n        fricativeFilter.type = \"bandpass\";\n        fricativeFilter.frequency.value = 1000;\n        fricativeFilter.Q.value = 0.5;\n        whiteNoise.connect(fricativeFilter);\n        fricativeFilter.connect(this.scriptProcessor);        \n        \n        whiteNoise.start(0);\n\n        // Generate white noise (test)\n        // var wn = this.createWhiteNoiseNode(2*this.trombone.sampleRate);\n        // wn.connect(this.audioContext.destination);\n        // wn.start(0);\n    }\n    \n    createWhiteNoiseNode(frameCount) {\n        var myArrayBuffer = this.audioContext.createBuffer(1, frameCount, this.trombone.sampleRate);\n\n        var nowBuffering = myArrayBuffer.getChannelData(0);\n        for (var i = 0; i < frameCount; i++) \n        {\n            nowBuffering[i] = this.useWhiteNoise ? Math.random() : 1.0;// gaussian();\n        }\n\n        var source = this.audioContext.createBufferSource();\n        source.buffer = myArrayBuffer;\n        source.loop = true;\n\n        return source;\n    }\n    \n    \n    doScriptProcessor(event) {\n        var inputArray1 = event.inputBuffer.getChannelData(0);\n        var inputArray2 = event.inputBuffer.getChannelData(1);\n        var outArray = event.outputBuffer.getChannelData(0);\n        for (var j = 0, N = outArray.length; j < N; j++)\n        {\n            var lambda1 = j/N;\n            var lambda2 = (j+0.5)/N;\n            var glottalOutput = this.trombone.Glottis.runStep(lambda1, inputArray1[j]); \n            \n            var vocalOutput = 0;\n            //Tract runs at twice the sample rate \n            this.trombone.Tract.runStep(glottalOutput, inputArray2[j], lambda1);\n            vocalOutput += this.trombone.Tract.lipOutput + this.trombone.Tract.noseOutput;\n            this.trombone.Tract.runStep(glottalOutput, inputArray2[j], lambda2);\n            vocalOutput += this.trombone.Tract.lipOutput + this.trombone.Tract.noseOutput;\n            outArray[j] = vocalOutput * 0.125;\n        }\n        this.trombone.Glottis.finishBlock();\n        this.trombone.Tract.finishBlock();\n    }\n    \n    mute() {\n        this.scriptProcessor.disconnect();\n    }\n    \n    unmute() {\n        this.scriptProcessor.connect(this.audioContext.destination); \n    }\n    \n}\n\nexports.AudioSystem = AudioSystem;","import noise from \"../noise.js\";\n\nclass Glottis {\n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.timeInWaveform = 0;\n        this.oldFrequency = 140;\n        this.newFrequency = 140;\n        this.UIFrequency = 140;\n        this.smoothFrequency = 140;\n        this.oldTenseness = 0.6;\n        this.newTenseness = 0.6;\n        this.UITenseness = 0.6;\n        this.totalTime = 0;\n        this.vibratoAmount = 0.005;\n        this.vibratoFrequency = 6;\n        this.intensity = 0;\n        this.loudness = 1;\n        this.isTouched = false;\n        this.touch = 0;\n        this.x = 240;\n        this.y = 530;\n\n        this.keyboardTop = 500;\n        this.keyboardLeft = 0;\n        this.keyboardWidth = 600;\n        this.keyboardHeight = 100;\n        this.semitones = 20;\n        this.marks = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0];\n        this.baseNote = 87.3071; //F\n\n        this.output;\n\n    }\n    \n    init() {\n        this.setupWaveform(0);\n    }\n    \n    handleTouches() {\n        if (this.touch != 0 && !this.touch.alive) this.touch = 0;\n        \n        if (this.touch == 0)\n        {        \n            for (var j=0; j<UI.touchesWithMouse.length; j++)  \n            {\n                var touch = UI.touchesWithMouse[j];\n                if (!touch.alive) continue;\n                if (touch.y<this.keyboardTop) continue;\n                this.touch = touch;\n            }    \n        }\n        \n        if (this.touch != 0)\n        {\n            var local_y = this.touch.y -  this.keyboardTop-10;\n            var local_x = this.touch.x - this.keyboardLeft;\n            local_y = Math.clamp(local_y, 0, this.keyboardHeight-26);\n            var semitone = this.semitones * local_x / this.keyboardWidth + 0.5;\n            Glottis.UIFrequency = this.baseNote * Math.pow(2, semitone/12);\n            if (Glottis.intensity == 0) Glottis.smoothFrequency = Glottis.UIFrequency;\n            //Glottis.UIRd = 3*local_y / (this.keyboardHeight-20);\n            var t = Math.clamp(1-local_y / (this.keyboardHeight-28), 0, 1);\n            Glottis.UITenseness = 1-Math.cos(t*Math.PI*0.5);\n            Glottis.loudness = Math.pow(Glottis.UITenseness, 0.25);\n            this.x = this.touch.x;\n            this.y = local_y + this.keyboardTop+10;\n        }\n        Glottis.isTouched = (this.touch != 0);\n    }\n        \n    runStep(lambda, noiseSource) {\n        var timeStep = 1.0 / this.trombone.sampleRate;\n        this.timeInWaveform += timeStep;\n        this.totalTime += timeStep;\n        if (this.timeInWaveform > this.waveformLength) \n        {\n            this.timeInWaveform -= this.waveformLength;\n            this.setupWaveform(lambda);\n        }\n        var out = this.normalizedLFWaveform(this.timeInWaveform/this.waveformLength);\n        var aspiration = this.intensity*(1.0-Math.sqrt(this.UITenseness))*this.getNoiseModulator()*noiseSource;\n        aspiration *= 0.2 + 0.02 * noise.simplex1(this.totalTime * 1.99);\n        out += aspiration;\n        return out;\n    }\n    \n    getNoiseModulator() {\n        var voiced = 0.1+0.2*Math.max(0,Math.sin(Math.PI*2*this.timeInWaveform/this.waveformLength));\n        //return 0.3;\n        return this.UITenseness* this.intensity * voiced + (1-this.UITenseness* this.intensity ) * 0.3;\n    }\n    \n    finishBlock() {\n        var vibrato = 0;\n        vibrato += this.vibratoAmount * Math.sin(2*Math.PI * this.totalTime *this.vibratoFrequency);          \n        vibrato += 0.02 * noise.simplex1(this.totalTime * 4.07);\n        vibrato += 0.04 * noise.simplex1(this.totalTime * 2.15);\n        if (this.trombone.autoWobble)\n        {\n            vibrato += 0.2 * noise.simplex1(this.totalTime * 0.98);\n            vibrato += 0.4 * noise.simplex1(this.totalTime * 0.5);\n        }\n        if (this.UIFrequency>this.smoothFrequency) \n            this.smoothFrequency = Math.min(this.smoothFrequency * 1.1, this.UIFrequency);\n        if (this.UIFrequency<this.smoothFrequency) \n            this.smoothFrequency = Math.max(this.smoothFrequency / 1.1, this.UIFrequency);\n        this.oldFrequency = this.newFrequency;\n        this.newFrequency = this.smoothFrequency * (1+vibrato);\n        this.oldTenseness = this.newTenseness;\n        this.newTenseness = this.UITenseness\n            + 0.1*noise.simplex1(this.totalTime*0.46)+0.05*noise.simplex1(this.totalTime*0.36);\n        if (!this.isTouched && this.trombone.alwaysVoice) this.newTenseness += (3-this.UITenseness)*(1-this.intensity);\n        \n        if (this.isTouched || this.trombone.alwaysVoice){\n            this.intensity += 0.13;\n        }\n        this.intensity = Math.clamp(this.intensity, 0, 1);\n    }\n    \n    setupWaveform(lambda) {\n        this.frequency = this.oldFrequency*(1-lambda) + this.newFrequency*lambda;\n        var tenseness = this.oldTenseness*(1-lambda) + this.newTenseness*lambda;\n        this.Rd = 3*(1-tenseness);\n        this.waveformLength = 1.0/this.frequency;\n        \n        var Rd = this.Rd;\n        if (Rd<0.5) Rd = 0.5;\n        if (Rd>2.7) Rd = 2.7;\n        // normalized to time = 1, Ee = 1\n        var Ra = -0.01 + 0.048*Rd;\n        var Rk = 0.224 + 0.118*Rd;\n        var Rg = (Rk/4)*(0.5+1.2*Rk)/(0.11*Rd-Ra*(0.5+1.2*Rk));\n        \n        var Ta = Ra;\n        var Tp = 1 / (2*Rg);\n        var Te = Tp + Tp*Rk; //\n        \n        var epsilon = 1/Ta;\n        var shift = Math.exp(-epsilon * (1-Te));\n        var Delta = 1 - shift; //divide by this to scale RHS\n           \n        var RHSIntegral = (1/epsilon)*(shift - 1) + (1-Te)*shift;\n        RHSIntegral = RHSIntegral/Delta;\n        \n        var totalLowerIntegral = - (Te-Tp)/2 + RHSIntegral;\n        var totalUpperIntegral = -totalLowerIntegral;\n        \n        var omega = Math.PI/Tp;\n        var s = Math.sin(omega*Te);\n        var y = -Math.PI*s*totalUpperIntegral / (Tp*2);\n        var z = Math.log(y);\n        var alpha = z/(Tp/2 - Te);\n        var E0 = -1 / (s*Math.exp(alpha*Te));\n        this.alpha = alpha;\n        this.E0 = E0;\n        this.epsilon = epsilon;\n        this.shift = shift;\n        this.Delta = Delta;\n        this.Te=Te;\n        this.omega = omega;\n    }\n    \n \n    normalizedLFWaveform(t) {     \n        if (t>this.Te) this.output = (-Math.exp(-this.epsilon * (t-this.Te)) + this.shift)/this.Delta;\n        else this.output = this.E0 * Math.exp(this.alpha*t) * Math.sin(this.omega * t);\n     \n        return this.output * this.intensity * this.loudness;\n    }\n}\n\nexport { Glottis };","class TractUI\n{\n\n    constructor(trombone) {\n        this.trombone = trombone;\n        \n        this.originX = 340; \n        this.originY = 449; \n        this.radius = 298; \n        this.scale = 60;\n        this.tongueIndex = 12.9;\n        this.tongueDiameter = 2.43;\n        this.innerTongueControlRadius = 2.05;\n        this.outerTongueControlRadius = 3.5;\n        this.tongueTouch = 0;\n        this.angleScale = 0.64;\n        this.angleOffset = -0.24;\n        this.noseOffset = 0.8;\n        this.gridOffset = 1.7;\n\n        // Jon's UI options\n        this.target = 0.1;\n        this.index = 42;\n        this.radius = 0;\n    }\n    \n    init() {\n        let Tract = this.trombone.Tract;\n\n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) \n        {\n            Tract.diameter[i] = Tract.targetDiameter[i] = Tract.restDiameter[i];\n        }\n\n        this.tongueLowerIndexBound = Tract.bladeStart+2;\n        this.tongueUpperIndexBound = Tract.tipStart-3;\n        this.tongueIndexCentre = 0.5*(this.tongueLowerIndexBound+this.tongueUpperIndexBound);\n    }\n        \n    getIndex(x,y) {\n        let Tract = this.trombone.Tract;\n\n        var xx = x-this.originX; var yy = y-this.originY;\n        var angle = Math.atan2(yy, xx);\n        while (angle> 0) angle -= 2*Math.PI;\n        return (Math.PI + angle - this.angleOffset)*(Tract.lipStart-1) / (this.angleScale*Math.PI);\n    }\n\n    getDiameter(x,y) {\n        var xx = x-this.originX; var yy = y-this.originY;\n        return (this.radius-Math.sqrt(xx*xx + yy*yy))/this.scale;\n    }\n    \n    setRestDiameter() {\n        let Tract = this.trombone.Tract;\n\n        for (var i=Tract.bladeStart; i<Tract.lipStart; i++)\n        {\n            var t = 1.1 * Math.PI*(this.tongueIndex - i)/(Tract.tipStart - Tract.bladeStart);\n            var fixedTongueDiameter = 2+(this.tongueDiameter-2)/1.5;\n            var curve = (1.5-fixedTongueDiameter+this.gridOffset)*Math.cos(t);\n            if (i == Tract.bladeStart-2 || i == Tract.lipStart-1) curve *= 0.8;\n            if (i == Tract.bladeStart || i == Tract.lipStart-2) curve *= 0.94;               \n            Tract.restDiameter[i] = 1.5 - curve;\n        }\n    }\n\n    Buh(progress) {\n\n        let Tract = this.trombone.Tract;\n        \n        this.setRestDiameter();\n        for (var i=0; i<Tract.n; i++) Tract.targetDiameter[i] = Tract.restDiameter[i];    \n\n        // Disable this behavior if the mouth is closed a certain amount\n        //if (progress > 0.8 || progress < 0.1) return;\n        \n        for(let i= this.index - this.radius; i <= this.index + this.radius; i++){\n            if (i > Tract.targetDiameter.length || i < 0) continue;\n            let interp = Math.lerp(Tract.restDiameter[i], this.target, progress);\n            Tract.targetDiameter[i] = interp;\n        }\n    }\n\n\n}\n\nexport { TractUI };","class Tract {\n\n    constructor(trombone) {\n        this.trombone = trombone;\n\n        this.n = 44;\n        this.bladeStart = 10;\n        this.tipStart = 32;\n        this.lipStart = 39;\n        this.R = []; //component going right\n        this.L = []; //component going left\n        this.reflection = [];\n        this.junctionOutputR = [];\n        this.junctionOutputL = [];\n        this.maxAmplitude = [];\n        this.diameter = [];\n        this.restDiameter = [];\n        this.targetDiameter = [];\n        this.newDiameter = [];\n        this.A = [];\n        this.glottalReflection = 0.75;\n        this.lipReflection = -0.85;\n        this.lastObstruction = -1;\n        this.fade = 1.0; //0.9999,\n        this.movementSpeed = 15; //cm per second\n        this.transients = [];\n        this.lipOutput = 0;\n        this.noseOutput = 0;\n        this.velumTarget = 0.01;\n    }\n\n    init() {\n        this.bladeStart = Math.floor(this.bladeStart*this.n/44);\n        this.tipStart = Math.floor(this.tipStart*this.n/44);\n        this.lipStart = Math.floor(this.lipStart*this.n/44);        \n        this.diameter = new Float64Array(this.n);\n        this.restDiameter = new Float64Array(this.n);\n        this.targetDiameter = new Float64Array(this.n);\n        this.newDiameter = new Float64Array(this.n);\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = 0;\n            if (i<7*this.n/44-0.5) diameter = 0.6;\n            else if (i<12*this.n/44) diameter = 1.1;\n            else diameter = 1.5;\n            this.diameter[i] = this.restDiameter[i] = this.targetDiameter[i] = this.newDiameter[i] = diameter;\n        }\n        this.R = new Float64Array(this.n);\n        this.L = new Float64Array(this.n);\n        this.reflection = new Float64Array(this.n+1);\n        this.newReflection = new Float64Array(this.n+1);\n        this.junctionOutputR = new Float64Array(this.n+1);\n        this.junctionOutputL = new Float64Array(this.n+1);\n        this.A =new Float64Array(this.n);\n        this.maxAmplitude = new Float64Array(this.n);\n        \n        this.noseLength = Math.floor(28*this.n/44)\n        this.noseStart = this.n-this.noseLength + 1;\n        this.noseR = new Float64Array(this.noseLength);\n        this.noseL = new Float64Array(this.noseLength);\n        this.noseJunctionOutputR = new Float64Array(this.noseLength+1);\n        this.noseJunctionOutputL = new Float64Array(this.noseLength+1);        \n        this.noseReflection = new Float64Array(this.noseLength+1);\n        this.noseDiameter = new Float64Array(this.noseLength);\n        this.noseA = new Float64Array(this.noseLength);\n        this.noseMaxAmplitude = new Float64Array(this.noseLength);\n        for (var i=0; i<this.noseLength; i++)\n        {\n            var diameter;\n            var d = 2*(i/this.noseLength);\n            if (d<1) diameter = 0.4+1.6*d;\n            else diameter = 0.5+1.5*(2-d);\n            diameter = Math.min(diameter, 1.9);\n            this.noseDiameter[i] = diameter;\n        }       \n        this.newReflectionLeft = this.newReflectionRight = this.newReflectionNose = 0;\n        this.calculateReflections();        \n        this.calculateNoseReflections();\n        this.noseDiameter[0] = this.velumTarget;\n    }\n    \n    reshapeTract(deltaTime) {\n        var amount = deltaTime * this.movementSpeed; ;    \n        var newLastObstruction = -1;\n        for (var i=0; i<this.n; i++)\n        {\n            var diameter = this.diameter[i];\n            var targetDiameter = this.targetDiameter[i];\n            if (diameter <= 0) newLastObstruction = i;\n            var slowReturn; \n            if (i<this.noseStart) slowReturn = 0.6;\n            else if (i >= this.tipStart) slowReturn = 1.0; \n            else slowReturn = 0.6+0.4*(i-this.noseStart)/(this.tipStart-this.noseStart);\n            this.diameter[i] = Math.moveTowards(diameter, targetDiameter, slowReturn*amount, 2*amount);\n        }\n        if (this.lastObstruction>-1 && newLastObstruction == -1 && this.noseA[0]<0.05)\n        {\n            this.addTransient(this.lastObstruction);\n        }\n        this.lastObstruction = newLastObstruction;\n        \n        amount = deltaTime * this.movementSpeed; \n        this.noseDiameter[0] = Math.moveTowards(this.noseDiameter[0], this.velumTarget, \n                amount*0.25, amount*0.1);\n        this.noseA[0] = this.noseDiameter[0]*this.noseDiameter[0];        \n    }\n    \n    calculateReflections() {\n        for (var i=0; i<this.n; i++) \n        {\n            this.A[i] = this.diameter[i]*this.diameter[i]; //ignoring PI etc.\n        }\n        for (var i=1; i<this.n; i++)\n        {\n            this.reflection[i] = this.newReflection[i];\n            if (this.A[i] == 0) this.newReflection[i] = 0.999; //to prevent some bad behaviour if 0\n            else this.newReflection[i] = (this.A[i-1]-this.A[i]) / (this.A[i-1]+this.A[i]); \n        }\n        \n        //now at junction with nose\n\n        this.reflectionLeft = this.newReflectionLeft;\n        this.reflectionRight = this.newReflectionRight;\n        this.reflectionNose = this.newReflectionNose;\n        var sum = this.A[this.noseStart]+this.A[this.noseStart+1]+this.noseA[0];\n        this.newReflectionLeft = (2*this.A[this.noseStart]-sum)/sum;\n        this.newReflectionRight = (2*this.A[this.noseStart+1]-sum)/sum;   \n        this.newReflectionNose = (2*this.noseA[0]-sum)/sum;      \n    }\n\n    calculateNoseReflections() {\n        for (var i=0; i<this.noseLength; i++) \n        {\n            this.noseA[i] = this.noseDiameter[i]*this.noseDiameter[i]; \n        }\n        for (var i=1; i<this.noseLength; i++)\n        {\n            this.noseReflection[i] = (this.noseA[i-1]-this.noseA[i]) / (this.noseA[i-1]+this.noseA[i]); \n        }\n    }\n    \n    runStep(glottalOutput, turbulenceNoise, lambda) {\n        var updateAmplitudes = (Math.random()<0.1);\n    \n        //mouth\n        this.processTransients();\n        this.addTurbulenceNoise(turbulenceNoise);\n        \n        //this.glottalReflection = -0.8 + 1.6 * Glottis.newTenseness;\n        this.junctionOutputR[0] = this.L[0] * this.glottalReflection + glottalOutput;\n        this.junctionOutputL[this.n] = this.R[this.n-1] * this.lipReflection; \n        \n        for (var i=1; i<this.n; i++)\n        {\n            var r = this.reflection[i] * (1-lambda) + this.newReflection[i]*lambda;\n            var w = r * (this.R[i-1] + this.L[i]);\n            this.junctionOutputR[i] = this.R[i-1] - w;\n            this.junctionOutputL[i] = this.L[i] + w;\n        }    \n        \n        //now at junction with nose\n        var i = this.noseStart;\n        var r = this.newReflectionLeft * (1-lambda) + this.reflectionLeft*lambda;\n        this.junctionOutputL[i] = r*this.R[i-1]+(1+r)*(this.noseL[0]+this.L[i]);\n        r = this.newReflectionRight * (1-lambda) + this.reflectionRight*lambda;\n        this.junctionOutputR[i] = r*this.L[i]+(1+r)*(this.R[i-1]+this.noseL[0]);     \n        r = this.newReflectionNose * (1-lambda) + this.reflectionNose*lambda;\n        this.noseJunctionOutputR[0] = r*this.noseL[0]+(1+r)*(this.L[i]+this.R[i-1]);\n         \n        for (var i=0; i<this.n; i++)\n        {          \n            this.R[i] = this.junctionOutputR[i]*0.999;\n            this.L[i] = this.junctionOutputL[i+1]*0.999; \n            \n            //this.R[i] = Math.clamp(this.junctionOutputR[i] * this.fade, -1, 1);\n            //this.L[i] = Math.clamp(this.junctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {   \n                var amplitude = Math.abs(this.R[i]+this.L[i]);\n                if (amplitude > this.maxAmplitude[i]) this.maxAmplitude[i] = amplitude;\n                else this.maxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.lipOutput = this.R[this.n-1];\n        \n        //nose     \n        this.noseJunctionOutputL[this.noseLength] = this.noseR[this.noseLength-1] * this.lipReflection; \n        \n        for (var i=1; i<this.noseLength; i++)\n        {\n            var w = this.noseReflection[i] * (this.noseR[i-1] + this.noseL[i]);\n            this.noseJunctionOutputR[i] = this.noseR[i-1] - w;\n            this.noseJunctionOutputL[i] = this.noseL[i] + w;\n        }\n        \n        for (var i=0; i<this.noseLength; i++)\n        {\n            this.noseR[i] = this.noseJunctionOutputR[i] * this.fade;\n            this.noseL[i] = this.noseJunctionOutputL[i+1] * this.fade;   \n            \n            //this.noseR[i] = Math.clamp(this.noseJunctionOutputR[i] * this.fade, -1, 1);\n            //this.noseL[i] = Math.clamp(this.noseJunctionOutputL[i+1] * this.fade, -1, 1);    \n            \n            if (updateAmplitudes)\n            {\n                var amplitude = Math.abs(this.noseR[i]+this.noseL[i]);\n                if (amplitude > this.noseMaxAmplitude[i]) this.noseMaxAmplitude[i] = amplitude;\n                else this.noseMaxAmplitude[i] *= 0.999;\n            }\n        }\n\n        this.noseOutput = this.noseR[this.noseLength-1];\n       \n    }\n    \n    finishBlock() {         \n        this.reshapeTract(this.trombone.AudioSystem.blockTime);\n        this.calculateReflections();\n    }\n    \n    addTransient(position) {\n        var trans = {}\n        trans.position = position;\n        trans.timeAlive = 0;\n        trans.lifeTime = 0.2;\n        trans.strength = 0.3;\n        trans.exponent = 200;\n        this.transients.push(trans);\n    }\n    \n    processTransients() {\n        for (var i = 0; i < this.transients.length; i++)  \n        {\n            var trans = this.transients[i];\n            var amplitude = trans.strength * Math.pow(2, -trans.exponent * trans.timeAlive);\n            this.R[trans.position] += amplitude/2;\n            this.L[trans.position] += amplitude/2;\n            trans.timeAlive += 1.0/(this.trombone.sampleRate*2);\n        }\n        for (var i=this.transients.length-1; i>=0; i--)\n        {\n            var trans = this.transients[i];\n            if (trans.timeAlive > trans.lifeTime)\n            {\n                this.transients.splice(i,1);\n            }\n        }\n    }\n    \n    addTurbulenceNoise(turbulenceNoise) {\n        // for (var j=0; j<UI.touchesWithMouse.length; j++)\n        // {\n        //     var touch = UI.touchesWithMouse[j];\n        //     if (touch.index<2 || touch.index>Tract.n) continue;\n        //     if (touch.diameter<=0) continue;            \n        //     var intensity = touch.fricative_intensity;\n        //     if (intensity == 0) continue;\n        //     this.addTurbulenceNoiseAtIndex(0.66*turbulenceNoise*intensity, touch.index, touch.diameter);\n        // }\n    }\n    \n    addTurbulenceNoiseAtIndex(turbulenceNoise, index, diameter) {   \n        var i = Math.floor(index);\n        var delta = index - i;\n        turbulenceNoise *= this.trombone.Glottis.getNoiseModulator();\n        var thinness0 = Math.clamp(8*(0.7-diameter),0,1);\n        var openness = Math.clamp(30*(diameter-0.3), 0, 1);\n        var noise0 = turbulenceNoise*(1-delta)*thinness0*openness;\n        var noise1 = turbulenceNoise*delta*thinness0*openness;\n        this.R[i+1] += noise0/2;\n        this.L[i+1] += noise0/2;\n        this.R[i+2] += noise1/2;\n        this.L[i+2] += noise1/2;\n    }\n};\n\nexport { Tract };","Math.clamp = function(number, min, max) {\n    if (number<min) return min;\n    else if (number>max) return max;\n    else return number;\n}\n\nMath.moveTowards = function(current, target, amount) {\n    if (current<target) return Math.min(current+amount, target);\n    else return Math.max(current-amount, target);\n}\n\nMath.moveTowards = function(current, target, amountUp, amountDown) {\n    if (current<target) return Math.min(current+amountUp, target);\n    else return Math.max(current-amountDown, target);\n}\n\nMath.gaussian = function() {\n    var s = 0;\n    for (var c=0; c<16; c++) s+=Math.random();\n    return (s-8)/4;\n}\n\nMath.lerp = function(a, b, t) {\n    return a + (b - a) * t;\n}","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nclass Grad {\n    constructor(x, y, z){\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    dot2(x, y){\n        return this.x*x + this.y*y;\n    }\n\n    dot3(x, y, z) {\n        return this.x*x + this.y*y + this.z*z;\n    };\n}\n\nclass Noise {\n    constructor() {\n        this.grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n                      new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n                      new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n        this.p = [151,160,137,91,90,15,\n            131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n            190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n            88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n            77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n            102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n            135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n            5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n            223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n            129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n            251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n            49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n            138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n\n        // To remove the need for index wrapping, double the permutation table length\n        this.perm = new Array(512);\n        this.gradP = new Array(512);\n\n        this.seed(Date.now());\n    }\n\n    seed(seed) {\n        if(seed > 0 && seed < 1) {\n            // Scale the seed out\n            seed *= 65536;\n        }\n\n        seed = Math.floor(seed);\n        if(seed < 256) {\n            seed |= seed << 8;\n        }\n\n        for(var i = 0; i < 256; i++) {\n            var v;\n            if (i & 1) {\n                v = this.p[i] ^ (seed & 255);\n            } else {\n                v = this.p[i] ^ ((seed>>8) & 255);\n            }\n\n            this.perm[i] = this.perm[i + 256] = v;\n            this.gradP[i] = this.gradP[i + 256] = this.grad3[v % 12];\n        }\n    };\n\n    // 2D simplex noise\n    simplex2(xin, yin) {\n        // Skewing and unskewing factors for 2, 3, and 4 dimensions\n        var F2 = 0.5*(Math.sqrt(3)-1);\n        var G2 = (3-Math.sqrt(3))/6;\n\n        var F3 = 1/3;\n        var G3 = 1/6;\n\n        var n0, n1, n2; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        var s = (xin+yin)*F2; // Hairy factor for 2D\n        var i = Math.floor(xin+s);\n        var j = Math.floor(yin+s);\n        var t = (i+j)*G2;\n        var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n        var y0 = yin-j+t;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1=1; j1=0;\n        } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n            i1=0; j1=1;\n        }\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        var y1 = y0 - j1 + G2;\n        var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        var y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        i &= 255;\n        j &= 255;\n        var gi0 = this.gradP[i+this.perm[j]];\n        var gi1 = this.gradP[i+i1+this.perm[j+j1]];\n        var gi2 = this.gradP[i+1+this.perm[j+1]];\n        // Calculate the contribution from the three corners\n        var t0 = 0.5 - x0*x0-y0*y0;\n        if(t0<0) {\n            n0 = 0;\n        } else {\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n        }\n        var t1 = 0.5 - x1*x1-y1*y1;\n        if(t1<0) {\n            n1 = 0;\n        } else {\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot2(x1, y1);\n        }\n        var t2 = 0.5 - x2*x2-y2*y2;\n        if(t2<0) {\n            n2 = 0;\n        } else {\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot2(x2, y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n    \n    simplex1(x){\n        return this.simplex2(x*1.2, -x*0.7);\n    }\n\n}\n\nconst singleton = new Noise();\nObject.freeze(singleton);\n\nexport default singleton;","import \"./math-extensions.js\";\n\nimport { AudioSystem } from \"./components/audio-system.js\";\nimport { Glottis } from \"./components/glottis.js\";\nimport { Tract } from \"./components/tract.js\";\nimport { TractUI } from \"./components/tract-ui.js\";\n\nclass PinkTrombone {\n    constructor(){\n\n        this.sampleRate = 0;\n        this.time = 0;\n        this.alwaysVoice = true;\n        this.autoWobble = true;\n        this.noiseFreq = 500;\n        this.noiseQ = 0.7;\n\n        this.AudioSystem = new AudioSystem(this);\n        this.AudioSystem.init();\n        \n        this.Glottis = new Glottis(this);\n        this.Glottis.init();\n\n        this.Tract = new Tract(this);\n        this.Tract.init();\n\n        this.TractUI = new TractUI(this);\n        this.TractUI.init();\n\n        //this.StartAudio();\n        //this.SetMute(true);\n    }\n\n    StartAudio() {\n        this.muted = false;\n        this.AudioSystem.startSound();\n    }\n\n    SetMute(doMute) {\n        doMute ? this.AudioSystem.mute() : this.AudioSystem.unmute();\n        this.muted = doMute;\n    }\n\n    ToggleMute() {\n        this.SetMute(!this.muted);\n    }\n\n}\n\nexport { PinkTrombone };","class ModelLoader {\n\n    /**\n     * Loads a model asynchronously. Expects an object containing\n     * the path to the object, the relative path of the OBJ file,\n     * and the relative path of the MTL file.\n     * \n     * An example:\n     * let modelInfo = {\n     *      path: \"../resources/obj/\",\n     *      objFile: \"test.obj\",\n     *      mtlFile: \"test.mtl\"\n     * }\n     */\n    static LoadOBJ(modelInfo, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var mtlLoader = new THREE.MTLLoader();\n        mtlLoader.setPath( modelInfo.path );\n\n        mtlLoader.load( modelInfo.mtlFile, ( materials ) => {\n            materials.preload();\n            var objLoader = new THREE.OBJLoader();\n            objLoader.setMaterials( materials );\n            objLoader.setPath( modelInfo.path );\n            objLoader.load( modelInfo.objFile, ( object ) => {\n                loadedCallback(object);\n            }, onProgress, onError );\n            \n        });\n\n    }\n\n    static LoadJSON(path, loadedCallback) {\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.JSONLoader();\n        loader.load( path, ( geometry, materials ) => {\n            // Apply skinning to each material so the verts are affected by bone movement\n            for(let mat of materials){\n                mat.skinning = true;\n            }\n            let mesh = new THREE.SkinnedMesh( geometry, new THREE.MultiMaterial( materials ) );\n            mesh.name = \"Jon\";\n            loadedCallback(mesh);\n        }, onProgress, onError);\n    }\n\n    static LoadFBX(path, loadedCallback) {\n        let manager = new THREE.LoadingManager();\n        manager.onProgress = function( item, loaded, total ) {\n            console.log( item, loaded, total );\n        };\n\n        var onProgress = function( xhr ) {\n            if ( xhr.lengthComputable ) {\n                var percentComplete = xhr.loaded / xhr.total * 100;\n                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );\n            }\n        };\n        var onError = function( xhr ) {\n        };\n\n        var loader = new THREE.FBXLoader( manager );\n        loader.load( path, ( object ) => {\n            loadedCallback(object);\n        }, onProgress, onError );\n    }\n\n}\n\nexport { ModelLoader };","class Detector {\n\n    //http://stackoverflow.com/questions/11871077/proper-way-to-detect-webgl-support\n    static HasWebGL() {\n        if (!!window.WebGLRenderingContext) {\n            var canvas = document.createElement(\"canvas\"),\n                    names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\n                context = false;\n\n            for(var i=0;i<4;i++) {\n                try {\n                    context = canvas.getContext(names[i]);\n                    if (context && typeof context.getParameter == \"function\") {\n                        // WebGL is enabled\n                        return true;\n                    }\n                } catch(e) {}\n            }\n\n            // WebGL is supported, but disabled\n            return false;\n        }\n        // WebGL not supported\n        return false;\n    }\n\n    static GetErrorHTML(message = null){\n        if(message == null){\n            message = `Your graphics card does not seem to support \n                        <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>. <br>\n                        Find out how to get it <a href=\"http://get.webgl.org/\">here</a>.`;\n        }\n        return `\n        <div class=\"no-webgl-support\">\n        <p style=\"text-align: center;\">${message}</p>\n        </div>\n        `\n    }\n\n}\n\nexport { Detector };"]}